{"version":3,"sources":["webpack://VueTreeselect/webpack/bootstrap","webpack://VueTreeselect/external \"@babel/runtime/helpers/defineProperty\"","webpack://VueTreeselect/external \"babel-helper-vue-jsx-merge-props\"","webpack://VueTreeselect/external \"@babel/runtime/helpers/toConsumableArray\"","webpack://VueTreeselect/external \"lodash/noop\"","webpack://VueTreeselect/external \"lodash/debounce\"","webpack://VueTreeselect/external \"is-promise\"","webpack://VueTreeselect/external \"lodash/once\"","webpack://VueTreeselect/external \"lodash/identity\"","webpack://VueTreeselect/external \"lodash/constant\"","webpack://VueTreeselect/external \"lodash/last\"","webpack://VueTreeselect/external \"@babel/runtime/helpers/slicedToArray\"","webpack://VueTreeselect/external \"fuzzysearch\"","webpack://VueTreeselect/external \"watch-size\"","webpack://VueTreeselect/external \"@babel/runtime/helpers/typeof\"","webpack://VueTreeselect/external \"vue\"","webpack://VueTreeselect/./src/utils/warning.js","webpack://VueTreeselect/./src/utils/onLeftClick.js","webpack://VueTreeselect/./src/utils/scrollIntoView.js","webpack://VueTreeselect/./src/utils/watchSize.js","webpack://VueTreeselect/./src/utils/removeFromArray.js","webpack://VueTreeselect/./src/utils/setupResizeAndScrollEventListeners.js","webpack://VueTreeselect/./src/utils/isNaN.js","webpack://VueTreeselect/./src/utils/createMap.js","webpack://VueTreeselect/./src/utils/deepExtend.js","webpack://VueTreeselect/./src/utils/includes.js","webpack://VueTreeselect/./src/utils/find.js","webpack://VueTreeselect/./src/utils/quickDiff.js","webpack://VueTreeselect/./src/constants.js","webpack://VueTreeselect/./src/mixins/treeselectMixin.js","webpack://VueTreeselect/src/components/HiddenFields.vue","webpack://VueTreeselect/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://VueTreeselect/./src/components/HiddenFields.vue","webpack://VueTreeselect/src/components/Input.vue","webpack://VueTreeselect/./src/components/Input.vue","webpack://VueTreeselect/./src/components/Placeholder.vue","webpack://VueTreeselect/src/components/Placeholder.vue","webpack://VueTreeselect/./src/components/SingleValue.vue","webpack://VueTreeselect/src/components/SingleValue.vue","webpack://VueTreeselect/./src/components/icons/Delete.vue?2d39","webpack://VueTreeselect/src/components/icons/Delete.vue","webpack://VueTreeselect/./src/components/icons/Delete.vue","webpack://VueTreeselect/./src/components/MultiValueItem.vue","webpack://VueTreeselect/src/components/MultiValueItem.vue","webpack://VueTreeselect/./src/components/MultiValue.vue","webpack://VueTreeselect/src/components/MultiValue.vue","webpack://VueTreeselect/./src/components/icons/Arrow.vue?2ad4","webpack://VueTreeselect/src/components/icons/Arrow.vue","webpack://VueTreeselect/./src/components/icons/Arrow.vue","webpack://VueTreeselect/./src/components/Control.vue","webpack://VueTreeselect/src/components/Control.vue","webpack://VueTreeselect/./src/components/Tip.vue","webpack://VueTreeselect/src/components/Tip.vue","webpack://VueTreeselect/src/components/Option.vue","webpack://VueTreeselect/./src/components/Option.vue","webpack://VueTreeselect/src/components/Menu.vue","webpack://VueTreeselect/./src/components/Menu.vue","webpack://VueTreeselect/src/components/MenuPortal.vue","webpack://VueTreeselect/./src/components/MenuPortal.vue","webpack://VueTreeselect/./src/components/Treeselect.vue","webpack://VueTreeselect/src/components/Treeselect.vue","webpack://VueTreeselect/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","warning","noop","onLeftClick","mouseDownHandler","evt","type","button","args","this","scrollIntoView","$scrollingEl","$focusedEl","scrollingReact","getBoundingClientRect","focusedRect","overScroll","offsetHeight","bottom","scrollTop","Math","min","offsetTop","clientHeight","scrollHeight","top","max","intervalId","removeFromArray","arr","elem","idx","indexOf","splice","registered","test","item","$el","listener","lastWidth","lastHeight","width","offsetWidth","height","watchSizeForIE9","push","setInterval","forEach","length","clearInterval","watchSize","isIE9","document","documentMode","locked","removeSizeWatcher","watchSizeForBrowsersOtherThanIE9","isScrollElment","getComputedStyle","overflow","overflowX","overflowY","setupResizeAndScrollEventListeners","$scrollParents","$parent","parentNode","nodeName","nodeType","ELEMENT_NODE","window","findScrollParents","addEventListener","passive","scrollParent","removeEventListener","$scrollParent","isNaN","x","createMap","isPlainObject","getPrototypeOf","deepExtend","target","source","keys","len","obj","includes","arrOrStr","find","predicate","ctx","quickDiff","arrA","arrB","LOAD_ROOT_OPTIONS","LOAD_CHILDREN_OPTIONS","ASYNC_SEARCH","KEY_CODES","sortValueByIndex","a","b","level","index","match","enableFuzzyMatch","needle","haystack","fuzzysearch","getErrorMessage","err","message","String","instanceId","provide","instance","props","allowClearingDisabled","Boolean","default","allowSelectingDisabledDescendants","alwaysOpen","appendToBody","async","autoFocus","autoLoadRootOptions","autoDeselectAncestors","autoDeselectDescendants","autoSelectAncestors","autoSelectDescendants","backspaceRemoves","beforeClearAll","Function","constant","branchNodesFirst","cacheOptions","clearable","clearAllText","clearOnSelect","clearValueText","closeOnSelect","defaultExpandLevel","Number","defaultOptions","deleteRemoves","delimiter","flattenSearchResults","disableBranchNodes","disabled","disableFuzzyMatching","flat","joinValues","limit","Infinity","limitText","count","loadingText","loadOptions","matchKeys","Array","maxHeight","multiple","noChildrenText","noOptionsText","noResultsText","normalizer","identity","openDirection","validator","openOnClick","openOnFocus","options","placeholder","required","retryText","retryTitle","searchable","searchNested","searchPromptText","showCount","startSearchLength","waitSearchFinishTime","showCountOf","showCountOnSearch","sortValueBy","tabIndex","valueConsistsOf","valueFormat","zIndex","data","trigger","isFocused","searchQuery","menu","isOpen","current","lastScrollPosition","placement","forest","normalizedOptions","nodeMap","checkedStateMap","selectedNodeIds","extractCheckedNodeIdsFromValue","selectedNodeMap","rootOptionsStates","isLoaded","isLoading","loadingError","localSearch","active","noResults","countMap","lastSearchInput","remoteSearch","hasBranchNodes","computed","selectedNodes","map","getNode","internalValue","single","slice","filter","id","node","isRootNode","isSelected","isLeaf","children","indeterminateNodeIds","selectedNode","ancestors","ancestor","sort","sortValueByLevel","hasValue","visibleOptionIds","traverseAllNodesByIndex","shouldOptionBeIncludedInSearchResult","isBranch","shouldExpand","hasVisibleOptions","showCountOnSearchComputed","shouldFlattenOptions","watch","newValue","openMenu","closeMenu","initialize","oldValue","$emit","getValue","getInstanceId","buildForestState","handler","isArray","deep","immediate","handleRemoteSearch","handleLocalSearch","nodeIdsFromValue","fixSelectedNodeIds","methods","verifyProps","propName","resetFlags","_blurOnSelect","getRemoteSearchEntry","prevNodeMap","keepDataOfSelectedNodes","normalize","some","rootNode","rawNodes","raw","nodeId","createFallbackNode","extractNodeFromValue","fallbackNode","label","enhancedNormalizer","isFallbackNode","isDisabled","isNew","$set","defaultNode","nodeIdListOfPrevValue","nextSelectedNodeIds","traverseDescendantsBFS","descendant","queue","shift","callback","currNode","traverseDescendantsDFS","child","traverseAllNodesDFS","walk","toggleClickOutsideEvent","enabled","handleClickOutside","getValueContainer","$refs","control","getInput","input","focusInput","focus","blurInput","blur","handleMouseDown","preventDefault","stopPropagation","contains","wrapper","retry","done","resetHighlightedOptionWhenNecessary","ignore","now","Date","setTimeout","diff","isExpandedOnSearch","showAllChildrenOnSearch","isMatched","hasMatchedDescendants","lowerCasedSearchQuery","trim","toLocaleLowerCase","splitSearchQuery","replace","split","every","filterValue","nestedSearchLabel","matchKey","lowerCased","entry","callLoadOptionsProp","action","isPending","start","succeed","fail","end","$watch","isExpanded","shouldShowOptionInMenu","getControl","getMenu","$menu","portal","portalTarget","setCurrentHighlightedOption","scroll","prev","isHighlighted","scrollToOption","$option","querySelector","$nextTick","forceReset","highlightFirstOption","first","highlightPrevOption","highlightLastOption","highlightNextOption","next","last","getLast","resetSearchQuery","saveMenuScrollPosition","restoreMenuScrollPosition","loadRootOptions","toggleMenu","toggleExpanded","nextState","childrenStates","loadChildrenOptions","selectedNodeId","ancestorNode","nodes","checkDuplication","verifyNodeShape","isDefaultExpanded","reduce","normalized","concat","hasDisabledDescendants","branchNodes","option","leafNodes","once","result","isPromise","then","catch","console","error","JSON","stringify","undefined","select","clear","_selectNode","_deselectNode","addValue","isFullyChecked","curr","removeValue","hasUncheckedSomeDescendants","removeLastValue","lastValue","lastSelectedNode","created","mounted","destroyed","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","component","__file","inputWidth","_h","$createElement","_c","_self","attrs","xmlns","viewBox","_withStripped","VERSION","Treeselect","PKG_VERSION"],"mappings":";;;;;2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,IAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,QAAQ,0C,cCAzBjC,EAAOD,QAAUkC,QAAQ,qC,cCAzBjC,EAAOD,QAAUkC,QAAQ,6C,cCAzBjC,EAAOD,QAAUkC,QAAQ,gB,cCAzBjC,EAAOD,QAAUkC,QAAQ,oB,cCAzBjC,EAAOD,QAAUkC,QAAQ,e,cCAzBjC,EAAOD,QAAUkC,QAAQ,gB,cCAzBjC,EAAOD,QAAUkC,QAAQ,oB,cCAzBjC,EAAOD,QAAUkC,QAAQ,oB,cCAzBjC,EAAOD,QAAUkC,QAAQ,gB,cCAzBjC,EAAOD,QAAUkC,QAAQ,yC,cCAzBjC,EAAOD,QAAUkC,QAAQ,gB,cCAzBjC,EAAOD,QAAUkC,QAAQ,e,cCAzBjC,EAAOD,QAAUkC,QAAQ,kC,cCAzBjC,EAAOD,QAAUkC,QAAQ,Q,8ZCEZC,E,OACkBC,ECHxB,SAASC,EAAYC,GAC1B,OAAO,SAAqBC,GAC1B,GAAiB,cAAbA,EAAIC,MAAuC,IAAfD,EAAIE,OAAc,4BADhBC,EACgB,iCADhBA,EACgB,kBAChDJ,EAAiBjC,KAAjB,MAAAiC,EAAgB,CAAMK,KAAMJ,GAAZ,OAAoBG,MCFnC,SAASE,EAAeC,EAAcC,GAC3C,IAAMC,EAAiBF,EAAaG,wBAC9BC,EAAcH,EAAWE,wBACzBE,EAAaJ,EAAWK,aAAe,EAEzCF,EAAYG,OAASF,EAAaH,EAAeK,OACnDP,EAAaQ,UAAYC,KAAKC,IAC5BT,EAAWU,UAAYV,EAAWW,aAAeZ,EAAaM,aAAeD,EAC7EL,EAAaa,cAENT,EAAYU,IAAMT,EAAaH,EAAeY,MACvDd,EAAaQ,UAAYC,KAAKM,IAAId,EAAWU,UAAYN,EAAY,I,ICTrEW,E,iCCHG,SAASC,EAAgBC,EAAKC,GACnC,IAAMC,EAAMF,EAAIG,QAAQF,IACX,IAATC,GAAYF,EAAII,OAAOF,EAAK,GDElC,IAAMG,EAAa,GAcnB,SAASC,EAAKC,GAAM,IACVC,EAAyCD,EAAzCC,IAAKC,EAAoCF,EAApCE,SAAUC,EAA0BH,EAA1BG,UAAWC,EAAeJ,EAAfI,WAC5BC,EAAQJ,EAAIK,YACZC,EAASN,EAAIpB,aAEfsB,IAAcE,GAASD,IAAeG,IACxCP,EAAKG,UAAYE,EACjBL,EAAKI,WAAaG,EAElBL,EAAS,CAAEG,QAAOE,YAItB,SAASC,EAAgBP,EAAKC,GAC5B,IAAMF,EAAO,CACXC,MACAC,WACAC,UAAW,KACXC,WAAY,MAad,OANAN,EAAWW,KAAKT,GAGhBD,EAAKC,GAtCLT,EAAamB,aAAY,WACvBZ,EAAWa,QAAQZ,KAJG,KAiCR,WACdP,EAAgBM,EAAYE,GACvBF,EAAWc,SA1BlBC,cAActB,GACdA,EAAa,OAqCR,SAASuB,EAAUb,EAAKC,GAE7B,IAAMa,EAAkC,IAA1BC,SAASC,aAGnBC,GAAS,EAKPC,GAHiBJ,EACnBP,EACAY,KACqCnB,GAJjB,kBAAaiB,GAAUhB,EAAQ,WAAR,gBAO/C,OAFAgB,GAAS,EAEFC,EEpDT,SAASE,EAAepB,GAAK,MAEgBqB,iBAAiBrB,GAApDsB,EAFmB,EAEnBA,SAAUC,EAFS,EAETA,UAAWC,EAFF,EAEEA,UAC7B,MAAO,wBAAwB1B,KAAKwB,EAAWE,EAAYD,GAGtD,SAASE,EAAmCzB,EAAKC,GACtD,IAAMyB,EApBR,SAA2B1B,GAIzB,IAHA,IAAM0B,EAAiB,GACnBC,EAAU3B,EAAI4B,WAEXD,GAAgC,SAArBA,EAAQE,UAAuBF,EAAQG,WAAaf,SAASgB,cACzEX,EAAeO,IAAUD,EAAelB,KAAKmB,GACjDA,EAAUA,EAAQC,WAIpB,OAFAF,EAAelB,KAAKwB,QAEbN,EAUgBO,CAAkBjC,GAOzC,OALAgC,OAAOE,iBAAiB,SAAUjC,EAAU,CAAEkC,SAAS,IACvDT,EAAehB,SAAQ,SAAA0B,GACrBA,EAAaF,iBAAiB,SAAUjC,EAAU,CAAEkC,SAAS,OAGxD,WACLH,OAAOK,oBAAoB,SAAUpC,EAAU,CAAEkC,SAAS,IAC1DT,EAAehB,SAAQ,SAAA4B,GACrBA,EAAcD,oBAAoB,SAAUpC,EAAU,CAAEkC,SAAS,QC9BhE,SAASI,EAAMC,GACpB,OAAOA,GAAMA,E,oECDFC,EAAY,kBAAMpG,OAAOY,OAAO,O,iBCA7C,SAASyF,EAAc9F,GACrB,OAAa,MAATA,GAAkC,WAAjB,IAAOA,IACrBP,OAAOsG,eAAe/F,KAAWP,OAAOkB,UAY1C,SAASqF,EAAWC,EAAQC,GACjC,GAAIJ,EAAcI,GAGhB,IAFA,IAAMC,EAAO1G,OAAO0G,KAAKD,GAEhBnH,EAAI,EAAGqH,EAAMD,EAAKpC,OAAQhF,EAAIqH,EAAKrH,IAblCsH,EAcHJ,EAdQ3F,EAcA6F,EAAKpH,GAblB+G,EADkB9F,EAcIkG,EAAOC,EAAKpH,MAZpCsH,EAAI/F,KAAS+F,EAAI/F,GAAO,IACxB0F,EAAWK,EAAI/F,GAAMN,IAErBqG,EAAI/F,GAAON,EALf,IAAcqG,EAAK/F,EAAKN,EAkBtB,OAAOiG,E,oBCvBF,SAASK,EAASC,EAAU1D,GACjC,OAAmC,IAA5B0D,EAASxD,QAAQF,GCDnB,SAAS2D,EAAK5D,EAAK6D,EAAWC,GACnC,IAAK,IAAI3H,EAAI,EAAGqH,EAAMxD,EAAImB,OAAQhF,EAAIqH,EAAKrH,IACzC,GAAI0H,EAAUvH,KAAKwH,EAAK9D,EAAI7D,GAAIA,EAAG6D,GAAM,OAAOA,EAAI7D,GCFjD,SAAS4H,EAAUC,EAAMC,GAC9B,GAAID,EAAK7C,SAAW8C,EAAK9C,OAAQ,OAAO,EAExC,IAAK,IAAIhF,EAAI,EAAGA,EAAI6H,EAAK7C,OAAQhF,IAC/B,GAAI6H,EAAK7H,KAAO8H,EAAK9H,GAAI,OAAO,EAGlC,OAAO,ECNF,IAcM+H,EAAoB,oBACpBC,EAAwB,wBACxBC,EAAe,eAcfC,EACA,EADAA,EAEJ,GAFIA,EAGH,GAHGA,EAIN,GAJMA,EAKL,GALKA,GAMC,GANDA,GAOD,GAPCA,GAQE,GARFA,GASC,GATDA,GAUH,G,qkBCtBV,SAASC,GAAiBC,EAAGC,GAE3B,IADA,IAAIrI,EAAI,IACL,CACD,GAAIoI,EAAEE,MAAQtI,EAAG,OAAQ,EACzB,GAAIqI,EAAEC,MAAQtI,EAAG,OAAO,EACxB,GAAIoI,EAAEG,MAAMvI,KAAOqI,EAAEE,MAAMvI,GAAI,OAAOoI,EAAEG,MAAMvI,GAAKqI,EAAEE,MAAMvI,GAC3DA,KAyBJ,SAASwI,GAAMC,EAAkBC,EAAQC,GACvC,OAAOF,EACHG,IAAYF,EAAQC,GACpBpB,EAASoB,EAAUD,GAGzB,SAASG,GAAgBC,GACvB,OAAOA,EAAIC,SAAqCC,OAAOF,GAGzD,IAAIG,GAAa,EAEF,IACbC,QADa,WAEX,MAAO,CAGLC,SAAU1G,OAId2G,MAAO,CAILC,sBAAuB,CACrB/G,KAAMgH,QACNC,SAAS,GAOXC,kCAAmC,CACjClH,KAAMgH,QACNC,SAAS,GAMXE,WAAY,CACVnH,KAAMgH,QACNC,SAAS,GAMXG,aAAc,CACZpH,KAAMgH,QACNC,SAAS,GAMXI,MAAO,CACLrH,KAAMgH,QACNC,SAAS,GAMXK,UAAW,CACTtH,KAAMgH,QACNC,SAAS,GAMXM,oBAAqB,CACnBvH,KAAMgH,QACNC,SAAS,GAMXO,sBAAuB,CACrBxH,KAAMgH,QACNC,SAAS,GAMXQ,wBAAyB,CACvBzH,KAAMgH,QACNC,SAAS,GAMXS,oBAAqB,CACnB1H,KAAMgH,QACNC,SAAS,GAMXU,sBAAuB,CACrB3H,KAAMgH,QACNC,SAAS,GAMXW,iBAAkB,CAChB5H,KAAMgH,QACNC,SAAS,GAQXY,eAAgB,CACd7H,KAAM8H,SACNb,QAASc,KAAS,IAMpBC,iBAAkB,CAChBhI,KAAMgH,QACNC,SAAS,GAMXgB,aAAc,CACZjI,KAAMgH,QACNC,SAAS,GAMXiB,UAAW,CACTlI,KAAMgH,QACNC,SAAS,GAMXkB,aAAc,CACZnI,KAAM0G,OACNO,QAAS,aAQXmB,cAAe,CACbpI,KAAMgH,QACNC,SAAS,GAMXoB,eAAgB,CACdrI,KAAM0G,OACNO,QAAS,eAOXqB,cAAe,CACbtI,KAAMgH,QACNC,SAAS,GAOXsB,mBAAoB,CAClBvI,KAAMwI,OACNvB,QAAS,GAQXwB,eAAgB,CACdxB,SAAS,GAMXyB,cAAe,CACb1I,KAAMgH,QACNC,SAAS,GAMX0B,UAAW,CACT3I,KAAM0G,OACNO,QAAS,KAQX2B,qBAAsB,CACpB5I,KAAMgH,QACNC,SAAS,GAMX4B,mBAAoB,CAClB7I,KAAMgH,QACNC,SAAS,GAMX6B,SAAU,CACR9I,KAAMgH,QACNC,SAAS,GAMX8B,qBAAsB,CACpB/I,KAAMgH,QACNC,SAAS,GASX+B,KAAM,CACJhJ,KAAMgH,QACNC,SAAS,GAOXN,WAAY,CAEVM,QAAS,2BAASN,KAAT,OACT3G,KAAM,CAAE0G,OAAQ8B,SAMlBS,WAAY,CACVjJ,KAAMgH,QACNC,SAAS,GAOXiC,MAAO,CACLlJ,KAAMwI,OACNvB,QAASkC,KAOXC,UAAW,CACTpJ,KAAM8H,SACNb,QAAS,SAA0BoC,GACjC,oBAAcA,EAAd,WAOJC,YAAa,CACXtJ,KAAM0G,OACNO,QAAS,cAOXsC,YAAa,CACXvJ,KAAM8H,UAMR0B,UAAW,CACTxJ,KAAMyJ,MACNxC,QAASc,IAAS,CAAE,WAMtB2B,UAAW,CACT1J,KAAMwI,OACNvB,QAAS,KAMX0C,SAAU,CACR3J,KAAMgH,QACNC,SAAS,GAMXhJ,KAAM,CACJ+B,KAAM0G,QAMRkD,eAAgB,CACd5J,KAAM0G,OACNO,QAAS,mBAMX4C,cAAe,CACb7J,KAAM0G,OACNO,QAAS,yBAMX6C,cAAe,CACb9J,KAAM0G,OACNO,QAAS,uBAOX8C,WAAY,CACV/J,KAAM8H,SACNb,QAAS+C,KAeXC,cAAe,CACbjK,KAAM0G,OACNO,QAAS,OACTiD,UAHa,SAGHvL,GAER,OAAOsG,EADkB,CAAE,OAAQ,MAAO,SAAU,QAAS,SAC3BtG,KAOtCwL,YAAa,CACXnK,KAAMgH,QACNC,SAAS,GAMXmD,YAAa,CACXpK,KAAMgH,QACNC,SAAS,GAOXoD,QAAS,CACPrK,KAAMyJ,OAMRa,YAAa,CACXtK,KAAM0G,OACNO,QAAS,aAMXsD,SAAU,CACRvK,KAAMgH,QACNC,SAAS,GAMXuD,UAAW,CACTxK,KAAM0G,OACNO,QAAS,UAMXwD,WAAY,CACVzK,KAAM0G,OACNO,QAAS,kBAMXyD,WAAY,CACV1K,KAAMgH,QACNC,SAAS,GAMX0D,aAAc,CACZ3K,KAAMgH,QACNC,SAAS,GAMX2D,iBAAkB,CAChB5K,KAAM0G,OACNO,QAAS,qBAMX4D,UAAW,CACT7K,KAAMgH,QACNC,SAAS,GAOX6D,kBAAmB,CACjB9K,KAAMwI,OACNvB,QAAS,GAQX8D,qBAAsB,CACpB/K,KAAMwI,OACNvB,QAAS,GAWX+D,YAAa,CACXhL,KAAM0G,OACNO,QDpjBsB,eCqjBtBiD,UAHW,SAGDvL,GAER,OAAOsG,EADkB,CDtjBL,eACG,kBACF,gBACG,oBCojBUtG,KAStCsM,kBAAmB,KAUnBC,YAAa,CACXlL,KAAM0G,OACNO,QD3jBwB,iBC4jBxBiD,UAHW,SAGDvL,GAER,OAAOsG,EADkB,CD7jBH,iBACT,QACA,SC4jBqBtG,KAOtCwM,SAAU,CACRnL,KAAMwI,OACNvB,QAAS,GAUXtI,MAAO,KAUPyM,gBAAiB,CACfpL,KAAM0G,OACNO,QDlmByB,kBCmmBzBiD,UAHe,SAGLvL,GAER,OAAOsG,EADkB,CDrmBd,MACY,kBACF,gBACS,0BCmmBItG,KAWtC0M,YAAa,CACXrL,KAAM0G,OACNO,QAAS,MAMXqE,OAAQ,CACNtL,KAAM,CAAEwI,OAAQ9B,QAChBO,QAAS,MAIbsE,KArlBa,WAslBX,MAAO,CACLC,QAAS,CAEPC,WAAW,EAEXC,YAAa,IAGfC,KAAM,CAEJC,QAAQ,EAERC,QAAS,KAETC,mBAAoB,EAEpBC,UAAW,UAGbC,OAAQ,CAENC,kBAAmB,GAEnBC,QAAS1H,IAET2H,gBAAiB3H,IAEjB4H,gBAAiBjM,KAAKkM,iCAGtBC,gBAAiB9H,KAInB+H,kBAlpBG,CACLC,UAAU,EACVC,WAAW,EACXC,aAAc,IAipBZC,YAAa,CAEXC,QAAQ,EAERC,WAAW,EAEXC,SAAUtI,KAGZuI,gBAAiB,KAGjBC,aAAcxI,IAKdyI,eAAgB,OAIpBC,SAAU,CAMRC,cANQ,WAON,OAAOhN,KAAK6L,OAAOI,gBAAgBgB,IAAIjN,KAAKkN,UAM9CC,cAbQ,WAaQ,IACVA,EADU,OAId,GAAInN,KAAKoN,QAAUpN,KAAK6I,MAAQ7I,KAAK0I,oBD1sBxB,QC0sB8C1I,KAAKiL,gBAC9DkC,EAAgBnN,KAAK6L,OAAOI,gBAAgBoB,aACvC,GD3sBkB,oBC2sBdrN,KAAKiL,gBACdkC,EAAgBnN,KAAK6L,OAAOI,gBAAgBqB,QAAO,SAAAC,GACjD,IAAMC,EAAO,EAAKN,QAAQK,GAC1B,QAAIC,EAAKC,aACD,EAAKC,WAAWF,EAAKhK,oBAE1B,GDhtBgB,kBCgtBZxD,KAAKiL,gBACdkC,EAAgBnN,KAAK6L,OAAOI,gBAAgBqB,QAAO,SAAAC,GACjD,IAAMC,EAAO,EAAKN,QAAQK,GAC1B,QAAIC,EAAKG,QACuB,IAAzBH,EAAKI,SAASrL,eAElB,GDrtByB,2BCqtBrBvC,KAAKiL,gBAA4C,OACpD4C,EAAuB,GAC7BV,EAAgBnN,KAAK6L,OAAOI,gBAAgBoB,QAC5CrN,KAAKgN,cAAc1K,SAAQ,SAAAwL,GACzBA,EAAaC,UAAUzL,SAAQ,SAAA0L,GACzBlJ,EAAS+I,EAAsBG,EAAST,KACxCzI,EAASqI,EAAea,EAAST,KACrCM,EAAqBzL,KAAK4L,EAAST,WAGvC,EAAAJ,GAAc/K,KAAd,QAAsByL,GASxB,MDpuBe,UC8tBX7N,KAAK+K,YACPoC,EAAcc,MAAK,SAACtI,EAAGC,GAAJ,OA7tB3B,SAA0BD,EAAGC,GAC3B,OAAOD,EAAEE,QAAUD,EAAEC,MACjBH,GAAiBC,EAAGC,GACpBD,EAAEE,MAAQD,EAAEC,MA0tBmBqI,CAAiB,EAAKhB,QAAQvH,GAAI,EAAKuH,QAAQtH,OD9tB/D,UC+tBJ5F,KAAK+K,aACdoC,EAAcc,MAAK,SAACtI,EAAGC,GAAJ,OAAUF,GAAiB,EAAKwH,QAAQvH,GAAI,EAAKuH,QAAQtH,OAGvEuH,GAMTgB,SAxDQ,WAyDN,OAAOnO,KAAKmN,cAAc5K,OAAS,GAMrC6K,OA/DQ,WAgEN,OAAQpN,KAAKwJ,UAUf4E,iBA1EQ,WA0EW,WACXA,EAAmB,GAYzB,OAVApO,KAAKqO,yBAAwB,SAAAb,GAK3B,GAJK,EAAKhB,YAAYC,SAAU,EAAK6B,qCAAqCd,IACxEY,EAAiBhM,KAAKoL,EAAKD,IAGzBC,EAAKe,WAAa,EAAKC,aAAahB,GACtC,OAAO,KAIJY,GAMTK,kBA7FQ,WA8FN,OAAwC,IAAjCzO,KAAKoO,iBAAiB7L,QAM/BmM,0BApGQ,WAwGN,MAAyC,kBAA3B1O,KAAK8K,kBACf9K,KAAK8K,kBACL9K,KAAK0K,WAEXiE,qBA5GQ,WA6GN,OAAO3O,KAAKwM,YAAYC,QAAUzM,KAAKyI,uBAK3CmG,MAAO,CACL5H,WADK,SACM6H,GACLA,EAAU7O,KAAK8O,WACd9O,KAAK+O,aAGZlH,iBANK,WAOH7H,KAAKgP,cAGPrG,SAVK,SAUIkG,GAEHA,GAAY7O,KAAKwL,KAAKC,OAAQzL,KAAK+O,YAC7BF,GAAa7O,KAAKwL,KAAKC,SAAUzL,KAAKgH,YAAYhH,KAAK8O,YAGnEjG,KAhBK,WAiBH7I,KAAKgP,cAGP7B,cApBK,SAoBS0B,EAAUI,GACH9J,EAAU0J,EAAUI,IAIvBjP,KAAKkP,MAAM,QAASlP,KAAKmP,WAAYnP,KAAKoP,kBAG5D/F,UA5BK,WA6BHrJ,KAAKgP,cAGPxF,SAhCK,SAgCIqF,GAIHA,GAAU7O,KAAKqP,oBAGrBnF,QAAS,CACPoF,QADO,WAEDtP,KAAKkH,QAETlH,KAAKgP,aACLhP,KAAKoM,kBAAkBC,SAAW/C,MAAMiG,QAAQvP,KAAKkK,WAEvDsF,MAAM,EACNC,WAAW,GAGb,sBAlDK,WAmDCzP,KAAKkH,MACPlH,KAAK0P,qBAEL1P,KAAK2P,oBAGP3P,KAAKkP,MAAM,gBAAiBlP,KAAKqL,QAAQE,YAAavL,KAAKoP,kBAG7D5Q,MA5DK,WA6DH,IAAMoR,EAAmB5P,KAAKkM,iCACX/G,EAAUyK,EAAkB5P,KAAKmN,gBACpCnN,KAAK6P,mBAAmBD,KAI5CE,QAAS,CACPC,YADO,WACO,WAoBZ,GAnBAvQ,GACE,kBAAM,EAAK0H,OAAQ,EAAKqD,cACxB,iBAAM,yEAGY,MAAhBvK,KAAKkK,SAAoBlK,KAAKoJ,aAChC5J,GACE,kBAAM,KACN,iBAAM,oFAINQ,KAAK6I,MACPrJ,GACE,kBAAM,EAAKgK,YACX,iBAAM,sEAILxJ,KAAK6I,KAAM,CACI,CAChB,sBACA,wBACA,wBACA,2BAGQvG,SAAQ,SAAA0N,GAChBxQ,GACE,kBAAO,EAAKwQ,MACZ,4BAAUA,EAAV,wCAMRC,WAtCO,WAuCLjQ,KAAKkQ,eAAgB,GAGvBlB,WA1CO,WA2CL,IAAM9E,EAAUlK,KAAKkH,MACjBlH,KAAKmQ,uBAAuBjG,QAC5BlK,KAAKkK,QAAUlK,KAAKkK,QAAQoD,QAAO,SAAAtP,GAAC,OAAIA,KAAK,GAEjD,GAAIsL,MAAMiG,QAAQrF,GAAU,CAE1B,IAAMkG,EAAcpQ,KAAK6L,OAAOE,QAChC/L,KAAK6L,OAAOE,QAAU1H,IACtBrE,KAAKqQ,wBAAwBD,GAC7BpQ,KAAK6L,OAAOC,kBAAoB9L,KAAKsQ,UDr7Bf,KCq7ByCpG,EAASkG,GAOxEpQ,KAAK6P,mBAAmB7P,KAAKmN,oBAE7BnN,KAAK6L,OAAOC,kBAAoB,GAGlC9L,KAAK8M,eAAiB9M,KAAK6L,OAAOC,kBAAkByE,MAAK,SAAAC,GAAQ,OAAIA,EAASjC,aAGhFa,cAnEO,WAoEL,OAA0B,MAAnBpP,KAAKwG,WAAqBxG,KAAKuN,GAAKvN,KAAKwG,YAGlD2I,SAvEO,WAuEI,WACT,GAAyB,OAArBnP,KAAKkL,YACP,OAAOlL,KAAKwJ,SACRxJ,KAAKmN,cAAcE,QACnBrN,KAAKmN,cAAc,GAGzB,IAAMsD,EAAWzQ,KAAKmN,cAAcF,KAAI,SAAAM,GAAE,OAAI,EAAKL,QAAQK,GAAImD,OAC/D,OAAO1Q,KAAKwJ,SAAWiH,EAAWA,EAAS,IAG7CvD,QAlFO,SAkFCyD,GAMN,OALAnR,GACE,kBAAgB,MAAVmR,KACN,4CAA0BA,MAGd,MAAVA,EAIK,KAGFA,KAAU3Q,KAAK6L,OAAOE,QACzB/L,KAAK6L,OAAOE,QAAQ4E,GACpB3Q,KAAK4Q,mBAAmBD,IAG9BC,mBApGO,SAoGYrD,GAKjB,IAAMmD,EAAM1Q,KAAK6Q,qBAAqBtD,GAEhCuD,EAAe,CACnBvD,KACAwD,MAHY/Q,KAAKgR,mBAAmBN,GAAKK,OAA7B,UAAyCxD,EAAzC,cAIZQ,UAAW,GACXvK,WDh/BsB,KCi/BtByN,gBAAgB,EAChBxD,YAAY,EACZE,QAAQ,EACRY,UAAU,EACV2C,YAAY,EACZC,OAAO,EACPrL,MAAO,EAAG,GACVD,MAAO,EACP6K,OAGF,OAAO1Q,KAAKoR,KAAKpR,KAAK6L,OAAOE,QAASwB,EAAIuD,IAG5C5E,+BA9HO,WA8H0B,WAC/B,OAAkB,MAAdlM,KAAKxB,MAAsB,GAEN,OAArBwB,KAAKkL,YACAlL,KAAKwJ,SACRxJ,KAAKxB,MAAM6O,QACX,CAAErN,KAAKxB,QAGLwB,KAAKwJ,SAAWxJ,KAAKxB,MAAQ,CAAEwB,KAAKxB,QACzCyO,KAAI,SAAAO,GAAI,OAAI,EAAKwD,mBAAmBxD,MACpCP,KAAI,SAAAO,GAAI,OAAIA,EAAKD,OAGtBsD,qBA5IO,SA4IctD,GAAI,WACjB8D,EAAc,CAAE9D,MAEtB,MAAyB,OAArBvN,KAAKkL,YACAmG,EAMOrM,EAHGhF,KAAKwJ,SACpBF,MAAMiG,QAAQvP,KAAKxB,OAASwB,KAAKxB,MAAQ,GACzCwB,KAAKxB,MAAQ,CAAEwB,KAAKxB,OAAU,IAGhC,SAAAgP,GAAI,OAAIA,GAAQ,EAAKwD,mBAAmBxD,GAAMD,KAAOA,MAGrC8D,GAGpBxB,mBA9JO,SA8JYyB,GAAuB,WACpCC,EAAsB,GAG1B,GAAIvR,KAAKoN,QAAUpN,KAAK6I,MAAQ7I,KAAK0I,oBDhhCxB,QCghC8C1I,KAAKiL,gBAC9DsG,EAAsBD,OACjB,GDjhCkB,oBCihCdtR,KAAKiL,gBACdqG,EAAsBhP,SAAQ,SAAAqO,GAC5B,GAAKA,EAAL,CAGAY,EAAoBnP,KAAKuO,GACzB,IAAMnD,EAAO,EAAKN,QAAQyD,GACtBnD,GAAQA,EAAKe,UAAU,EAAKiD,uBAAuBhE,GAAM,SAAAiE,GACvDA,GACFF,EAAoBnP,KAAKqP,EAAWlE,gBAIrC,GD7hCgB,kBC6hCZvN,KAAKiL,gBAGd,IAFA,IAAMgC,EAAM5I,IACNqN,EAAQJ,EAAsBjE,QAC7BqE,EAAMnP,QAAQ,CACnB,IAAMoO,EAASe,EAAMC,QACfnE,EAAOxN,KAAKkN,QAAQyD,GAC1BY,EAAoBnP,KAAKuO,GACrBnD,EAAKC,YACJD,EAAKhK,aACJgK,EAAKhK,WAAW+J,MAAMN,IAAMA,EAAIO,EAAKhK,WAAW+J,IAAMC,EAAKhK,WAAWoK,SAASrL,QACnD,KAA5B0K,EAAIO,EAAKhK,WAAW+J,KAAWmE,EAAMtP,KAAKoL,EAAKhK,WAAW+J,UAE7D,GDxiCyB,2BCwiCrBvN,KAAKiL,gBAMd,IALA,IAAMgC,EAAM5I,IACNqN,EAAQJ,EAAsBhE,QAAO,SAAAqD,GACzC,IAAMnD,EAAO,EAAKN,QAAQyD,GAC1B,OAAOnD,EAAKG,QAAmC,IAAzBH,EAAKI,SAASrL,UAE/BmP,EAAMnP,QAAQ,CACnB,IAAMoO,EAASe,EAAMC,QACfnE,EAAOxN,KAAKkN,QAAQyD,GAC1BY,EAAoBnP,KAAKuO,GACrBnD,EAAKC,YACJD,EAAKhK,aACJgK,EAAKhK,WAAW+J,MAAMN,IAAMA,EAAIO,EAAKhK,WAAW+J,IAAMC,EAAKhK,WAAWoK,SAASrL,QACnD,KAA5B0K,EAAIO,EAAKhK,WAAW+J,KAAWmE,EAAMtP,KAAKoL,EAAKhK,WAAW+J,KAIjDpI,EAAUnF,KAAK6L,OAAOI,gBAAiBsF,KAI1CvR,KAAK6L,OAAOI,gBAAkBsF,GAE9CvR,KAAKqP,oBAGPgB,wBAvNO,SAuNiBD,GAAa,WAGnCpQ,KAAK6L,OAAOI,gBAAgB3J,SAAQ,SAAAiL,GAClC,GAAK6C,EAAY7C,GAAjB,CACA,IAAMC,EAAO,GAAH,MACL4C,EAAY7C,IADP,IAER0D,gBAAgB,IAElB,EAAKG,KAAK,EAAKvF,OAAOE,QAASwB,EAAIC,QAIvCE,WApOO,SAoOIF,GAET,OAAgD,IAAzCxN,KAAK6L,OAAOM,gBAAgBqB,EAAKD,KAG1CiE,uBAzOO,SAyOgBhO,EAAYoO,GAEjC,GAAKpO,EAAW+K,SAEhB,IADA,IAAMmD,EAAQlO,EAAWoK,SAASP,QAC3BqE,EAAMnP,QAAQ,CACnB,IAAMsP,EAAWH,EAAM,GACnBG,EAAStD,UAAUmD,EAAMtP,KAAN,MAAAsP,EAAK,IAASG,EAASjE,WAC9CgE,EAASC,GACTH,EAAMC,UAIVG,uBArPO,SAqPgBtO,EAAYoO,GAAU,WACtCpO,EAAW+K,UAChB/K,EAAWoK,SAAStL,SAAQ,SAAAyP,GAE1B,EAAKD,uBAAuBC,EAAOH,GACnCA,EAASG,OAIbC,oBA9PO,SA8PaJ,GAAU,WAC5B5R,KAAK6L,OAAOC,kBAAkBxJ,SAAQ,SAAAkO,GAEpC,EAAKsB,uBAAuBtB,EAAUoB,GACtCA,EAASpB,OAIbnC,wBAtQO,SAsQiBuD,IACT,SAAPK,EAAOzO,GACXA,EAAWoK,SAAStL,SAAQ,SAAAyP,IACF,IAApBH,EAASG,IAAoBA,EAAMxD,UACrC0D,EAAKF,MAOXE,CAAK,CAAErE,SAAU5N,KAAK6L,OAAOC,qBAG/BoG,wBApRO,SAoRiBC,GAClBA,EACFxP,SAASmB,iBAAiB,YAAa9D,KAAKoS,oBAAoB,GAEhEzP,SAASsB,oBAAoB,YAAajE,KAAKoS,oBAAoB,IAIvEC,kBA5RO,WA6RL,OAAOrS,KAAKsS,MAAMC,QAAQD,MAAM,oBAGlCE,SAhSO,WAiSL,OAAOxS,KAAKqS,oBAAoBC,MAAMG,OAGxCC,WApSO,WAqSL1S,KAAKwS,WAAWG,SAGlBC,UAxSO,WAySL5S,KAAKwS,WAAWK,QAGlBC,gBAAiBpT,GAAY,SAAyBE,IACpDA,EAAImT,iBACJnT,EAAIoT,kBAEAhT,KAAK2I,YAEyB3I,KAAKqS,oBAAoBzQ,IAAIqR,SAASrT,EAAI6E,UAC1CzE,KAAKwL,KAAKC,SAAWzL,KAAKgK,aAAehK,KAAKqL,QAAQC,YACtFtL,KAAK8O,WAGH9O,KAAKkQ,cACPlQ,KAAK4S,YAGL5S,KAAK0S,aAGP1S,KAAKiQ,iBAGPmC,mBAjUO,SAiUYxS,GAEbI,KAAKsS,MAAMY,UAAYlT,KAAKsS,MAAMY,QAAQD,SAASrT,EAAI6E,UACzDzE,KAAK4S,YACL5S,KAAK+O,cAITY,kBAzUO,SAyUWwD,GAAO,WACf5H,EAAgBvL,KAAKqL,QAArBE,YACF6H,EAAO,kBAAM,EAAKC,qCAAoC,IACtDC,EAAS,kBAAM,EAAKD,qCAAoC,IAE9D,IAAK9H,EAIH,OAFAvL,KAAKwM,YAAYC,QAAS,EAC1BzM,KAAK4M,gBAAkB,KAChBwG,IAGT,GAAI7H,EAAYhJ,OAASvC,KAAK2K,kBAE5B,OAAO2I,IAGT,GAAItT,KAAK4K,qBAAuB,EAAG,CAEjC,IAAM2I,EAAM,IAAIC,KAChB,IAAKxT,KAAK4M,gBAOR,OALA6G,YAAW,WACT,EAAK9D,mBAAkB,KACtB3P,KAAK4K,sBAER5K,KAAK4M,gBAAkB2G,EAChBD,IAGT,IAAMI,EAAOH,EAAMvT,KAAK4M,gBACxB,GAAI8G,EAAO1T,KAAK4K,uBAAyBuI,EAMvC,OALAM,YAAW,WACT,EAAK9D,mBAAkB,KACtB3P,KAAK4K,sBAER5K,KAAK4M,gBAAkB2G,EAChBD,IAGT,GAAIH,GAASO,EAAO1T,KAAK4K,qBACvB,OAAO0I,IAGTtT,KAAK4M,gBAAkB2G,EAIzBvT,KAAKwM,YAAYC,QAAS,EAG1BzM,KAAKwM,YAAYE,WAAY,EAC7B1M,KAAKgS,qBAAoB,SAAAxE,GACJ,MAAfA,EAAKe,WACPf,EAAKmG,oBAAqB,EAC1BnG,EAAKoG,yBAA0B,EAC/BpG,EAAKqG,WAAY,EACjBrG,EAAKsG,uBAAwB,EAC7B,EAAK1C,KAAK,EAAK5E,YAAYG,SAAUa,EAAKD,IAA1C,WD5vCkB,eC6vCA,GADlB,MD3vCqB,kBC6vCA,GAFrB,MD1vCmB,gBC6vCA,GAHnB,MDzvCsB,mBC6vCA,GAJtB,QASJ,IAAMwG,EAAwBxI,EAAYyI,OAAOC,oBAC3CC,EAAmBH,EAAsBI,QAAQ,OAAQ,KAAKC,MAAM,KAC1EpU,KAAKgS,qBAAoB,SAAAxE,GACnB,EAAKhD,cAAgB0J,EAAiB3R,OAAS,EACjDiL,EAAKqG,UAAYK,EAAiBG,OAAM,SAAAC,GAAW,OACjDvO,IAAM,EAAOuO,EAAa9G,EAAK+G,sBAGjC/G,EAAKqG,UAAY,EAAKxK,UAAUkH,MAAK,SAAAiE,GAAQ,OAC3CzO,IAAO,EAAK6C,qBAAsBmL,EAAuBvG,EAAKiH,WAAWD,OAIzEhH,EAAKqG,YACP,EAAKrH,YAAYE,WAAY,EAC7Bc,EAAKO,UAAUzL,SAAQ,SAAA0L,GAAQ,OAAI,EAAKxB,YAAYG,SAASqB,EAAST,IAAnC,qBAC/BC,EAAKG,QAAQH,EAAKO,UAAUzL,SAAQ,SAAA0L,GAAQ,OAAI,EAAKxB,YAAYG,SAASqB,EAAST,IAAnC,sBD7xChC,OC8xChBC,EAAKhK,aACP,EAAKgJ,YAAYG,SAASa,EAAKhK,WAAW+J,IAA1C,cAA+D,EAE3DC,EAAKG,SAAQ,EAAKnB,YAAYG,SAASa,EAAKhK,WAAW+J,IAA1C,eAAgE,MAKlFC,EAAKqG,WAAcrG,EAAKe,UAAYf,EAAKmG,qBDtyCtB,OCuyCpBnG,EAAKhK,aAELgK,EAAKhK,WAAWmQ,oBAAqB,EACrCnG,EAAKhK,WAAWsQ,uBAAwB,MAI5CV,IAEApT,KAAK4M,gBAAkB,MAGzB8C,mBAlbO,WAkbc,WACXnE,EAAgBvL,KAAKqL,QAArBE,YACFmJ,EAAQ1U,KAAKmQ,uBACbiD,EAAO,WACX,EAAKpE,aACL,EAAKqE,qCAAoC,IAG3C,IAAqB,KAAhB9H,GAAsBvL,KAAK8H,eAAiB4M,EAAMrI,SACrD,OAAO+G,IAGTpT,KAAK2U,oBAAoB,CACvBC,OAAQpP,EACRzF,KAAM,CAAEwL,eACRsJ,UAHuB,WAIrB,OAAOH,EAAMpI,WAEfwI,MAAO,WACLJ,EAAMpI,WAAY,EAClBoI,EAAMrI,UAAW,EACjBqI,EAAMnI,aAAe,IAEvBwI,QAAS,SAAA7K,GACPwK,EAAMrI,UAAW,EACjBqI,EAAMxK,QAAUA,EAGZ,EAAKmB,QAAQE,cAAgBA,GAAa6H,KAEhD4B,KAAM,SAAA3O,GACJqO,EAAMnI,aAAenG,GAAgBC,IAEvC4O,IAAK,WACHP,EAAMpI,WAAY,MAKxB6D,qBAzdO,WAydgB,WACb5E,EAAgBvL,KAAKqL,QAArBE,YACFmJ,EAAQ1U,KAAK6M,aAAatB,IAAlB,SAzzCX,CACLc,UAAU,EACVC,WAAW,EACXC,aAAc,KAszCE,IAEZrC,QAAS,KAaX,GATAlK,KAAKkV,QACH,kBAAMR,EAAMxK,WACZ,WAEM,EAAKmB,QAAQE,cAAgBA,GAAa,EAAKyD,eAErD,CAAEQ,MAAM,IAGU,KAAhBjE,EAAoB,CACtB,GAAIjC,MAAMiG,QAAQvP,KAAKsI,gBAGrB,OAFAoM,EAAMxK,QAAUlK,KAAKsI,eACrBoM,EAAMrI,UAAW,EACVqI,EACF,IAA4B,IAAxB1U,KAAKsI,eAEd,OADAoM,EAAMrI,UAAW,EACVqI,EAQX,OAJK1U,KAAK6M,aAAatB,IACrBvL,KAAKoR,KAAKpR,KAAK6M,aAActB,EAAamJ,GAGrCA,GAGTlG,aA5fO,SA4fMhB,GACX,OAAOxN,KAAKwM,YAAYC,OAASe,EAAKmG,mBAAqBnG,EAAK2H,YAGlE7G,qCAhgBO,SAggB8Bd,GAEnC,QAAIA,EAAKqG,eAELrG,EAAKe,WAAYf,EAAKsG,uBAA0B9T,KAAKyI,yBAGpD+E,EAAKC,aAAcD,EAAKhK,WAAWoQ,2BAK1CwB,uBA5gBO,SA4gBgB5H,GACrB,QAAIxN,KAAKwM,YAAYC,SAAWzM,KAAKsO,qCAAqCd,KAM5E6H,WAnhBO,WAohBL,OAAOrV,KAAKsS,MAAMC,QAAQ3Q,KAG5B0T,QAvhBO,WAwhBL,IACMC,GADMvV,KAAKiH,aAAejH,KAAKsS,MAAMkD,OAAOC,aAAezV,MAC/CsS,MAAM9G,KAAK8G,MAAM9G,KACnC,OAAO+J,GAA4B,aAAnBA,EAAM9R,SAA0B8R,EAAQ,MAG1DG,4BA7hBO,SA6hBqBlI,GAAqB,WAAfmI,IAAe,yDACzCC,EAAO5V,KAAKwL,KAAKE,QAQvB,GAPY,MAARkK,GAAgBA,KAAQ5V,KAAK6L,OAAOE,UACtC/L,KAAK6L,OAAOE,QAAQ6J,GAAMC,eAAgB,GAG5C7V,KAAKwL,KAAKE,QAAU8B,EAAKD,GACzBC,EAAKqI,eAAgB,EAEjB7V,KAAKwL,KAAKC,QAAUkK,EAAQ,CAC9B,IAAMG,EAAiB,WACrB,IAAMP,EAAQ,EAAKD,UACbS,EAAUR,EAAMS,cAAN,2CAAwDxI,EAAKD,GAA7D,OACZwI,GAAS9V,EAAesV,EAAOQ,IAIjC/V,KAAKsV,UACPQ,IAGA9V,KAAKiW,UAAUH,KAKrBzC,oCAvjBO,WAujBiD,IAApB6C,EAAoB,wDAC9CxK,EAAY1L,KAAKwL,KAAjBE,SAGNwK,GAAyB,MAAXxK,GACZA,KAAW1L,KAAK6L,OAAOE,SACxB/L,KAAKoV,uBAAuBpV,KAAKkN,QAAQxB,KAE1C1L,KAAKmW,wBAITA,qBAnkBO,WAokBL,GAAKnW,KAAKyO,kBAAV,CAEA,IAAM2H,EAAQpW,KAAKoO,iBAAiB,GACpCpO,KAAK0V,4BAA4B1V,KAAKkN,QAAQkJ,MAGhDC,oBA1kBO,WA2kBL,GAAKrW,KAAKyO,kBAAV,CAEA,IAAMmH,EAAO5V,KAAKoO,iBAAiB7M,QAAQvB,KAAKwL,KAAKE,SAAW,EAChE,IAAc,IAAVkK,EAAa,OAAO5V,KAAKsW,sBAC7BtW,KAAK0V,4BAA4B1V,KAAKkN,QAAQlN,KAAKoO,iBAAiBwH,OAGtEW,oBAllBO,WAmlBL,GAAKvW,KAAKyO,kBAAV,CAEA,IAAM+H,EAAOxW,KAAKoO,iBAAiB7M,QAAQvB,KAAKwL,KAAKE,SAAW,EAChE,GAAI8K,IAASxW,KAAKoO,iBAAiB7L,OAAQ,OAAOvC,KAAKmW,uBACvDnW,KAAK0V,4BAA4B1V,KAAKkN,QAAQlN,KAAKoO,iBAAiBoI,OAGtEF,oBA1lBO,WA2lBL,GAAKtW,KAAKyO,kBAAV,CAEA,IAAMgI,EAAOC,IAAQ1W,KAAKoO,kBAC1BpO,KAAK0V,4BAA4B1V,KAAKkN,QAAQuJ,MAGhDE,iBAjmBO,WAkmBL3W,KAAKqL,QAAQE,YAAc,IAG7BwD,UArmBO,YAsmBA/O,KAAKwL,KAAKC,SAAYzL,KAAK2I,UAAY3I,KAAKgH,aACjDhH,KAAK4W,yBACL5W,KAAKwL,KAAKC,QAAS,EACnBzL,KAAKkS,yBAAwB,GAC7BlS,KAAK2W,mBACL3W,KAAKkP,MAAM,QAASlP,KAAKmP,WAAYnP,KAAKoP,mBAG5CN,SA9mBO,WA+mBD9O,KAAK2I,UAAY3I,KAAKwL,KAAKC,SAC/BzL,KAAKwL,KAAKC,QAAS,EACnBzL,KAAKiW,UAAUjW,KAAKqT,qCACpBrT,KAAKiW,UAAUjW,KAAK6W,2BACf7W,KAAKkK,SAAYlK,KAAKkH,OAAOlH,KAAK8W,kBACvC9W,KAAKkS,yBAAwB,GAC7BlS,KAAKkP,MAAM,OAAQlP,KAAKoP,mBAG1B2H,WAxnBO,WAynBD/W,KAAKwL,KAAKC,OACZzL,KAAK+O,YAEL/O,KAAK8O,YAITkI,eAhoBO,SAgoBQxJ,GACb,IAAIyJ,EAEAjX,KAAKwM,YAAYC,QACnBwK,EAAYzJ,EAAKmG,oBAAsBnG,EAAKmG,sBAC7BnG,EAAKoG,yBAA0B,GAE9CqD,EAAYzJ,EAAK2H,YAAc3H,EAAK2H,WAGlC8B,IAAczJ,EAAK0J,eAAe7K,UACpCrM,KAAKmX,oBAAoB3J,IAI7B6B,iBA/oBO,WA+oBY,WACXlD,EAAkB9H,IACxBrE,KAAK6L,OAAOI,gBAAgB3J,SAAQ,SAAA8U,GAClCjL,EAAgBiL,IAAkB,KAEpCpX,KAAK6L,OAAOM,gBAAkBA,EAE9B,IAAMH,EAAkB3H,IACpBrE,KAAKwJ,WACPxJ,KAAKqO,yBAAwB,SAAAb,GAC3BxB,EAAgBwB,EAAKD,IDvhDN,KC0hDjBvN,KAAKgN,cAAc1K,SAAQ,SAAAwL,GACzB9B,EAAgB8B,EAAaP,IDzhDhB,EC2hDR,EAAK1E,MAAS,EAAKH,oBACtBoF,EAAaC,UAAUzL,SAAQ,SAAA+U,GACxB,EAAK3J,WAAW2J,KACnBrL,EAAgBqL,EAAa9J,ID/hDhB,UCqiDvBvN,KAAK6L,OAAOG,gBAAkBA,GAGhCgF,mBA3qBO,SA2qBYN,GACjB,gBACKA,GACA1Q,KAAK4J,WAAW8G,EAAK1Q,KAAKoP,mBAIjCkB,UAlrBO,SAkrBG9M,EAAY8T,EAAOlH,GAAa,WACpCtE,EAAoBwL,EACrBrK,KAAI,SAAAO,GAAI,MAAI,CAAE,EAAKwD,mBAAmBxD,GAAOA,MAC7CP,KAAI,WAAgBnH,GAAU,eAAvB0H,EAAuB,KAAjBkD,EAAiB,KAC7B,EAAK6G,iBAAiB/J,GACtB,EAAKgK,gBAAgBhK,GAFQ,IAIrBD,EAA2CC,EAA3CD,GAAIwD,EAAuCvD,EAAvCuD,MAAOnD,EAAgCJ,EAAhCI,SAAU6J,EAAsBjK,EAAtBiK,kBACvBhK,ED3jDc,OC2jDDjK,EACbqC,EAAQ4H,EAAa,EAAIjK,EAAWqC,MAAQ,EAC5C0I,EAAWjF,MAAMiG,QAAQ3B,IAA0B,OAAbA,EACtCD,GAAUY,EACV2C,IAAe1D,EAAK0D,aAAgB,EAAKrI,OAAS4E,GAAcjK,EAAW0N,WAC3EC,IAAU3D,EAAK2D,MACfsD,EAAa,EAAKpL,UAAUqO,QAAO,SAAC9B,EAAM9W,GAAP,gBACpC8W,GADoC,UAEtC9W,GAzhDqBN,EAyhDUgP,EAAK1O,GAxhD1B,iBAAVN,EAA2BA,EACjB,iBAAVA,GAAuB2F,EAAM3F,GAEjC,GAFgDA,EAAQ,IAuhDVyV,sBAzhDvD,IAAkCzV,IA0hDpB,IACE+V,EAAoB9G,EACtBgH,EAAW1D,MACXvN,EAAW+Q,kBAAoB,IAAME,EAAW1D,MAE9C4G,EAAa,EAAKvG,KAAK,EAAKvF,OAAOE,QAASwB,EAAIlJ,KAkBtD,GAjBA,EAAK+M,KAAKuG,EAAY,KAAMpK,GAC5B,EAAK6D,KAAKuG,EAAY,QAAS5G,GAC/B,EAAKK,KAAKuG,EAAY,QAAS9R,GAC/B,EAAKuL,KAAKuG,EAAY,YAAalK,EAAa,GAAK,CAAEjK,GAAaoU,OAAOpU,EAAWuK,YACtF,EAAKqD,KAAKuG,EAAY,SAAUlK,EAAa,GAAKjK,EAAWsC,OAAO8R,OAAO9R,IAC3E,EAAKsL,KAAKuG,EAAY,aAAcnU,GACpC,EAAK4N,KAAKuG,EAAY,aAAclD,GACpC,EAAKrD,KAAKuG,EAAY,oBAAqBpD,GAC3C,EAAKnD,KAAKuG,EAAY,aAAczG,GACpC,EAAKE,KAAKuG,EAAY,QAASxG,GAC/B,EAAKC,KAAKuG,EAAY,aAAa,GACnC,EAAKvG,KAAKuG,EAAY,iBAAiB,GACvC,EAAKvG,KAAKuG,EAAY,WAAYpJ,GAClC,EAAK6C,KAAKuG,EAAY,SAAUhK,GAChC,EAAKyD,KAAKuG,EAAY,aAAclK,GACpC,EAAK2D,KAAKuG,EAAY,MAAOjH,GAEzBnC,EAAU,OACNlC,EAAW/C,MAAMiG,QAAQ3B,GAE/B,EAAKwD,KAAKuG,EAAY,iBAAtB,SA3jDH,CACLtL,UAAU,EACVC,WAAW,EACXC,aAAc,KAwjDN,IAEEF,cAEF,EAAK+E,KAAKuG,EAAY,aAA2C,kBAAtBF,EACvCA,EACA5R,EAAQ,EAAKuC,oBACjB,EAAKgJ,KAAKuG,EAAY,yBAAyB,GAC/C,EAAKvG,KAAKuG,EAAY,0BAA0B,GAChD,EAAKvG,KAAKuG,EAAY,sBAAsB,GAC5C,EAAKvG,KAAKuG,EAAY,2BAA2B,GACjD,EAAKvG,KAAKuG,EAAY,SAAtB,WDjmDgB,eCkmDE,GADlB,MDhmDmB,kBCkmDE,GAFrB,MD/lDiB,gBCkmDE,GAHnB,MD9lDoB,mBCkmDE,GAJtB,IAMA,EAAKvG,KAAKuG,EAAY,WAAYtL,EAC9B,EAAKiE,UAAUqH,EAAY/J,EAAUwC,GACrC,KAEsB,IAAtBqH,GAA4BE,EAAW5J,UAAUzL,SAAQ,SAAA0L,GAC3DA,EAASmH,YAAa,KAGnB9I,GAAwC,mBAArB,EAAKjD,aAKjBiD,GAAYsL,EAAWxC,YACjC,EAAKgC,oBAAoBQ,GALzBnY,GACE,kBAAM,KACN,iBAAM,yFAgBZ,GATAmY,EAAW5J,UAAUzL,SAAQ,SAAA0L,GAAQ,OAAIA,EAAS9E,MAAT,qBACrCyE,GAAQgK,EAAW5J,UAAUzL,SAAQ,SAAA0L,GAAQ,OAAIA,EAAS9E,MAAT,sBAChDuE,IACHjK,EAAW0F,MAAX,cAAkC,EAC9ByE,IAAQnK,EAAW0F,MAAX,eAAmC,GAC3CgI,IAAY1N,EAAWqU,wBAAyB,IAIlDzH,GAAeA,EAAY7C,GAAK,CAClC,IAAMqI,EAAOxF,EAAY7C,GAEzBoK,EAAW9D,UAAY+B,EAAK/B,UAC5B8D,EAAW/D,wBAA0BgC,EAAKhC,wBAC1C+D,EAAW9B,cAAgBD,EAAKC,cAE5BD,EAAKrH,UAAYoJ,EAAWpJ,WAC9BoJ,EAAWxC,WAAaS,EAAKT,WAC7BwC,EAAWhE,mBAAqBiC,EAAKjC,mBAIjCiC,EAAKsB,eAAe7K,WAAasL,EAAWT,eAAe7K,SAG7DsL,EAAWxC,YAAa,EAGxBwC,EAAWT,eAAX,MAAiCtB,EAAKsB,iBAK5C,OAAOS,KAGX,GAAI3X,KAAK6H,iBAAkB,CACzB,IAAMiQ,EAAchM,EAAkBwB,QAAO,SAAAyK,GAAM,OAAIA,EAAOxJ,YACxDyJ,EAAYlM,EAAkBwB,QAAO,SAAAyK,GAAM,OAAIA,EAAOpK,UAC5D7B,EAAoBgM,EAAYF,OAAOI,GAGzC,OAAOlM,GAGTgL,gBA7yBO,WA6yBW,WAChB9W,KAAK2U,oBAAoB,CACvBC,OAAQtP,EACRuP,UAAW,WACT,OAAO,EAAKzI,kBAAkBE,WAEhCwI,MAAO,WACL,EAAK1I,kBAAkBE,WAAY,EACnC,EAAKF,kBAAkBG,aAAe,IAExCwI,QAAS,WACP,EAAK3I,kBAAkBC,UAAW,EAElC,EAAK4J,WAAU,WACb,EAAK5C,qCAAoC,OAG7C2B,KAAM,SAAA3O,GACJ,EAAK+F,kBAAkBG,aAAenG,GAAgBC,IAExD4O,IAAK,WACH,EAAK7I,kBAAkBE,WAAY,MAKzC6K,oBAv0BO,SAu0Ba3T,GAAY,WAItB+J,EAAY/J,EAAZ+J,GAAImD,EAAQlN,EAARkN,IAEZ1Q,KAAK2U,oBAAoB,CACvBC,OAAQrP,EACRxF,KAAM,CAKJyD,WAAYkN,GAEdmE,UAAW,WACT,OAAO,EAAK3H,QAAQK,GAAI2J,eAAe5K,WAEzCwI,MAAO,WACL,EAAK5H,QAAQK,GAAI2J,eAAe5K,WAAY,EAC5C,EAAKY,QAAQK,GAAI2J,eAAe3K,aAAe,IAEjDwI,QAAS,WACP,EAAK7H,QAAQK,GAAI2J,eAAe7K,UAAW,GAE7C2I,KAAM,SAAA3O,GACJ,EAAK6G,QAAQK,GAAI2J,eAAe3K,aAAenG,GAAgBC,IAEjE4O,IAAK,WACH,EAAK/H,QAAQK,GAAI2J,eAAe5K,WAAY,MAKlDqI,oBAz2BO,YAy2BqE,IAAtDC,EAAsD,EAAtDA,OAAQ7U,EAA8C,EAA9CA,KAAM8U,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,KAAMC,EAAO,EAAPA,IACnE,GAAKjV,KAAKoJ,cAAeyL,IAAzB,CAIAC,IAEA,IAAMlD,EAAWqG,KAAK,SAAC5R,EAAK6R,GACtB7R,EACF2O,EAAK3O,GAEL0O,EAAQmD,GAGVjD,OAEIiD,EAASlY,KAAKoJ,YAAL,OACbmE,GAAIvN,KAAKoP,gBACT5I,WAAYxG,KAAKoP,gBACjBwF,UACG7U,GAJU,IAKb6R,cAGEuG,IAAUD,IACZA,EAAOE,MAAK,WACVxG,OACC,SAAAvL,GACDuL,EAASvL,MACRgS,OAAM,SAAAhS,GAEPiS,QAAQC,MAAMlS,QAKpBkR,iBA74BO,SA64BU/J,GAAM,WACrBhO,GACE,mBAASgO,EAAKD,MAAM,EAAK1B,OAAOE,UAAa,EAAKF,OAAOE,QAAQyB,EAAKD,IAAI0D,mBAC1E,iBAAM,iDAA0CuH,KAAKC,UAAUjL,EAAKD,IAA9D,kCACiB,EAAK1B,OAAOE,QAAQyB,EAAKD,IAAIwD,MAD9C,kBAC6DvD,EAAKuD,MADlE,uBAKVyG,gBAr5BO,SAq5BShK,GACdhO,GACE,wBAA0BkZ,IAAlBlL,EAAKI,WAA4C,IAAlBJ,EAAKe,aAC5C,iBAAM,sIAKVoK,OA75BO,SA65BAnL,GACL,IAAIxN,KAAK2I,WAAY6E,EAAK0D,WAA1B,CAIIlR,KAAKoN,QACPpN,KAAK4Y,QAGP,IAAM3B,EAAYjX,KAAKwJ,WAAaxJ,KAAK6I,KDpyDtB,ICqyDf7I,KAAK6L,OAAOG,gBAAgBwB,EAAKD,KAChCvN,KAAK0N,WAAWF,GAEjByJ,EACFjX,KAAK6Y,YAAYrL,GAEjBxN,KAAK8Y,cAActL,GAGrBxN,KAAKqP,mBAED4H,EACFjX,KAAKkP,MAAM,SAAU1B,EAAKkD,IAAK1Q,KAAKoP,iBAEpCpP,KAAKkP,MAAM,WAAY1B,EAAKkD,IAAK1Q,KAAKoP,iBAGpCpP,KAAKwM,YAAYC,QAAUwK,IAAcjX,KAAKoN,QAAUpN,KAAKiI,gBAC/DjI,KAAK2W,mBAGH3W,KAAKoN,QAAUpN,KAAKmI,gBACtBnI,KAAK+O,YAGD/O,KAAKuK,aACPvK,KAAKkQ,eAAgB,MAK3B0I,MAt8BO,WAs8BC,WACF5Y,KAAKmO,WACHnO,KAAKoN,QAAUpN,KAAK4G,sBACtB5G,KAAK6L,OAAOI,gBAAkB,GAE9BjM,KAAK6L,OAAOI,gBAAkBjM,KAAK6L,OAAOI,gBAAgBqB,QAAO,SAAAqD,GAAM,OACrE,EAAKzD,QAAQyD,GAAQO,cAIzBlR,KAAKqP,qBAKTwJ,YAr9BO,SAq9BKrL,GAAM,WAChB,GAAIxN,KAAKoN,QAAUpN,KAAK0I,mBACtB,OAAO1I,KAAK+Y,SAASvL,GAGvB,GAAIxN,KAAK6I,KAaP,OAZA7I,KAAK+Y,SAASvL,QAEVxN,KAAKuH,oBACPiG,EAAKO,UAAUzL,SAAQ,SAAA0L,GAChB,EAAKN,WAAWM,IAAcA,EAASkD,YAAY,EAAK6H,SAAS/K,MAE/DhO,KAAKwH,uBACdxH,KAAKwR,uBAAuBhE,GAAM,SAAAiE,GAC3B,EAAK/D,WAAW+D,IAAgBA,EAAWP,YAAY,EAAK6H,SAAStH,OAOhF,IAAMuH,EACJxL,EAAKG,SACmBH,EAAKqK,wBACN7X,KAAK+G,kCAc9B,GAZIiS,GACFhZ,KAAK+Y,SAASvL,GAGZA,EAAKe,UACPvO,KAAKwR,uBAAuBhE,GAAM,SAAAiE,GAC3BA,EAAWP,aAAc,EAAKnK,mCACjC,EAAKgS,SAAStH,MAKhBuH,EAEF,IADA,IAAIC,EAAOzL,ED73DW,QC83DdyL,EAAOA,EAAKzV,aACdyV,EAAKrL,SAASyG,MAAMrU,KAAK0N,aAAa1N,KAAK+Y,SAASE,IAO9DH,cArgCO,SAqgCOtL,GAAM,WAClB,GAAIxN,KAAK0I,mBACP,OAAO1I,KAAKkZ,YAAY1L,GAG1B,GAAIxN,KAAK6I,KAaP,OAZA7I,KAAKkZ,YAAY1L,QAEbxN,KAAKqH,sBACPmG,EAAKO,UAAUzL,SAAQ,SAAA0L,GACjB,EAAKN,WAAWM,KAAcA,EAASkD,YAAY,EAAKgI,YAAYlL,MAEjEhO,KAAKsH,yBACdtH,KAAKwR,uBAAuBhE,GAAM,SAAAiE,GAC5B,EAAK/D,WAAW+D,KAAgBA,EAAWP,YAAY,EAAKgI,YAAYzH,OAOlF,IAAI0H,GAA8B,EAUlC,GATI3L,EAAKe,UACPvO,KAAK8R,uBAAuBtE,GAAM,SAAAiE,GAC3BA,EAAWP,aAAc,EAAKnK,oCACjC,EAAKmS,YAAYzH,GACjB0H,GAA8B,MAMlC3L,EAAKG,QACiBwL,GACyB,IAAzB3L,EAAKI,SAASrL,OACpC,CACAvC,KAAKkZ,YAAY1L,GAGjB,IADA,IAAIyL,EAAOzL,ED56DW,QC66DdyL,EAAOA,EAAKzV,aACdxD,KAAK0N,WAAWuL,IAAOjZ,KAAKkZ,YAAYD,KAMlDF,SAnjCO,SAmjCEvL,GACPxN,KAAK6L,OAAOI,gBAAgB7J,KAAKoL,EAAKD,IACtCvN,KAAK6L,OAAOM,gBAAgBqB,EAAKD,KAAM,GAGzC2L,YAxjCO,SAwjCK1L,GACVrM,EAAgBnB,KAAK6L,OAAOI,gBAAiBuB,EAAKD,WAC3CvN,KAAK6L,OAAOM,gBAAgBqB,EAAKD,KAG1C6L,gBA7jCO,WA8jCL,GAAKpZ,KAAKmO,SAAV,CACA,GAAInO,KAAKoN,OAAQ,OAAOpN,KAAK4Y,QAC7B,IAAMS,EAAY3C,IAAQ1W,KAAKmN,eACzBmM,EAAmBtZ,KAAKkN,QAAQmM,GACtCrZ,KAAK2Y,OAAOW,KAGd1C,uBArkCO,WAskCL,IAAMrB,EAAQvV,KAAKsV,UAEfC,IAAOvV,KAAKwL,KAAKG,mBAAqB4J,EAAM7U,YAGlDmW,0BA3kCO,WA4kCL,IAAMtB,EAAQvV,KAAKsV,UAEfC,IAAOA,EAAM7U,UAAYV,KAAKwL,KAAKG,sBAI3C4N,QAt5Da,WAu5DXvZ,KAAK+P,cACL/P,KAAKiQ,cAGPuJ,QA35Da,WA45DPxZ,KAAKmH,WAAWnH,KAAK0S,aACpB1S,KAAKkK,SAAYlK,KAAKkH,QAASlH,KAAKoH,qBAAqBpH,KAAK8W,kBAC/D9W,KAAKgH,YAAYhH,KAAK8O,WACtB9O,KAAKkH,OAASlH,KAAKsI,gBAAgBtI,KAAK0P,sBAG9C+J,UAl6Da,WAo6DXzZ,KAAKkS,yBAAwB,KC/9DjC,eACE,MAAF,qBAEA,cAEA,GAFA,kBCAe,SAASwH,GACtBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGA,IAqBIC,EArBAjQ,EAAmC,mBAAlByP,EACjBA,EAAczP,QACdyP,EAsDJ,GAnDIC,IACF1P,EAAQ0P,OAASA,EACjB1P,EAAQ2P,gBAAkBA,EAC1B3P,EAAQkQ,WAAY,GAIlBN,IACF5P,EAAQmQ,YAAa,GAInBL,IACF9P,EAAQoQ,SAAW,UAAYN,GAI7BC,GACFE,EAAO,SAAUI,IAEfA,EACEA,GACCva,KAAKwa,QAAUxa,KAAKwa,OAAOC,YAC3Bza,KAAK0a,QAAU1a,KAAK0a,OAAOF,QAAUxa,KAAK0a,OAAOF,OAAOC,aAEZ,oBAAxBE,sBACrBJ,EAAUI,qBAGRZ,GACFA,EAAarc,KAAKsC,KAAMua,GAGtBA,GAAWA,EAAQK,uBACrBL,EAAQK,sBAAsBC,IAAIZ,IAKtC/P,EAAQ4Q,aAAeX,GACdJ,IACTI,EAAOD,EACH,WACAH,EAAarc,KACXsC,MACCkK,EAAQmQ,WAAara,KAAK0a,OAAS1a,MAAM+a,MAAMC,SAASC,aAG3DlB,GAGFI,EACF,GAAIjQ,EAAQmQ,WAAY,CAGtBnQ,EAAQgR,cAAgBf,EAExB,IAAIgB,EAAiBjR,EAAQ0P,OAC7B1P,EAAQ0P,OAAS,SAAmCwB,EAAGb,GAErD,OADAJ,EAAKzc,KAAK6c,GACHY,EAAeC,EAAGb,QAEtB,CAEL,IAAIc,EAAWnR,EAAQoR,aACvBpR,EAAQoR,aAAeD,EACnB,GAAGzD,OAAOyD,EAAUlB,GACpB,CAACA,GAIT,MAAO,CACL9c,QAASsc,EACTzP,QAASA,GCxFb,IAAIqR,GAAY,GFIhB,CACE,KAAF,gCACE,OAAF,aACE,YAAF,EAEE,OALF,SAKA,KAAI,IAAJ,eACA,wBAEI,IAAJ,4CAEI,IAAJ,0BAMI,OAJJ,8BACA,sBAGA,qBAAM,OACN,WAAQ,MAAR,eACUzd,KAAV,QADQ,SAAR,OAEA,GACQ,IAAR,8BE/BI,OAAQ+b,GAWV,EACA,KACA,KACA,MAkBF0B,GAAUrR,QAAQsR,OAAS,kCACZ,OAAAD,G,2BC7Bf,IACA,EACA,EACA,EACA,GACA,GACA,GACA,ICJI,GAAY,GDOhB,CACE,KAAF,wBACE,OAAF,aAEE,KAAF,WAAI,MAAJ,CACME,WL6ByB,EK5BzBjd,MAAO,KAGX,SAAF,CACI,aADJ,WACM,IACN,gBAEM,OACN,eACA,YACA,YAII,WAXJ,WAYM,MAAN,CACQ,MAAR,0DAKE,MAAF,CACI,+BADJ,SACA,GACM,KAAN,SAGI,MALJ,WAOA,2DAIE,QAtCF,WAuCI,KAAJ,sBACA,uBLP+B,IKS/B,CAAM,SAAN,EAAM,UAAN,KAIE,QAAF,CACI,MADJ,WAEM,KAAN,SACQ,OAAR,CAAU,MAAV,OAII,MAPJ,WAQA,cAEA,UACQ,KAAR,uCAII,KAfJ,WAgBM,KAAN,sCAGI,QAnBJ,WAmBM,IACN,gBAEM,EAAN,qBAEA,6BAGI,OA3BJ,WA2BM,IACN,gBACA,cAIM,GAAN,8BACQ,OAAR,aAGM,EAAN,qBACM,EAAN,aAGI,QAzCJ,SAyCA,GAAM,IACN,iBAEM,KAAN,QAEA,EACQ,KAAR,qBAEQ,KAAR,2BACQ,KAAR,sBAKI,UAvDJ,SAuDA,GAAM,IACN,gBAGA,gCAEM,KAAN,4CAAM,CAGA,IAAN,uBAEQ,OADA,EAAR,iBACA,aAGM,OAAN,GACQ,KAAKiH,EACb,wCACA,oBAEA,MAEQ,KAAKA,EAEb,GADA,mBACA,6BACA,gCACA,2CACA,YACA,MAEQ,KAAKA,EACb,kBACA,aACA,eACA,cAEA,MAEQ,KAAKA,EACb,mBACA,wBACA,MAEQ,KAAKA,EACb,mBACA,yBACA,MAEQ,KAAKA,GACb,gCACA,+BACA,mBACA,sBACA,2DACA,mBACA,6CAEA,MAEQ,KAAKA,GACb,mBACA,wBACA,MAEQ,KAAKA,GACb,gCACA,iCACA,mBACA,qBAEA,MAEQ,KAAKA,GACb,mBACA,wBACA,MAEQ,KAAKA,GACb,qCACA,oBAEA,MAEQ,QAER,gBAKI,YAhJJ,SAgJA,GAEA,mBAGQ,EAAR,mBAII,qBAzJJ,WAyJM,IAAN,sBACA,gBACA,KACA,KA0BM,OAxBN,4BACQ,EAAR,yBACA,+CAGA,cACQ,EAAR,GACU,GAAV,CACY,MAAZ,aACY,KAAZ,YACY,QAAZ,gBAEU,IAAV,UAIA,0BACQ,EAAR,GACU,MAAV,CACY,SAAZ,cAMA,eAAQ,MAAR,wCACA,KAKI,YA7LJ,WA6LM,IAAN,sBACA,gBAEM,OACN,WAAQ,IAAR,QACQ,MAAR,wBADQ,MAAR,CAEU,KAAV,OACU,aAAV,MACU,SAAV,WACU,SAAV,yBALQ,SAAR,CAAU,MAMV,YACQ,MAAR,gBAPQ,GAAR,CAAU,MAQV,aARU,MASV,aATU,KAUV,YAVU,QAWV,eAXU,UAYV,qBAKI,YAlNJ,WAmNM,OACN,EAFA,qBAEA,OAAQ,IAAR,QAAQ,MAAR,wCAII,iBAxNJ,WAyNM,KAAN,oBLrO+B,EKuO/B,kCAII,kBA/NJ,WAgOA,cAEA,iCAIE,OApRF,WAqRI,OAAJ,mCCnSI,OAAQ,GAWV,EACA,KACA,KACA,MAkBF,GAAUyE,QAAQsR,OAAS,2BACZ,U,QC1BX,GAAY,GCNhB,CACE,KAAF,8BACE,OAAF,aAEE,OAJF,WAII,IAAJ,eACA,gBACA,GACM,+BAAN,EACM,yCAAN,EACM,6BAAN,mCAGI,OACJ,SAAM,MAAN,IACA,uBDfI,OAAQ,GAWV,EACA,KACA,KACA,MAkBF,GAAUtR,QAAQsR,OAAS,iCACZ,U,QE1BX,GAAY,GCHhB,CACE,KAAF,+BACE,OAAF,aACE,QAAF,CACI,uBADJ,WACM,IACN,gBACA,qBAEA,gCACM,OAAN,EACA,GAAQ,KAAR,IACA,UAGE,OAdF,WAcI,IAAJ,eACA,oDACA,qCAEI,OAAJ,GACA,GACA,SAAM,MAAN,iCACA,gCAGA,MACA,MAAM,IAAN,mBD7BI,OAAQ,GAWV,EACA,KACA,KACA,MAkBF,GAAUtR,QAAQsR,OAAS,iCACZ,U,QEjCX,GAAS,WACX,IACIE,EADM1b,KACG2b,eACTC,EAFM5b,KAEG6b,MAAMD,IAAMF,EACzB,OAAOE,EACL,MACA,CACEE,MAAO,CACLC,MAAO,6BACPC,QAAS,wBAGb,CACEJ,EAAG,OAAQ,CACTE,MAAO,CACLje,EACE,4gBAOZ,GAAOoe,eAAgB,EChBvB,ICAI,GAAY,GDAhB,CACE,KAAF,qBCCE,GFaoB,IEXpB,EACA,KACA,KACA,MAuBF,GAAU/R,QAAQsR,OAAS,kCACZ,U,QC/BX,GAAY,GCHhB,CACE,KAAF,mCACE,OAAF,aAEE,MAAF,CACI,KAAJ,CACM,KAAN,OACM,UAAN,IAIE,QAAF,CACI,gBAAJ,cAAM,IACN,4BAGM,EAAN,cAIE,OApBF,WAoBI,IAAJ,eACA,4BACA,GACM,oCAAN,EACM,4CAAN,aACM,uCAAN,SAEA,gCACA,OAAM,KAAN,YAEI,OACJ,SAAM,MAAN,+CACA,SAAM,MAAN,EAAM,GAAN,CAAQ,UAAR,wBACA,UAAM,MAAN,0CACA,UAAM,MAAN,yEDtCI,OAAQ,GAWV,EACA,KACA,KACA,MAkBF,GAAUtR,QAAQsR,OAAS,oCACZ,U,QE1BX,GAAY,GCFhB,CACE,KAAF,8BACE,OAAF,aAEE,QAAF,CACI,sBADJ,WACM,IAAN,sBACA,gBAEM,OAAN,gBACA,iBACA,eACA,iBAAQ,OACR,MAAU,IAAV,iCAAU,MAAV,CAAY,KAAZ,SAII,qBAZJ,WAYM,IAAN,sBACA,gBACA,iCAEM,OAAN,UAGA,SAAQ,MAAR,kEAAQ,IAAR,qBACA,UAAQ,MAAR,wDAME,OA9BF,WA8BI,IAAJ,eACA,oCACA,GACM,MAAN,CACQ,IAAR,MACQ,KAAR,+CACQ,QAAR,IAII,OAAJ,EACA,4BAAM,MAAN,oCACA,6BACA,4BACA,MAAM,IAAN,gBACA,MAAM,IAAN,QAAM,IAAN,oBDlDI,OAAQ,GAWV,EACA,KACA,KACA,MAkBF,GAAUtR,QAAQsR,OAAS,gCACZ,U,QEjCX,GAAS,WACX,IACIE,EADM1b,KACG2b,eACTC,EAFM5b,KAEG6b,MAAMD,IAAMF,EACzB,OAAOE,EACL,MACA,CACEE,MAAO,CACLC,MAAO,6BACPC,QAAS,wBAGb,CACEJ,EAAG,OAAQ,CACTE,MAAO,CACLje,EACE,wUAOZ,GAAOoe,eAAgB,EChBvB,ICAI,GAAY,GDAhB,CACE,KAAF,yBCCE,GFaoB,IEXpB,EACA,KACA,KACA,MAuBF,GAAU/R,QAAQsR,OAAS,iCACZ,U,QC/BX,GAAY,GCAhB,CACE,KAAF,0BACE,OAAF,aAEE,SAAF,CAMI,YANJ,WAMM,IACN,gBAEM,OACN,cACA,YACA,aACA,mDAQI,gBArBJ,WAqBM,IACN,gBAEM,OAAN,eAGA,eAOI,mBAlCJ,WAkCM,IACN,gBAEM,OACN,YACA,kCAAQ,OAAR,6BAME,QAAF,CACI,QADJ,WACM,IAAN,sBACA,gBACA,6CAEM,OAAN,iBAGA,SAAQ,MAAR,8BAAQ,MAAR,CAAU,MAAV,GAAQ,GAAR,CAAU,UAAV,2BACA,MAAQ,MAAR,wBAJA,MASI,YAdJ,WAcM,IAAN,sBAEA,GACQ,iCAAR,EACQ,yCAHR,cAGA,aAGM,OAAN,qBAGA,SAAQ,MAAR,0CAAQ,GAAR,CAAU,UAAV,+BACA,MAAQ,MAAR,MAJA,MASI,mBAAJ,eAUM,EAAN,kBACM,EAAN,iBAXM,IAaN,gBACA,qBACA,cACA,cAGA,OAEQ,EAAR,QAGQ,YAAR,WAAU,OAAV,aAQI,uBAAJ,eACM,EAAN,iBACM,EAAN,kBAFM,IAIN,gBAGM,EAAN,aACM,EAAN,gBAII,qBA1EJ,SA0EA,GACM,OACN,EAFA,qBAEA,OAAQ,MAAR,oCACA,MAME,OApIF,WAoII,IAAJ,eACA,gBACA,iBAEI,OACJ,SAAM,MAAN,0BAAM,GAAN,CAAQ,UAAR,qBACA,KAAM,IAAN,oBACA,eACA,4BDnJI,OAAQ,GAWV,EACA,KACA,KACA,MAkBF,GAAUtR,QAAQsR,OAAS,6BACZ,U,QE1BX,GAAY,GCNhB,CACE,KAAF,sBACE,YAAF,EAEE,MAAF,CACI,KAAJ,CACM,KAAN,OACM,UAAN,GAEI,KAAJ,CACM,KAAN,OACM,UAAN,IAIE,OAfF,SAeA,KAAI,IAAJ,eACA,uBAEI,OACJ,SAAM,MAAN,+DACA,SAAM,MAAN,mCACA,UAAM,MAAN,2CAEA,UAAM,MAAN,yEACA,aDzBI,OAAQ,GAWV,EACA,KACA,KACA,MAkBF,GAAUtR,QAAQsR,OAAS,yBACZ,IE3Bf,SF2Be,M,QEzBf,IACE,KAAF,yBACE,OAAF,aAEE,MAAF,CACI,KAAJ,CACM,KAAN,OACM,UAAN,IAIE,SAAF,CACI,aADJ,WACM,IACN,4BAEM,OAAN,+BAGI,WAPJ,WAOM,IACN,4BAEM,OAAN,8BAIE,QAAF,CACI,aADJ,WACM,IAAN,sBACA,4BAUM,OACN,SAAQ,MAVR,CACQ,0BAAR,EACQ,mCAAR,aACQ,mCAAR,gBACQ,oCAAR,gBACQ,kCAAR,kCACQ,gCAAR,iBAIQ,GAAR,CAAU,WAAV,6BAAQ,MAAR,CAAU,UAAV,QACA,mBACA,2BACA,8BACA,wBAEA,wBAMI,qBAzBJ,WAyBM,IAAN,sBACM,OAAN,kBAGA,SAAQ,MAAR,yBACA,wBACA,2BACA,gCACA,uCAPA,MAYI,YAtCJ,WAsCM,IAAN,sBACA,4BAEM,GAAN,oDAEM,GAAN,YACQ,IAMR,GACU,gCAAV,EACU,wCAAV,mBAGQ,OACR,SAAU,MAAV,yCAAU,GAAV,CAAY,UAAZ,+BACA,eAbA,CACU,MAAV,CACY,KAAZ,wCACY,QAAZ,IAUA,CACA,MAAU,MAAV,QASM,OAAN,kBACA,QACA,SAAU,MAAV,oDAGA,IAGA,MAGI,qBA9EJ,SA8EA,GACM,OACN,EAFA,qBAEA,OAAQ,MAAR,kCAAQ,GAAR,CAAU,UAAV,wCACA,KAKI,wBAtFJ,SAsFA,GAAM,IAAN,sBACA,4BAEM,OAAN,UACA,iCADA,KAIA,SAAQ,MAAR,uCACA,KAKI,eAnGJ,WAmGM,IAAN,sBACA,4BACA,iCACA,GACQ,4BAAR,EACQ,oCzBnIe,IyBmIvB,EACQ,0CzBrIqB,IyBqI7B,EACQ,sCzBvIiB,IyBuIzB,EACQ,qCAAR,cAUM,OAPN,QACA,UAAQ,MAAR,gCAEA,QACA,UAAQ,MAAR,gCAIA,UAAQ,MAAR,IACA,GACA,MAKI,YA7HJ,WA6HM,IAAN,sBACA,4BACA,EACA,kCACA,4BACA,aAGA,IACA,qBACA,4CACA,uBACA,IAGA,iCAEM,OAAN,KACQ,KAAR,EACQ,gBAAR,EACQ,MAAR,EACQ,eARR,wBASQ,eARR,0BAYA,WAAQ,MAbR,yBAaA,CACA,QACA,GACA,UAAQ,MAfR,yBAeA,gBAMI,iBAhKJ,WAgKM,IAAN,sBACA,YAEM,OAAN,0BAEA,4BAAQ,OACR,MAAU,MAAV,SAAU,IAAV,UAHA,MAOI,oBA1KJ,WA0KM,IAAN,sBACA,4BAEM,OAAN,kDAGA,MAAQ,MAAR,CAAU,KAAV,cAAU,KAAV,iCAII,yBApLJ,WAoLM,IAAN,sBACA,gBAEM,OAFN,UAEA,yBAGA,MAAQ,MAAR,CAAU,KAAV,UAAU,KAAV,4BAHA,MAOI,8BA9LJ,WA8LM,IAAN,sBACA,4BAEM,OAAN,8BAGA,MAAQ,MAAR,CAAU,KAAV,QAAU,KAAV,WACA,8BACA,OAAQ,MAAR,wBAAQ,MAAR,CAAU,MAAV,cAAQ,GAAR,CAAU,UAAV,+BACA,gBANA,MAYI,uBA7MJ,SA6MA,GAAM,IACN,4BAIA,4BAEM,EAAN,mCAGI,uBAAJ,cAAM,IACN,4BAEM,EAAN,qBAGI,gCAAJ,cAAM,IACN,4BAEA,iCACQ,EAAR,kBAEQ,EAAR,aAII,uBAAJ,cAAM,IACN,4BAEM,EAAN,2BAIE,OAvQF,WAuQI,IAAJ,eACA,YACA,+CACA,OACM,6BAAN,GADA,uCAEA,OAEA,GACM,MAAN,CACQ,KAAR,qCAII,OACJ,SAAM,MAAN,IACA,oBACA,YACA,kBACA,kCC1RI,GAAY,GDmShB,QC1SI,OAAQ,GAWV,EACA,KACA,KACA,MAkBF,GAAUtR,QAAQsR,OAAS,4BACZ,U,QC3Bf,IACE,IAAF,MACE,OAAF,SACE,MAAF,MACE,MAAF,UCHI,GAAY,GDMhB,CACE,KAAF,uBACE,OAAF,aAEE,SAAF,CACI,UADJ,WAIM,MAAN,CACQ,UAHR,cAGA,iBAII,mBATJ,WASM,IACN,gBAEM,MAAN,CACQ,OAAR,gCAKE,MAAF,CACI,uBADJ,SACA,GACA,EAEQ,KAAR,2BAEQ,KAAR,gBAKE,QAjCF,WAkCI,KAAJ,qBACI,KAAJ,wCAGE,QAtCF,WAuCA,cAEA,8CAGE,UA5CF,WA6CI,KAAJ,eAGE,QAAF,CACI,WADJ,WACM,IAAN,sBACA,gBAEM,OAAN,cAGA,SAAQ,IAAR,OAAQ,MAAR,uBAAQ,GAAR,CAAU,UAAV,mBAAQ,MAAR,iBACA,wBACA,QACA,kCACA,qBACA,kCACA,6BACA,yBAVA,MAeI,iBAnBJ,WAmBM,IAEN,EADA,cACA,4BAEM,OAAN,EACA,IACA,MAGI,gBA5BJ,WA4BM,IAEN,EADA,cACA,2BAEM,OAAN,EACA,IACA,MAGI,sBArCJ,WAqCM,IACN,gBAEM,OAAN,8BACA,+BACA,iCACA,wCACA,oEACA,mCAEA,yBAII,2BAnDJ,WAmDM,IACN,gBAEM,OAAN,8BACA,+BACA,iCACA,wCACA,oEACA,mCACA,wBACA,0BAEA,yBAII,2BAnEJ,WAmEM,IACN,gBACA,2BACA,gDACA,OAEA,kCAEM,OAAN,EACA,6BACA,YACA,+BACA,eACA,wCACA,EACA,0BAEA,yBAII,iBAxFJ,WAwFM,IAAN,sBACA,gBAEM,OACN,SAAQ,MAAR,yBACA,4CAAQ,OACR,MAAU,MAAV,CAAY,KAAZ,GAAU,IAAV,aAMI,sBApGJ,WAoGM,IAAN,sBACA,gBAEM,OACN,MAAQ,MAAR,CAAU,KAAV,gBAAU,KAAV,mCAII,wBA5GJ,WA4GM,IAAN,sBACA,gBAEM,OACN,MAAQ,MAAR,CAAU,KAAV,UAAU,KAAV,6BAII,iCApHJ,WAoHM,IAAN,sBACA,gBAEM,OACN,MAAQ,MAAR,CAAU,KAAV,QAAU,KAAV,WACA,iCACA,OAAQ,MAAR,wBAAQ,GAAR,CAAU,MAAV,mBAAQ,MAAR,CAAU,MAAV,gBACA,iBAMI,iCAjIJ,WAiIM,IAAN,sBACA,gBACA,2BAIM,OACN,MAAQ,MAAR,CAAU,KAAV,QAAU,KAAV,WACA,eACA,OAAQ,MAAR,wBAAQ,GAAR,CAAU,MAAV,sBAAQ,MAAR,CAAU,MAAV,gBACA,iBAMI,4BAjJJ,WAiJM,IAAN,sBACA,gBAEM,OACN,MAAQ,MAAR,CAAU,KAAV,aAAU,KAAV,gCAII,mBAzJJ,WAyJM,IAAN,sBACA,gBAEM,OACN,MAAQ,MAAR,CAAU,KAAV,aAAU,KAAV,gCAII,WAjKJ,WAkKM,KAAN,0BACM,KAAN,uBACM,KAAN,0CAGI,YAvKJ,WAwKM,KAAN,wBACM,KAAN,2CAGI,wBA5KJ,WA4KM,IACN,gBACM,GAAN,cAAM,CAEA,IAAN,cACA,iBACA,4BACA,4BACA,WACA,qBACA,QAMA,EALA,4BAKA,E3BxM2B,G2ByM3B,M3BzM2B,G2BqM3B,oBACA,oBAOA,yBACQ,EAAR,mCAEQ,EAAR,eADA,MACA,SAEA,MANQ,EAAR,cAUI,qBA1MJ,WA0MM,IAEN,EADA,cACA,UAGA,uBAEM,KAAN,iBACQ,OAAR,qCAII,uCAtNJ,WAsNM,IAEN,EADA,cACA,aAGA,yCAEM,KAAN,mCACQ,OAAR,qCAII,sBAlOJ,WAmOA,uBAEM,KAAN,yBACM,KAAN,uBAGI,wCAzOJ,WA0OA,yCAEM,KAAN,2CACM,KAAN,0CAIE,OAjSF,WAiSI,IAAJ,eACI,OACJ,SAAM,IAAN,iBAAM,MAAN,iCAAM,MAAN,0BACA,gBAAM,MAAN,CAAQ,KAAR,sCACA,6BClTI,OAAQ,GAWV,EACA,KACA,KACA,MAkBF,GAAUtR,QAAQsR,OAAS,0BACZ,U,2PC5Bf,IA+HA,GA/HA,IACE,KAAF,gCACE,OAAF,aAEE,MAAF,CACI,uBADJ,SACA,GACA,EACQ,KAAR,gBAEQ,KAAR,kBAII,0BATJ,WAUM,KAAN,8BAIE,QAlBF,WAmBI,KAAJ,0CACI,KAAJ,yBAGE,QAvBF,WAwBA,cAEA,mCAGE,QAAF,CACI,cADJ,WAEM,KAAN,cACM,KAAN,4BACM,KAAN,4CACM,KAAN,2BAGI,eARJ,WASM,KAAN,6CACM,KAAN,4BAGI,0CAbJ,WAaM,IAEN,EADA,cACA,aAGA,4CAEM,KAAN,sCACQ,OAAR,uCAII,wBAzBJ,WAyBM,IAAN,OAEA,EADA,cACA,aAGA,0BAEM,KAAN,oBACQ,OAAR,gBACU,EAAV,cACU,EAAV,kCAKI,2CAxCJ,WAyCA,4CAEM,KAAN,8CACM,KAAN,4CAGI,yBA/CJ,WAgDA,0BAEM,KAAN,4BACM,KAAN,0BAGI,YAtDJ,WAsDM,IACN,gBACA,WAEA,EADA,eACA,wBAEM,EAAN,0BAGI,0BA/DJ,WA+DM,IACN,gBACA,iBACA,WACA,4BACA,4BACA,yCACA,iCACA,iCACA,8CAEA,EADA,8DACA,YAAQ,OAAR,6BAGA,4CAIE,OA9GF,WA8GI,IAAJ,eACA,gBACA,mDACA,GAAM,OAAN,UAEI,OACJ,SAAM,MAAN,EAAM,MAAN,EAAM,MAAN,CAAQ,mBAAR,qBACA,MAAM,IAAN,YAKE,UA1HF,WA2HI,KAAJ,mBCzHI,GAAY,GD+HhB,CACE,KAAF,8BAEE,QAHF,WAII,KAAJ,mBAGE,QAPF,WAQI,KAAJ,SAGE,UAXF,WAYI,KAAJ,YAGE,QAAF,CACI,MADJ,WAEM,IAAN,gCACM,SAAN,oBAEM,KAAN,sB,mWAAA,EACQ,GAAR,EACQ,OAAR,MACA,MAII,SAZJ,WAaM,SAAN,wCACM,KAAN,8BAEM,KAAN,wBACM,KAAN,oBAIE,OApCF,WAoCI,IAAJ,eAKI,OAJJ,QACA,SAAM,MAAN,sCAGA,UC/KI,OAAQ,GAWV,EACA,KACA,KACA,MAkBF,GAAUtR,QAAQsR,OAAS,gCACZ,U,QC1BX,GAAY,GCAhB,CACE,KAAF,iBACE,OAAF,KAEE,SAAF,CACI,aADJ,WAEM,MAAN,CACQ,kBAAR,EACQ,yBAAR,YACQ,wBAAR,cACQ,6BAAR,gBACQ,2BAAR,cACQ,0BAAR,uBACQ,4BAAR,cACQ,uBAAR,iBACQ,6BAAR,4BACQ,6BAAR,+BACQ,wCAAR,wBACQ,iCAAR,qBAKE,OAvBF,WAuBI,IAAJ,eACI,OACJ,SAAM,IAAN,UAAM,MAAN,oBACA,MACA,MAAM,IAAN,YACA,wBAAM,IAAN,iBAAM,IAAN,kBDnCI,OAAQ,GAWV,EACA,KACA,KACA,MAkBF,GAAUtR,QAAQsR,OAAS,gCACZ,U,QEpBFU,I,MATEC,aASQC","file":"vue-treeselect.cjs.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"babel-helper-vue-jsx-merge-props\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"lodash/noop\");","module.exports = require(\"lodash/debounce\");","module.exports = require(\"is-promise\");","module.exports = require(\"lodash/once\");","module.exports = require(\"lodash/identity\");","module.exports = require(\"lodash/constant\");","module.exports = require(\"lodash/last\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"fuzzysearch\");","module.exports = require(\"watch-size\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"vue\");","import { noop } from './noop'\n\nexport const warning = process.env.NODE_ENV === 'production'\n  ? /* istanbul ignore next */ noop\n  : function warning(checker, complainer) {\n    if (!checker()) {\n      const message = [ '[Vue-Treeselect Warning]' ].concat(complainer())\n      // eslint-disable-next-line no-console\n      console.error(...message)\n    }\n  }\n","export function onLeftClick(mouseDownHandler) {\n  return function onMouseDown(evt, ...args) {\n    if (evt.type === 'mousedown' && evt.button === 0) {\n      mouseDownHandler.call(this, evt, ...args)\n    }\n  }\n}\n","// from react-select\nexport function scrollIntoView($scrollingEl, $focusedEl) {\n  const scrollingReact = $scrollingEl.getBoundingClientRect()\n  const focusedRect = $focusedEl.getBoundingClientRect()\n  const overScroll = $focusedEl.offsetHeight / 3\n\n  if (focusedRect.bottom + overScroll > scrollingReact.bottom) {\n    $scrollingEl.scrollTop = Math.min(\n      $focusedEl.offsetTop + $focusedEl.clientHeight - $scrollingEl.offsetHeight + overScroll,\n      $scrollingEl.scrollHeight,\n    )\n  } else if (focusedRect.top - overScroll < scrollingReact.top) {\n    $scrollingEl.scrollTop = Math.max($focusedEl.offsetTop - overScroll, 0)\n  }\n}\n","import watchSizeForBrowsersOtherThanIE9 from 'watch-size'\nimport { removeFromArray } from './removeFromArray'\n\nlet intervalId\nconst registered = []\nconst INTERVAL_DURATION = 100\n\nfunction run() {\n  intervalId = setInterval(() => {\n    registered.forEach(test)\n  }, INTERVAL_DURATION)\n}\n\nfunction stop() {\n  clearInterval(intervalId)\n  intervalId = null\n}\n\nfunction test(item) {\n  const { $el, listener, lastWidth, lastHeight } = item\n  const width = $el.offsetWidth\n  const height = $el.offsetHeight\n\n  if (lastWidth !== width || lastHeight !== height) {\n    item.lastWidth = width\n    item.lastHeight = height\n\n    listener({ width, height })\n  }\n}\n\nfunction watchSizeForIE9($el, listener) {\n  const item = {\n    $el,\n    listener,\n    lastWidth: null,\n    lastHeight: null,\n  }\n  const unwatch = () => {\n    removeFromArray(registered, item)\n    if (!registered.length) stop()\n  }\n\n  registered.push(item)\n  // The original watch-size will call the listener on initialization.\n  // Keep the same behavior here.\n  test(item)\n  run()\n\n  return unwatch\n}\n\nexport function watchSize($el, listener) {\n  // See: https://stackoverflow.com/a/31293352\n  const isIE9 = document.documentMode === 9\n  // watch-size will call the listener on initialization.\n  // Disable this behavior with a lock to achieve a clearer code logic.\n  let locked = true\n  const wrappedListener = (...args) => locked || listener(...args)\n  const implementation = isIE9\n    ? watchSizeForIE9\n    : watchSizeForBrowsersOtherThanIE9\n  const removeSizeWatcher = implementation($el, wrappedListener)\n  locked = false // unlock after initialization\n\n  return removeSizeWatcher\n}\n","export function removeFromArray(arr, elem) {\n  const idx = arr.indexOf(elem)\n  if (idx !== -1) arr.splice(idx, 1)\n}\n","function findScrollParents($el) {\n  const $scrollParents = []\n  let $parent = $el.parentNode\n\n  while ($parent && $parent.nodeName !== 'BODY' && $parent.nodeType === document.ELEMENT_NODE) {\n    if (isScrollElment($parent)) $scrollParents.push($parent)\n    $parent = $parent.parentNode\n  }\n  $scrollParents.push(window)\n\n  return $scrollParents\n}\n\nfunction isScrollElment($el) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getComputedStyle($el)\n  return /(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)\n}\n\nexport function setupResizeAndScrollEventListeners($el, listener) {\n  const $scrollParents = findScrollParents($el)\n\n  window.addEventListener('resize', listener, { passive: true })\n  $scrollParents.forEach(scrollParent => {\n    scrollParent.addEventListener('scroll', listener, { passive: true })\n  })\n\n  return function removeEventListeners() {\n    window.removeEventListener('resize', listener, { passive: true })\n    $scrollParents.forEach($scrollParent => {\n      $scrollParent.removeEventListener('scroll', listener, { passive: true })\n    })\n  }\n}\n","export function isNaN(x) {\n  return x !== x\n}\n","export const createMap = () => Object.create(null)\n","function isPlainObject(value) {\n  if (value == null || typeof value !== 'object') return false\n  return Object.getPrototypeOf(value) === Object.prototype\n}\n\nfunction copy(obj, key, value) {\n  if (isPlainObject(value)) {\n    obj[key] || (obj[key] = {})\n    deepExtend(obj[key], value)\n  } else {\n    obj[key] = value\n  }\n}\n\nexport function deepExtend(target, source) {\n  if (isPlainObject(source)) {\n    const keys = Object.keys(source)\n\n    for (let i = 0, len = keys.length; i < len; i++) {\n      copy(target, keys[i], source[keys[i]])\n    }\n  }\n\n  return target\n}\n","export function includes(arrOrStr, elem) {\n  return arrOrStr.indexOf(elem) !== -1\n}\n","export function find(arr, predicate, ctx) {\n  for (let i = 0, len = arr.length; i < len; i++) {\n    if (predicate.call(ctx, arr[i], i, arr)) return arr[i]\n  }\n  return undefined\n}\n","export function quickDiff(arrA, arrB) {\n  if (arrA.length !== arrB.length) return true\n\n  for (let i = 0; i < arrA.length; i++) {\n    if (arrA[i] !== arrB[i]) return true\n  }\n\n  return false\n}\n","// Magic value that indicates a root level node.\nexport const NO_PARENT_NODE = null\n\n// Types of checked state.\nexport const UNCHECKED = 0\nexport const INDETERMINATE = 1\nexport const CHECKED = 2\n\n// Types of count number.\nexport const ALL_CHILDREN = 'ALL_CHILDREN'\nexport const ALL_DESCENDANTS = 'ALL_DESCENDANTS'\nexport const LEAF_CHILDREN = 'LEAF_CHILDREN'\nexport const LEAF_DESCENDANTS = 'LEAF_DESCENDANTS'\n\n// Action types of delayed loading.\nexport const LOAD_ROOT_OPTIONS = 'LOAD_ROOT_OPTIONS'\nexport const LOAD_CHILDREN_OPTIONS = 'LOAD_CHILDREN_OPTIONS'\nexport const ASYNC_SEARCH = 'ASYNC_SEARCH'\n\n// Acceptable values of `valueConsistsOf` prop.\nexport const ALL = 'ALL'\nexport const BRANCH_PRIORITY = 'BRANCH_PRIORITY'\nexport const LEAF_PRIORITY = 'LEAF_PRIORITY'\nexport const ALL_WITH_INDETERMINATE = 'ALL_WITH_INDETERMINATE'\n\n// Acceptable values of `sortValueBy` prop.\nexport const ORDER_SELECTED = 'ORDER_SELECTED'\nexport const LEVEL = 'LEVEL'\nexport const INDEX = 'INDEX'\n\n// Key codes look-up table.\nexport const KEY_CODES = {\n  BACKSPACE: 8,\n  ENTER: 13,\n  ESCAPE: 27,\n  END: 35,\n  HOME: 36,\n  ARROW_LEFT: 37,\n  ARROW_UP: 38,\n  ARROW_RIGHT: 39,\n  ARROW_DOWN: 40,\n  DELETE: 46,\n}\n\n// Other constants.\nexport const INPUT_DEBOUNCE_DELAY = process.env.NODE_ENV === 'testing'\n  ? /* to speed up unit testing */ 10\n  : /* istanbul ignore next */ 200\nexport const MIN_INPUT_WIDTH = 5\nexport const MENU_BUFFER = 40\n","import fuzzysearch from 'fuzzysearch'\n\nimport {\n  warning,\n  onLeftClick, scrollIntoView,\n  isNaN, isPromise, once,\n  identity, constant, createMap,\n  quickDiff, last as getLast, includes, find, removeFromArray,\n} from '../utils'\n\nimport {\n  NO_PARENT_NODE,\n  UNCHECKED, INDETERMINATE, CHECKED,\n  LOAD_ROOT_OPTIONS, LOAD_CHILDREN_OPTIONS, ASYNC_SEARCH,\n  ALL, BRANCH_PRIORITY, LEAF_PRIORITY, ALL_WITH_INDETERMINATE,\n  ALL_CHILDREN, ALL_DESCENDANTS, LEAF_CHILDREN, LEAF_DESCENDANTS,\n  ORDER_SELECTED, LEVEL, INDEX,\n} from '../constants'\n\nfunction sortValueByIndex(a, b) {\n  let i = 0\n  do {\n    if (a.level < i) return -1\n    if (b.level < i) return 1\n    if (a.index[i] !== b.index[i]) return a.index[i] - b.index[i]\n    i++\n  } while (true)\n}\n\nfunction sortValueByLevel(a, b) {\n  return a.level === b.level\n    ? sortValueByIndex(a, b)\n    : a.level - b.level\n}\n\nfunction createAsyncOptionsStates() {\n  return {\n    isLoaded: false,\n    isLoading: false,\n    loadingError: '',\n  }\n}\n\nfunction stringifyOptionPropValue(value) {\n  if (typeof value === 'string') return value\n  if (typeof value === 'number' && !isNaN(value)) return value + ''\n  // istanbul ignore next\n  return ''\n}\n\nfunction match(enableFuzzyMatch, needle, haystack) {\n  return enableFuzzyMatch\n    ? fuzzysearch(needle, haystack)\n    : includes(haystack, needle)\n}\n\nfunction getErrorMessage(err) {\n  return err.message || /* istanbul ignore next */String(err)\n}\n\nlet instanceId = 0\n\nexport default {\n  provide() {\n    return {\n      // Enable access to the instance of root component of vue-treeselect\n      // across hierarchy.\n      instance: this,\n    }\n  },\n\n  props: {\n    /**\n     * Whether to allow resetting value even if there are disabled selected nodes.\n     */\n    allowClearingDisabled: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * When an ancestor node is selected/deselected, whether its disabled descendants should be selected/deselected.\n     * You may want to use this in conjunction with `allowClearingDisabled` prop.\n     */\n    allowSelectingDisabledDescendants: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether the menu should be always open.\n     */\n    alwaysOpen: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Append the menu to <body />?\n     */\n    appendToBody: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether to enable async search mode.\n     */\n    async: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Automatically focus the component on mount?\n     */\n    autoFocus: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Automatically load root options on mount. When set to `false`, root options will be loaded when the menu is opened.\n     */\n    autoLoadRootOptions: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * When user deselects a node, automatically deselect its ancestors. Applies to flat mode only.\n     */\n    autoDeselectAncestors: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * When user deselects a node, automatically deselect its descendants. Applies to flat mode only.\n     */\n    autoDeselectDescendants: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * When user selects a node, automatically select its ancestors. Applies to flat mode only.\n     */\n    autoSelectAncestors: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * When user selects a node, automatically select its descendants. Applies to flat mode only.\n     */\n    autoSelectDescendants: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether pressing backspace key removes the last item if there is no text input.\n     */\n    backspaceRemoves: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Function that processes before clearing all input fields.\n     * Return `false` to prevent value from being cleared.\n     * @type {function(): (boolean|Promise<boolean>)}\n     */\n    beforeClearAll: {\n      type: Function,\n      default: constant(true),\n    },\n\n    /**\n     * Show branch nodes before leaf nodes?\n     */\n    branchNodesFirst: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Should cache results of every search request?\n     */\n    cacheOptions: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Show an \"×\" button that resets value?\n     */\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Title for the \"×\" button when `multiple: true`.\n     */\n    clearAllText: {\n      type: String,\n      default: 'Clear all',\n    },\n\n    /**\n     * Whether to clear the search input after selecting.\n     * Use only when `multiple` is `true`.\n     * For single-select mode, it **always** clears the input after selecting an option regardless of the prop value.\n     */\n    clearOnSelect: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Title for the \"×\" button.\n     */\n    clearValueText: {\n      type: String,\n      default: 'Clear value',\n    },\n\n    /**\n     * Whether to close the menu after selecting an option?\n     * Use only when `multiple` is `true`.\n     */\n    closeOnSelect: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * How many levels of branch nodes should be automatically expanded when loaded.\n     * Set `Infinity` to make all branch nodes expanded by default.\n     */\n    defaultExpandLevel: {\n      type: Number,\n      default: 0,\n    },\n\n    /**\n     * The default set of options to show before the user starts searching. Used for async search mode.\n     * When set to `true`, the results for search query as a empty string will be autoloaded.\n     * @type {boolean|node[]}\n     */\n    defaultOptions: {\n      default: false,\n    },\n\n    /**\n     * Whether pressing delete key removes the last item if there is no text input.\n     */\n    deleteRemoves: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Delimiter to use to join multiple values for the hidden field value.\n     */\n    delimiter: {\n      type: String,\n      default: ',',\n    },\n\n    /**\n     * Only show the nodes that match the search value directly, excluding its ancestors.\n     *\n     * @type {Object}\n     */\n    flattenSearchResults: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Prevent branch nodes from being selected?\n     */\n    disableBranchNodes: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Disable the control?\n     */\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Disable the fuzzy matching functionality?\n     */\n    disableFuzzyMatching: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether to enable flat mode or not. Non-flat mode (default) means:\n     *   - Whenever a branch node gets checked, all its children will be checked too\n     *   - Whenever a branch node has all children checked, the branch node itself will be checked too\n     * Set `true` to disable this mechanism\n     */\n    flat: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Will be passed with all events as the last param.\n     * Useful for identifying events origin.\n    */\n    instanceId: {\n      // Add two trailing \"$\" to distinguish from explictly specified ids.\n      default: () => `${instanceId++}$$`,\n      type: [ String, Number ],\n    },\n\n    /**\n     * Joins multiple values into a single form field with the `delimiter` (legacy mode).\n    */\n    joinValues: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Limit the display of selected options.\n     * The rest will be hidden within the limitText string.\n     */\n    limit: {\n      type: Number,\n      default: Infinity,\n    },\n\n    /**\n     * Function that processes the message shown when selected elements pass the defined limit.\n     * @type {function(number): string}\n     */\n    limitText: {\n      type: Function,\n      default: function limitTextDefault(count) { // eslint-disable-line func-name-matching\n        return `and ${count} more`\n      },\n    },\n\n    /**\n     * Text displayed when loading options.\n     */\n    loadingText: {\n      type: String,\n      default: 'Loading...',\n    },\n\n    /**\n     * Used for dynamically loading options.\n     * @type {function({action: string, callback: (function((Error|string)=): void), parentNode: node=, instanceId}): void}\n     */\n    loadOptions: {\n      type: Function,\n    },\n\n    /**\n     * Which node properties to filter on.\n     */\n    matchKeys: {\n      type: Array,\n      default: constant([ 'label' ]),\n    },\n\n    /**\n     * Sets `maxHeight` style value of the menu.\n     */\n    maxHeight: {\n      type: Number,\n      default: 300,\n    },\n\n    /**\n     * Set `true` to allow selecting multiple options (a.k.a., multi-select mode).\n     */\n    multiple: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Generates a hidden <input /> tag with this field name for html forms.\n     */\n    name: {\n      type: String,\n    },\n\n    /**\n     * Text displayed when a branch node has no children.\n     */\n    noChildrenText: {\n      type: String,\n      default: 'No sub-options.',\n    },\n\n    /**\n     * Text displayed when there are no available options.\n     */\n    noOptionsText: {\n      type: String,\n      default: 'No options available.',\n    },\n\n    /**\n     * Text displayed when there are no matching search results.\n     */\n    noResultsText: {\n      type: String,\n      default: 'No results found...',\n    },\n\n    /**\n     * Used for normalizing source data.\n     * @type {function(node, instanceId): node}\n     */\n    normalizer: {\n      type: Function,\n      default: identity,\n    },\n\n    /**\n     * By default (`auto`), the menu will open below the control. If there is not\n     * enough space, vue-treeselect will automatically flip the menu.\n     * You can use one of other four options to force the menu to be always opened\n     * to specified direction.\n     * Acceptable values:\n     *   - `\"auto\"`\n     *   - `\"below\"`\n     *   - `\"bottom\"`\n     *   - `\"above\"`\n     *   - `\"top\"`\n     */\n    openDirection: {\n      type: String,\n      default: 'auto',\n      validator(value) {\n        const acceptableValues = [ 'auto', 'top', 'bottom', 'above', 'below' ]\n        return includes(acceptableValues, value)\n      },\n    },\n\n    /**\n     * Whether to automatically open the menu when the control is clicked.\n     */\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Whether to automatically open the menu when the control is focused.\n     */\n    openOnFocus: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Array of available options.\n     * @type {node[]}\n     */\n    options: {\n      type: Array,\n    },\n\n    /**\n     * Field placeholder, displayed when there's no value.\n     */\n    placeholder: {\n      type: String,\n      default: 'Select...',\n    },\n\n    /**\n     * Applies HTML5 required attribute when needed.\n     */\n    required: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Text displayed asking user whether to retry loading children options.\n     */\n    retryText: {\n      type: String,\n      default: 'Retry?',\n    },\n\n    /**\n     * Title for the retry button.\n     */\n    retryTitle: {\n      type: String,\n      default: 'Click to retry',\n    },\n\n    /**\n     * Enable searching feature?\n     */\n    searchable: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Search in ancestor nodes too.\n     */\n    searchNested: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Text tip to prompt for async search.\n     */\n    searchPromptText: {\n      type: String,\n      default: 'Type to search...',\n    },\n\n    /**\n     * Whether to show a children count next to the label of each branch node.\n     */\n    showCount: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * For performance we can set a start search length. It doesn't run search until sat length. If there are thounds of options then this helps well.\n     * default: 1\n     */\n    startSearchLength: {\n      type: Number,\n      default: 1,\n    },\n\n    /**\n     * For performance we can set a wait time for search. It wait between characters sat time and run search on time only last. It helps much options there.\n     * default: 0\n     * time measurement: millisecond\n     */\n    waitSearchFinishTime: {\n      type: Number,\n      default: 0,\n    },\n\n    /**\n     * Used in conjunction with `showCount` to specify which type of count number should be displayed.\n     * Acceptable values:\n     *   - \"ALL_CHILDREN\"\n     *   - \"ALL_DESCENDANTS\"\n     *   - \"LEAF_CHILDREN\"\n     *   - \"LEAF_DESCENDANTS\"\n     */\n    showCountOf: {\n      type: String,\n      default: ALL_CHILDREN,\n      validator(value) {\n        const acceptableValues = [ ALL_CHILDREN, ALL_DESCENDANTS, LEAF_CHILDREN, LEAF_DESCENDANTS ]\n        return includes(acceptableValues, value)\n      },\n    },\n\n    /**\n     * Whether to show children count when searching.\n     * Fallbacks to the value of `showCount` when not specified.\n     * @type {boolean}\n     */\n    showCountOnSearch: null,\n\n    /**\n     * In which order the selected options should be displayed in trigger & sorted in `value` array.\n     * Used for multi-select mode only.\n     * Acceptable values:\n     *   - \"ORDER_SELECTED\"\n     *   - \"LEVEL\"\n     *   - \"INDEX\"\n     */\n    sortValueBy: {\n      type: String,\n      default: ORDER_SELECTED,\n      validator(value) {\n        const acceptableValues = [ ORDER_SELECTED, LEVEL, INDEX ]\n        return includes(acceptableValues, value)\n      },\n    },\n\n    /**\n     * Tab index of the control.\n     */\n    tabIndex: {\n      type: Number,\n      default: 0,\n    },\n\n    /**\n     * The value of the control.\n     * Should be `id` or `node` object for single-select mode, or an array of `id` or `node` object for multi-select mode.\n     * Its format depends on the `valueFormat` prop.\n     * For most cases, just use `v-model` instead.\n     * @type {?Array}\n     */\n    value: null,\n\n    /**\n     * Which kind of nodes should be included in the `value` array in multi-select mode.\n     * Acceptable values:\n     *   - \"ALL\" - Any node that is checked will be included in the `value` array\n     *   - \"BRANCH_PRIORITY\" (default) - If a branch node is checked, all its descendants will be excluded in the `value` array\n     *   - \"LEAF_PRIORITY\" - If a branch node is checked, this node itself and its branch descendants will be excluded from the `value` array but its leaf descendants will be included\n     *   - \"ALL_WITH_INDETERMINATE\" - Any node that is checked will be included in the `value` array, plus indeterminate nodes\n     */\n    valueConsistsOf: {\n      type: String,\n      default: BRANCH_PRIORITY,\n      validator(value) {\n        const acceptableValues = [ ALL, BRANCH_PRIORITY, LEAF_PRIORITY, ALL_WITH_INDETERMINATE ]\n        return includes(acceptableValues, value)\n      },\n    },\n\n    /**\n     * Format of `value` prop.\n     * Note that, when set to `\"object\"`, only `id` & `label` properties are required in each `node` object in `value` prop.\n     * Acceptable values:\n     *   - \"id\"\n     *   - \"object\"\n     */\n    valueFormat: {\n      type: String,\n      default: 'id',\n    },\n\n    /**\n     * z-index of the menu.\n     */\n    zIndex: {\n      type: [ Number, String ],\n      default: 999,\n    },\n  },\n\n  data() {\n    return {\n      trigger: {\n        // Is the control focused?\n        isFocused: false,\n        // User entered search query - value of the input.\n        searchQuery: '',\n      },\n\n      menu: {\n        // Is the menu opened?\n        isOpen: false,\n        // Id of current highlighted option.\n        current: null,\n        // The scroll position before last menu closing.\n        lastScrollPosition: 0,\n        // Which direction to open the menu.\n        placement: 'bottom',\n      },\n\n      forest: {\n        // Normalized options.\n        normalizedOptions: [],\n        // <id, node> map for quick look-up.\n        nodeMap: createMap(),\n        // <id, checkedState> map, used for multi-select mode.\n        checkedStateMap: createMap(),\n        // Id list of all selected options.\n        selectedNodeIds: this.extractCheckedNodeIdsFromValue(),\n        // <id, true> map for fast checking:\n        //   if (forest.selectedNodeIds.indexOf(id) !== -1) forest.selectedNodeMap[id] === true\n        selectedNodeMap: createMap(),\n      },\n\n      // States of root options.\n      rootOptionsStates: createAsyncOptionsStates(),\n\n      localSearch: {\n        // Has user entered any query to search local options?\n        active: false,\n        // Has any options matched the search query?\n        noResults: true,\n        // <id, countObject> map for counting matched children/descendants.\n        countMap: createMap(),\n      },\n\n      lastSearchInput: null,\n\n      // <searchQuery, remoteSearchEntry> map.\n      remoteSearch: createMap(),\n      /**\n     * Is there any branch node?\n     * @type {boolean}\n     */\n      hasBranchNodes: null,\n    }\n  },\n\n  computed: {\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Normalized nodes that have been selected.\n     * @type {node[]}\n     */\n    selectedNodes() {\n      return this.forest.selectedNodeIds.map(this.getNode)\n    },\n    /**\n     * Id list of selected nodes with `sortValueBy` prop applied.\n     * @type {nodeId[]}\n     */\n    internalValue() {\n      let internalValue\n\n      // istanbul ignore else\n      if (this.single || this.flat || this.disableBranchNodes || this.valueConsistsOf === ALL) {\n        internalValue = this.forest.selectedNodeIds.slice()\n      } else if (this.valueConsistsOf === BRANCH_PRIORITY) {\n        internalValue = this.forest.selectedNodeIds.filter(id => {\n          const node = this.getNode(id)\n          if (node.isRootNode) return true\n          return !this.isSelected(node.parentNode)\n        })\n      } else if (this.valueConsistsOf === LEAF_PRIORITY) {\n        internalValue = this.forest.selectedNodeIds.filter(id => {\n          const node = this.getNode(id)\n          if (node.isLeaf) return true\n          return node.children.length === 0\n        })\n      } else if (this.valueConsistsOf === ALL_WITH_INDETERMINATE) {\n        const indeterminateNodeIds = []\n        internalValue = this.forest.selectedNodeIds.slice()\n        this.selectedNodes.forEach(selectedNode => {\n          selectedNode.ancestors.forEach(ancestor => {\n            if (includes(indeterminateNodeIds, ancestor.id)) return\n            if (includes(internalValue, ancestor.id)) return\n            indeterminateNodeIds.push(ancestor.id)\n          })\n        })\n        internalValue.push(...indeterminateNodeIds)\n      }\n\n      if (this.sortValueBy === LEVEL) {\n        internalValue.sort((a, b) => sortValueByLevel(this.getNode(a), this.getNode(b)))\n      } else if (this.sortValueBy === INDEX) {\n        internalValue.sort((a, b) => sortValueByIndex(this.getNode(a), this.getNode(b)))\n      }\n\n      return internalValue\n    },\n    /**\n     * Has any option been selected?\n     * @type {boolean}\n     */\n    hasValue() {\n      return this.internalValue.length > 0\n    },\n    /**\n     * Single-select mode?\n     * @type {boolean}\n     */\n    single() {\n      return !this.multiple\n    },\n    /**\n     * Id list of nodes displayed in the menu. Nodes that are considered NOT visible:\n     *   - descendants of a collapsed branch node\n     *   - in local search mode, nodes that are not matched, unless\n     *       - it's a branch node and has matched descendants\n     *       - it's a leaf node and its parent node is explicitly set to show all children\n     * @type {id[]}\n     */\n    visibleOptionIds() {\n      const visibleOptionIds = []\n\n      this.traverseAllNodesByIndex(node => {\n        if (!this.localSearch.active || this.shouldOptionBeIncludedInSearchResult(node)) {\n          visibleOptionIds.push(node.id)\n        }\n        // Skip the traversal of descendants of a branch node if it's not expanded.\n        if (node.isBranch && !this.shouldExpand(node)) {\n          return false\n        }\n      })\n\n      return visibleOptionIds\n    },\n    /**\n     * Has any option should be displayed in the menu?\n     * @type {boolean}\n     */\n    hasVisibleOptions() {\n      return this.visibleOptionIds.length !== 0\n    },\n    /**\n     * Should show children count when searching?\n     * @type {boolean}\n     */\n    showCountOnSearchComputed() {\n      // Vue doesn't allow setting default prop value based on another prop value.\n      // So use computed property as a workaround.\n      // https://github.com/vuejs/vue/issues/6358\n      return typeof this.showCountOnSearch === 'boolean'\n        ? this.showCountOnSearch\n        : this.showCount\n    },\n    shouldFlattenOptions() {\n      return this.localSearch.active && this.flattenSearchResults\n    },\n    /* eslint-enable valid-jsdoc */\n  },\n\n  watch: {\n    alwaysOpen(newValue) {\n      if (newValue) this.openMenu()\n      else this.closeMenu()\n    },\n\n    branchNodesFirst() {\n      this.initialize()\n    },\n\n    disabled(newValue) {\n      // force close the menu after disabling the control\n      if (newValue && this.menu.isOpen) this.closeMenu()\n      else if (!newValue && !this.menu.isOpen && this.alwaysOpen) this.openMenu()\n    },\n\n    flat() {\n      this.initialize()\n    },\n\n    internalValue(newValue, oldValue) {\n      const hasChanged = quickDiff(newValue, oldValue)\n      // #122\n      // Vue would trigger this watcher when `newValue` and `oldValue` are shallow-equal.\n      // We emit the `input` event only when the value actually changes.\n      if (hasChanged) this.$emit('input', this.getValue(), this.getInstanceId())\n    },\n\n    matchKeys() {\n      this.initialize()\n    },\n\n    multiple(newValue) {\n      // We need to rebuild the state when switching from single-select mode\n      // to multi-select mode.\n      // istanbul ignore else\n      if (newValue) this.buildForestState()\n    },\n\n    options: {\n      handler() {\n        if (this.async) return\n        // Re-initialize options when the `options` prop has changed.\n        this.initialize()\n        this.rootOptionsStates.isLoaded = Array.isArray(this.options)\n      },\n      deep: true,\n      immediate: true,\n    },\n\n    'trigger.searchQuery'() {\n      if (this.async) {\n        this.handleRemoteSearch()\n      } else {\n        this.handleLocalSearch()\n      }\n\n      this.$emit('search-change', this.trigger.searchQuery, this.getInstanceId())\n    },\n\n    value() {\n      const nodeIdsFromValue = this.extractCheckedNodeIdsFromValue()\n      const hasChanged = quickDiff(nodeIdsFromValue, this.internalValue)\n      if (hasChanged) this.fixSelectedNodeIds(nodeIdsFromValue)\n    },\n  },\n\n  methods: {\n    verifyProps() {\n      warning(\n        () => this.async ? this.searchable : true,\n        () => 'For async search mode, the value of \"searchable\" prop must be true.',\n      )\n\n      if (this.options == null && !this.loadOptions) {\n        warning(\n          () => false,\n          () => 'Are you meant to dynamically load options? You need to use \"loadOptions\" prop.',\n        )\n      }\n\n      if (this.flat) {\n        warning(\n          () => this.multiple,\n          () => 'You are using flat mode. But you forgot to add \"multiple=true\"?',\n        )\n      }\n\n      if (!this.flat) {\n        const propNames = [\n          'autoSelectAncestors',\n          'autoSelectDescendants',\n          'autoDeselectAncestors',\n          'autoDeselectDescendants',\n        ]\n\n        propNames.forEach(propName => {\n          warning(\n            () => !this[propName],\n            () => `\"${propName}\" only applies to flat mode.`,\n          )\n        })\n      }\n    },\n\n    resetFlags() {\n      this._blurOnSelect = false\n    },\n\n    initialize() {\n      const options = this.async\n        ? this.getRemoteSearchEntry().options\n        : this.options ? this.options.filter(o => o) : {}\n\n      if (Array.isArray(options)) {\n        // In case we are re-initializing options, keep the old state tree temporarily.\n        const prevNodeMap = this.forest.nodeMap\n        this.forest.nodeMap = createMap()\n        this.keepDataOfSelectedNodes(prevNodeMap)\n        this.forest.normalizedOptions = this.normalize(NO_PARENT_NODE, options, prevNodeMap)\n        // Cases that need fixing `selectedNodeIds`:\n        //   1) Children options of a checked node have been delayed loaded,\n        //      we should also mark these children as checked. (multi-select mode)\n        //   2) Root options have been delayed loaded, we need to initialize states\n        //      of these nodes. (multi-select mode)\n        //   3) Async search mode.\n        this.fixSelectedNodeIds(this.internalValue)\n      } else {\n        this.forest.normalizedOptions = []\n      }\n\n      this.hasBranchNodes = this.forest.normalizedOptions.some(rootNode => rootNode.isBranch)\n    },\n\n    getInstanceId() {\n      return this.instanceId == null ? this.id : this.instanceId\n    },\n\n    getValue() {\n      if (this.valueFormat === 'id') {\n        return this.multiple\n          ? this.internalValue.slice()\n          : this.internalValue[0]\n      }\n\n      const rawNodes = this.internalValue.map(id => this.getNode(id).raw)\n      return this.multiple ? rawNodes : rawNodes[0]\n    },\n\n    getNode(nodeId) {\n      warning(\n        () => nodeId != null,\n        () => `Invalid node id: ${nodeId}`,\n      )\n\n      if (nodeId == null) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(this.options)\n        }\n        return null\n      }\n\n      return nodeId in this.forest.nodeMap\n        ? this.forest.nodeMap[nodeId]\n        : this.createFallbackNode(nodeId)\n    },\n\n    createFallbackNode(id) {\n      // In case there is a default selected node that is not loaded into the tree yet,\n      // we create a fallback node to keep the component working.\n      // When the real data is loaded, we'll override this fake node.\n\n      const raw = this.extractNodeFromValue(id)\n      const label = this.enhancedNormalizer(raw).label || `${id} (unknown)`\n      const fallbackNode = {\n        id,\n        label,\n        ancestors: [],\n        parentNode: NO_PARENT_NODE,\n        isFallbackNode: true,\n        isRootNode: true,\n        isLeaf: true,\n        isBranch: false,\n        isDisabled: false,\n        isNew: false,\n        index: [ -1 ],\n        level: 0,\n        raw,\n      }\n\n      return this.$set(this.forest.nodeMap, id, fallbackNode)\n    },\n\n    extractCheckedNodeIdsFromValue() {\n      if (this.value == null) return []\n\n      if (this.valueFormat === 'id') {\n        return this.multiple\n          ? this.value.slice()\n          : [ this.value ]\n      }\n\n      return (this.multiple ? this.value : [ this.value ])\n        .map(node => this.enhancedNormalizer(node))\n        .map(node => node.id)\n    },\n\n    extractNodeFromValue(id) {\n      const defaultNode = { id }\n\n      if (this.valueFormat === 'id') {\n        return defaultNode\n      }\n\n      const valueArray = this.multiple\n        ? Array.isArray(this.value) ? this.value : []\n        : this.value ? [ this.value ] : []\n      const matched = find(\n        valueArray,\n        node => node && this.enhancedNormalizer(node).id === id,\n      )\n\n      return matched || defaultNode\n    },\n\n    fixSelectedNodeIds(nodeIdListOfPrevValue) {\n      let nextSelectedNodeIds = []\n\n      // istanbul ignore else\n      if (this.single || this.flat || this.disableBranchNodes || this.valueConsistsOf === ALL) {\n        nextSelectedNodeIds = nodeIdListOfPrevValue\n      } else if (this.valueConsistsOf === BRANCH_PRIORITY) {\n        nodeIdListOfPrevValue.forEach(nodeId => {\n          if (!nodeId) {\n            return\n          }\n          nextSelectedNodeIds.push(nodeId)\n          const node = this.getNode(nodeId)\n          if (node && node.isBranch) this.traverseDescendantsBFS(node, descendant => {\n            if (descendant) {\n              nextSelectedNodeIds.push(descendant.id)\n            }\n          })\n        })\n      } else if (this.valueConsistsOf === LEAF_PRIORITY) {\n        const map = createMap()\n        const queue = nodeIdListOfPrevValue.slice()\n        while (queue.length) {\n          const nodeId = queue.shift()\n          const node = this.getNode(nodeId)\n          nextSelectedNodeIds.push(nodeId)\n          if (node.isRootNode) continue\n          if (!node.parentNode) continue\n          if (!(node.parentNode.id in map)) map[node.parentNode.id] = node.parentNode.children.length\n          if (--map[node.parentNode.id] === 0) queue.push(node.parentNode.id)\n        }\n      } else if (this.valueConsistsOf === ALL_WITH_INDETERMINATE) {\n        const map = createMap()\n        const queue = nodeIdListOfPrevValue.filter(nodeId => {\n          const node = this.getNode(nodeId)\n          return node.isLeaf || node.children.length === 0\n        })\n        while (queue.length) {\n          const nodeId = queue.shift()\n          const node = this.getNode(nodeId)\n          nextSelectedNodeIds.push(nodeId)\n          if (node.isRootNode) continue\n          if (!node.parentNode) continue\n          if (!(node.parentNode.id in map)) map[node.parentNode.id] = node.parentNode.children.length\n          if (--map[node.parentNode.id] === 0) queue.push(node.parentNode.id)\n        }\n      }\n\n      const hasChanged = quickDiff(this.forest.selectedNodeIds, nextSelectedNodeIds)\n      // If `nextSelectedNodeIds` doesn't actually differ from old `selectedNodeIds`,\n      // we don't make the assignment to avoid triggering its watchers which may cause\n      // unnecessary calculations.\n      if (hasChanged) this.forest.selectedNodeIds = nextSelectedNodeIds\n\n      this.buildForestState()\n    },\n\n    keepDataOfSelectedNodes(prevNodeMap) {\n      // In case there is any selected node that is not present in the new `options` array.\n      // It could be useful for async search mode.\n      this.forest.selectedNodeIds.forEach(id => {\n        if (!prevNodeMap[id]) return\n        const node = {\n          ...prevNodeMap[id],\n          isFallbackNode: true,\n        }\n        this.$set(this.forest.nodeMap, id, node)\n      })\n    },\n\n    isSelected(node) {\n      // whether a node is selected (single-select mode) or fully-checked (multi-select mode)\n      return this.forest.selectedNodeMap[node.id] === true\n    },\n\n    traverseDescendantsBFS(parentNode, callback) {\n      // istanbul ignore if\n      if (!parentNode.isBranch) return\n      const queue = parentNode.children.slice()\n      while (queue.length) {\n        const currNode = queue[0]\n        if (currNode.isBranch) queue.push(...currNode.children)\n        callback(currNode)\n        queue.shift()\n      }\n    },\n\n    traverseDescendantsDFS(parentNode, callback) {\n      if (!parentNode.isBranch) return\n      parentNode.children.forEach(child => {\n        // deep-level node first\n        this.traverseDescendantsDFS(child, callback)\n        callback(child)\n      })\n    },\n\n    traverseAllNodesDFS(callback) {\n      this.forest.normalizedOptions.forEach(rootNode => {\n        // deep-level node first\n        this.traverseDescendantsDFS(rootNode, callback)\n        callback(rootNode)\n      })\n    },\n\n    traverseAllNodesByIndex(callback) {\n      const walk = parentNode => {\n        parentNode.children.forEach(child => {\n          if (callback(child) !== false && child.isBranch) {\n            walk(child)\n          }\n        })\n      }\n\n      // To simplify the code logic of traversal,\n      // we create a fake root node that holds all the root options.\n      walk({ children: this.forest.normalizedOptions })\n    },\n\n    toggleClickOutsideEvent(enabled) {\n      if (enabled) {\n        document.addEventListener('mousedown', this.handleClickOutside, false)\n      } else {\n        document.removeEventListener('mousedown', this.handleClickOutside, false)\n      }\n    },\n\n    getValueContainer() {\n      return this.$refs.control.$refs['value-container']\n    },\n\n    getInput() {\n      return this.getValueContainer().$refs.input\n    },\n\n    focusInput() {\n      this.getInput().focus()\n    },\n\n    blurInput() {\n      this.getInput().blur()\n    },\n\n    handleMouseDown: onLeftClick(function handleMouseDown(evt) {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (this.disabled) return\n\n      const isClickedOnValueContainer = this.getValueContainer().$el.contains(evt.target)\n      if (isClickedOnValueContainer && !this.menu.isOpen && (this.openOnClick || this.trigger.isFocused)) {\n        this.openMenu()\n      }\n\n      if (this._blurOnSelect) {\n        this.blurInput()\n      } else {\n        // Focus the input or prevent blurring.\n        this.focusInput()\n      }\n\n      this.resetFlags()\n    }),\n\n    handleClickOutside(evt) {\n      // istanbul ignore else\n      if (this.$refs.wrapper && !this.$refs.wrapper.contains(evt.target)) {\n        this.blurInput()\n        this.closeMenu()\n      }\n    },\n\n    handleLocalSearch(retry) {\n      const { searchQuery } = this.trigger\n      const done = () => this.resetHighlightedOptionWhenNecessary(true)\n      const ignore = () => this.resetHighlightedOptionWhenNecessary(false)\n\n      if (!searchQuery) {\n        // Exit sync search mode.\n        this.localSearch.active = false\n        this.lastSearchInput = null\n        return done()\n      }\n\n      if (searchQuery.length < this.startSearchLength) {\n        // Ignore.\n        return ignore()\n      }\n\n      if (this.waitSearchFinishTime > 0) {\n        // If waitSearchFinishTime configured.\n        const now = new Date()\n        if (!this.lastSearchInput) {\n          // First time.\n          setTimeout(() => {\n            this.handleLocalSearch(true)\n          }, this.waitSearchFinishTime)\n\n          this.lastSearchInput = now\n          return ignore()\n        }\n\n        const diff = now - this.lastSearchInput\n        if (diff < this.waitSearchFinishTime && !retry) {\n          setTimeout(() => {\n            this.handleLocalSearch(true)\n          }, this.waitSearchFinishTime)\n\n          this.lastSearchInput = now\n          return ignore()\n        }\n\n        if (retry && diff < this.waitSearchFinishTime) {\n          return ignore()\n        }\n\n        this.lastSearchInput = now\n      }\n\n      // Enter sync search mode.\n      this.localSearch.active = true\n\n      // Reset states.\n      this.localSearch.noResults = true\n      this.traverseAllNodesDFS(node => {\n        if (node.isBranch) {\n          node.isExpandedOnSearch = false\n          node.showAllChildrenOnSearch = false\n          node.isMatched = false\n          node.hasMatchedDescendants = false\n          this.$set(this.localSearch.countMap, node.id, {\n            [ALL_CHILDREN]: 0,\n            [ALL_DESCENDANTS]: 0,\n            [LEAF_CHILDREN]: 0,\n            [LEAF_DESCENDANTS]: 0,\n          })\n        }\n      })\n\n      const lowerCasedSearchQuery = searchQuery.trim().toLocaleLowerCase()\n      const splitSearchQuery = lowerCasedSearchQuery.replace(/\\s+/g, ' ').split(' ')\n      this.traverseAllNodesDFS(node => {\n        if (this.searchNested && splitSearchQuery.length > 1) {\n          node.isMatched = splitSearchQuery.every(filterValue =>\n            match(false, filterValue, node.nestedSearchLabel),\n          )\n        } else {\n          node.isMatched = this.matchKeys.some(matchKey =>\n            match(!this.disableFuzzyMatching, lowerCasedSearchQuery, node.lowerCased[matchKey]),\n          )\n        }\n\n        if (node.isMatched) {\n          this.localSearch.noResults = false\n          node.ancestors.forEach(ancestor => this.localSearch.countMap[ancestor.id][ALL_DESCENDANTS]++)\n          if (node.isLeaf) node.ancestors.forEach(ancestor => this.localSearch.countMap[ancestor.id][LEAF_DESCENDANTS]++)\n          if (node.parentNode !== NO_PARENT_NODE) {\n            this.localSearch.countMap[node.parentNode.id][ALL_CHILDREN] += 1\n            // istanbul ignore else\n            if (node.isLeaf) this.localSearch.countMap[node.parentNode.id][LEAF_CHILDREN] += 1\n          }\n        }\n\n        if (\n          (node.isMatched || (node.isBranch && node.isExpandedOnSearch)) &&\n          node.parentNode !== NO_PARENT_NODE\n        ) {\n          node.parentNode.isExpandedOnSearch = true\n          node.parentNode.hasMatchedDescendants = true\n        }\n      })\n\n      done()\n      // Reset time\n      this.lastSearchInput = null\n    },\n\n    handleRemoteSearch() {\n      const { searchQuery } = this.trigger\n      const entry = this.getRemoteSearchEntry()\n      const done = () => {\n        this.initialize()\n        this.resetHighlightedOptionWhenNecessary(true)\n      }\n\n      if ((searchQuery === '' || this.cacheOptions) && entry.isLoaded) {\n        return done()\n      }\n\n      this.callLoadOptionsProp({\n        action: ASYNC_SEARCH,\n        args: { searchQuery },\n        isPending() {\n          return entry.isLoading\n        },\n        start: () => {\n          entry.isLoading = true\n          entry.isLoaded = false\n          entry.loadingError = ''\n        },\n        succeed: options => {\n          entry.isLoaded = true\n          entry.options = options\n          // When the request completes, the search query may have changed.\n          // We only show these options if they are for the current search query.\n          if (this.trigger.searchQuery === searchQuery) done()\n        },\n        fail: err => {\n          entry.loadingError = getErrorMessage(err)\n        },\n        end: () => {\n          entry.isLoading = false\n        },\n      })\n    },\n\n    getRemoteSearchEntry() {\n      const { searchQuery } = this.trigger\n      const entry = this.remoteSearch[searchQuery] || {\n        ...createAsyncOptionsStates(),\n        options: [],\n      }\n\n      // Vue doesn't support directly watching on objects.\n      this.$watch(\n        () => entry.options,\n        () => {\n          // TODO: potential redundant re-initialization.\n          if (this.trigger.searchQuery === searchQuery) this.initialize()\n        },\n        { deep: true },\n      )\n\n      if (searchQuery === '') {\n        if (Array.isArray(this.defaultOptions)) {\n          entry.options = this.defaultOptions\n          entry.isLoaded = true\n          return entry\n        } else if (this.defaultOptions !== true) {\n          entry.isLoaded = true\n          return entry\n        }\n      }\n\n      if (!this.remoteSearch[searchQuery]) {\n        this.$set(this.remoteSearch, searchQuery, entry)\n      }\n\n      return entry\n    },\n\n    shouldExpand(node) {\n      return this.localSearch.active ? node.isExpandedOnSearch : node.isExpanded\n    },\n\n    shouldOptionBeIncludedInSearchResult(node) {\n      // 1) This option is matched.\n      if (node.isMatched) return true\n      // 2) This option is not matched, but has matched descendant(s).\n      if (node.isBranch && node.hasMatchedDescendants && !this.flattenSearchResults) return true\n      // 3) This option's parent has no matched descendants,\n      //    but after being expanded, all its children should be shown.\n      if (!node.isRootNode && node.parentNode.showAllChildrenOnSearch) return true\n      // 4) The default case.\n      return false\n    },\n\n    shouldShowOptionInMenu(node) {\n      if (this.localSearch.active && !this.shouldOptionBeIncludedInSearchResult(node)) {\n        return false\n      }\n      return true\n    },\n\n    getControl() {\n      return this.$refs.control.$el\n    },\n\n    getMenu() {\n      const ref = this.appendToBody ? this.$refs.portal.portalTarget : this\n      const $menu = ref.$refs.menu.$refs.menu\n      return $menu && $menu.nodeName !== '#comment' ? $menu : null\n    },\n\n    setCurrentHighlightedOption(node, scroll = true) {\n      const prev = this.menu.current\n      if (prev != null && prev in this.forest.nodeMap) {\n        this.forest.nodeMap[prev].isHighlighted = false\n      }\n\n      this.menu.current = node.id\n      node.isHighlighted = true\n\n      if (this.menu.isOpen && scroll) {\n        const scrollToOption = () => {\n          const $menu = this.getMenu()\n          const $option = $menu.querySelector(`.vue-treeselect__option[data-id=\"${node.id}\"]`)\n          if ($option) scrollIntoView($menu, $option)\n        }\n\n        // In case `openMenu()` is just called and the menu is not rendered yet.\n        if (this.getMenu()) {\n          scrollToOption()\n        } else {\n          // istanbul ignore next\n          this.$nextTick(scrollToOption)\n        }\n      }\n    },\n\n    resetHighlightedOptionWhenNecessary(forceReset = false) {\n      const { current } = this.menu\n\n      if (\n        forceReset || current == null ||\n        !(current in this.forest.nodeMap) ||\n        !this.shouldShowOptionInMenu(this.getNode(current))\n      ) {\n        this.highlightFirstOption()\n      }\n    },\n\n    highlightFirstOption() {\n      if (!this.hasVisibleOptions) return\n\n      const first = this.visibleOptionIds[0]\n      this.setCurrentHighlightedOption(this.getNode(first))\n    },\n\n    highlightPrevOption() {\n      if (!this.hasVisibleOptions) return\n\n      const prev = this.visibleOptionIds.indexOf(this.menu.current) - 1\n      if (prev === -1) return this.highlightLastOption()\n      this.setCurrentHighlightedOption(this.getNode(this.visibleOptionIds[prev]))\n    },\n\n    highlightNextOption() {\n      if (!this.hasVisibleOptions) return\n\n      const next = this.visibleOptionIds.indexOf(this.menu.current) + 1\n      if (next === this.visibleOptionIds.length) return this.highlightFirstOption()\n      this.setCurrentHighlightedOption(this.getNode(this.visibleOptionIds[next]))\n    },\n\n    highlightLastOption() {\n      if (!this.hasVisibleOptions) return\n\n      const last = getLast(this.visibleOptionIds)\n      this.setCurrentHighlightedOption(this.getNode(last))\n    },\n\n    resetSearchQuery() {\n      this.trigger.searchQuery = ''\n    },\n\n    closeMenu() {\n      if (!this.menu.isOpen || (!this.disabled && this.alwaysOpen)) return\n      this.saveMenuScrollPosition()\n      this.menu.isOpen = false\n      this.toggleClickOutsideEvent(false)\n      this.resetSearchQuery()\n      this.$emit('close', this.getValue(), this.getInstanceId())\n    },\n\n    openMenu() {\n      if (this.disabled || this.menu.isOpen) return\n      this.menu.isOpen = true\n      this.$nextTick(this.resetHighlightedOptionWhenNecessary)\n      this.$nextTick(this.restoreMenuScrollPosition)\n      if (!this.options && !this.async) this.loadRootOptions()\n      this.toggleClickOutsideEvent(true)\n      this.$emit('open', this.getInstanceId())\n    },\n\n    toggleMenu() {\n      if (this.menu.isOpen) {\n        this.closeMenu()\n      } else {\n        this.openMenu()\n      }\n    },\n\n    toggleExpanded(node) {\n      let nextState\n\n      if (this.localSearch.active) {\n        nextState = node.isExpandedOnSearch = !node.isExpandedOnSearch\n        if (nextState) node.showAllChildrenOnSearch = true\n      } else {\n        nextState = node.isExpanded = !node.isExpanded\n      }\n\n      if (nextState && !node.childrenStates.isLoaded) {\n        this.loadChildrenOptions(node)\n      }\n    },\n\n    buildForestState() {\n      const selectedNodeMap = createMap()\n      this.forest.selectedNodeIds.forEach(selectedNodeId => {\n        selectedNodeMap[selectedNodeId] = true\n      })\n      this.forest.selectedNodeMap = selectedNodeMap\n\n      const checkedStateMap = createMap()\n      if (this.multiple) {\n        this.traverseAllNodesByIndex(node => {\n          checkedStateMap[node.id] = UNCHECKED\n        })\n\n        this.selectedNodes.forEach(selectedNode => {\n          checkedStateMap[selectedNode.id] = CHECKED\n\n          if (!this.flat && !this.disableBranchNodes) {\n            selectedNode.ancestors.forEach(ancestorNode => {\n              if (!this.isSelected(ancestorNode)) {\n                checkedStateMap[ancestorNode.id] = INDETERMINATE\n              }\n            })\n          }\n        })\n      }\n      this.forest.checkedStateMap = checkedStateMap\n    },\n\n    enhancedNormalizer(raw) {\n      return {\n        ...raw,\n        ...this.normalizer(raw, this.getInstanceId()),\n      }\n    },\n\n    normalize(parentNode, nodes, prevNodeMap) {\n      let normalizedOptions = nodes\n        .map(node => [ this.enhancedNormalizer(node), node ])\n        .map(([ node, raw ], index) => {\n          this.checkDuplication(node)\n          this.verifyNodeShape(node)\n\n          const { id, label, children, isDefaultExpanded } = node\n          const isRootNode = parentNode === NO_PARENT_NODE\n          const level = isRootNode ? 0 : parentNode.level + 1\n          const isBranch = Array.isArray(children) || children === null\n          const isLeaf = !isBranch\n          const isDisabled = !!node.isDisabled || (!this.flat && !isRootNode && parentNode.isDisabled)\n          const isNew = !!node.isNew\n          const lowerCased = this.matchKeys.reduce((prev, key) => ({\n            ...prev,\n            [key]: stringifyOptionPropValue(node[key]).toLocaleLowerCase(),\n          }), {})\n          const nestedSearchLabel = isRootNode\n            ? lowerCased.label\n            : parentNode.nestedSearchLabel + ' ' + lowerCased.label\n\n          const normalized = this.$set(this.forest.nodeMap, id, createMap())\n          this.$set(normalized, 'id', id)\n          this.$set(normalized, 'label', label)\n          this.$set(normalized, 'level', level)\n          this.$set(normalized, 'ancestors', isRootNode ? [] : [ parentNode ].concat(parentNode.ancestors))\n          this.$set(normalized, 'index', (isRootNode ? [] : parentNode.index).concat(index))\n          this.$set(normalized, 'parentNode', parentNode)\n          this.$set(normalized, 'lowerCased', lowerCased)\n          this.$set(normalized, 'nestedSearchLabel', nestedSearchLabel)\n          this.$set(normalized, 'isDisabled', isDisabled)\n          this.$set(normalized, 'isNew', isNew)\n          this.$set(normalized, 'isMatched', false)\n          this.$set(normalized, 'isHighlighted', false)\n          this.$set(normalized, 'isBranch', isBranch)\n          this.$set(normalized, 'isLeaf', isLeaf)\n          this.$set(normalized, 'isRootNode', isRootNode)\n          this.$set(normalized, 'raw', raw)\n\n          if (isBranch) {\n            const isLoaded = Array.isArray(children)\n\n            this.$set(normalized, 'childrenStates', {\n              ...createAsyncOptionsStates(),\n              isLoaded,\n            })\n            this.$set(normalized, 'isExpanded', typeof isDefaultExpanded === 'boolean'\n              ? isDefaultExpanded\n              : level < this.defaultExpandLevel)\n            this.$set(normalized, 'hasMatchedDescendants', false)\n            this.$set(normalized, 'hasDisabledDescendants', false)\n            this.$set(normalized, 'isExpandedOnSearch', false)\n            this.$set(normalized, 'showAllChildrenOnSearch', false)\n            this.$set(normalized, 'count', {\n              [ALL_CHILDREN]: 0,\n              [ALL_DESCENDANTS]: 0,\n              [LEAF_CHILDREN]: 0,\n              [LEAF_DESCENDANTS]: 0,\n            })\n            this.$set(normalized, 'children', isLoaded\n              ? this.normalize(normalized, children, prevNodeMap)\n              : [])\n\n            if (isDefaultExpanded === true) normalized.ancestors.forEach(ancestor => {\n              ancestor.isExpanded = true\n            })\n\n            if (!isLoaded && typeof this.loadOptions !== 'function') {\n              warning(\n                () => false,\n                () => 'Unloaded branch node detected. \"loadOptions\" prop is required to load its children.',\n              )\n            } else if (!isLoaded && normalized.isExpanded) {\n              this.loadChildrenOptions(normalized)\n            }\n          }\n\n          normalized.ancestors.forEach(ancestor => ancestor.count[ALL_DESCENDANTS]++)\n          if (isLeaf) normalized.ancestors.forEach(ancestor => ancestor.count[LEAF_DESCENDANTS]++)\n          if (!isRootNode) {\n            parentNode.count[ALL_CHILDREN] += 1\n            if (isLeaf) parentNode.count[LEAF_CHILDREN] += 1\n            if (isDisabled) parentNode.hasDisabledDescendants = true\n          }\n\n          // Preserve previous states.\n          if (prevNodeMap && prevNodeMap[id]) {\n            const prev = prevNodeMap[id]\n\n            normalized.isMatched = prev.isMatched\n            normalized.showAllChildrenOnSearch = prev.showAllChildrenOnSearch\n            normalized.isHighlighted = prev.isHighlighted\n\n            if (prev.isBranch && normalized.isBranch) {\n              normalized.isExpanded = prev.isExpanded\n              normalized.isExpandedOnSearch = prev.isExpandedOnSearch\n              // #97\n              // If `isLoaded` was true, but IS NOT now, we consider this branch node\n              // to be reset to unloaded state by the user of this component.\n              if (prev.childrenStates.isLoaded && !normalized.childrenStates.isLoaded) {\n                // Make sure the node is collapsed, then the user can load its\n                // children again (by expanding).\n                normalized.isExpanded = false\n                // We have reset `childrenStates` and don't want to preserve states here.\n              } else {\n                normalized.childrenStates = { ...prev.childrenStates }\n              }\n            }\n          }\n\n          return normalized\n        })\n\n      if (this.branchNodesFirst) {\n        const branchNodes = normalizedOptions.filter(option => option.isBranch)\n        const leafNodes = normalizedOptions.filter(option => option.isLeaf)\n        normalizedOptions = branchNodes.concat(leafNodes)\n      }\n\n      return normalizedOptions\n    },\n\n    loadRootOptions() {\n      this.callLoadOptionsProp({\n        action: LOAD_ROOT_OPTIONS,\n        isPending: () => {\n          return this.rootOptionsStates.isLoading\n        },\n        start: () => {\n          this.rootOptionsStates.isLoading = true\n          this.rootOptionsStates.loadingError = ''\n        },\n        succeed: () => {\n          this.rootOptionsStates.isLoaded = true\n          // Wait for `options` being re-initialized.\n          this.$nextTick(() => {\n            this.resetHighlightedOptionWhenNecessary(true)\n          })\n        },\n        fail: err => {\n          this.rootOptionsStates.loadingError = getErrorMessage(err)\n        },\n        end: () => {\n          this.rootOptionsStates.isLoading = false\n        },\n      })\n    },\n\n    loadChildrenOptions(parentNode) {\n      // The options may be re-initialized anytime during the loading process.\n      // So `parentNode` can be stale and we use `getNode()` to avoid that.\n\n      const { id, raw } = parentNode\n\n      this.callLoadOptionsProp({\n        action: LOAD_CHILDREN_OPTIONS,\n        args: {\n          // We always pass the raw node instead of the normalized node to any\n          // callback provided by the user of this component.\n          // Because the shape of the raw node is more likely to be closing to\n          // what the back-end API service of the application needs.\n          parentNode: raw,\n        },\n        isPending: () => {\n          return this.getNode(id).childrenStates.isLoading\n        },\n        start: () => {\n          this.getNode(id).childrenStates.isLoading = true\n          this.getNode(id).childrenStates.loadingError = ''\n        },\n        succeed: () => {\n          this.getNode(id).childrenStates.isLoaded = true\n        },\n        fail: err => {\n          this.getNode(id).childrenStates.loadingError = getErrorMessage(err)\n        },\n        end: () => {\n          this.getNode(id).childrenStates.isLoading = false\n        },\n      })\n    },\n\n    callLoadOptionsProp({ action, args, isPending, start, succeed, fail, end }) {\n      if (!this.loadOptions || isPending()) {\n        return\n      }\n\n      start()\n\n      const callback = once((err, result) => {\n        if (err) {\n          fail(err)\n        } else {\n          succeed(result)\n        }\n\n        end()\n      })\n      const result = this.loadOptions({\n        id: this.getInstanceId(),\n        instanceId: this.getInstanceId(),\n        action,\n        ...args,\n        callback,\n      })\n\n      if (isPromise(result)) {\n        result.then(() => {\n          callback()\n        }, err => {\n          callback(err)\n        }).catch(err => {\n          // istanbul ignore next\n          console.error(err)\n        })\n      }\n    },\n\n    checkDuplication(node) {\n      warning(\n        () => !((node.id in this.forest.nodeMap) && !this.forest.nodeMap[node.id].isFallbackNode),\n        () => `Detected duplicate presence of node id ${JSON.stringify(node.id)}. ` +\n          `Their labels are \"${this.forest.nodeMap[node.id].label}\" and \"${node.label}\" respectively.`,\n      )\n    },\n\n    verifyNodeShape(node) {\n      warning(\n        () => !(node.children === undefined && node.isBranch === true),\n        () => 'Are you meant to declare an unloaded branch node? ' +\n          '`isBranch: true` is no longer supported, please use `children: null` instead.',\n      )\n    },\n\n    select(node) {\n      if (this.disabled || node.isDisabled) {\n        return\n      }\n\n      if (this.single) {\n        this.clear()\n      }\n\n      const nextState = this.multiple && !this.flat\n        ? this.forest.checkedStateMap[node.id] === UNCHECKED\n        : !this.isSelected(node)\n\n      if (nextState) {\n        this._selectNode(node)\n      } else {\n        this._deselectNode(node)\n      }\n\n      this.buildForestState()\n\n      if (nextState) {\n        this.$emit('select', node.raw, this.getInstanceId())\n      } else {\n        this.$emit('deselect', node.raw, this.getInstanceId())\n      }\n\n      if (this.localSearch.active && nextState && (this.single || this.clearOnSelect)) {\n        this.resetSearchQuery()\n      }\n\n      if (this.single && this.closeOnSelect) {\n        this.closeMenu()\n\n        // istanbul ignore else\n        if (this.searchable) {\n          this._blurOnSelect = true\n        }\n      }\n    },\n\n    clear() {\n      if (this.hasValue) {\n        if (this.single || this.allowClearingDisabled) {\n          this.forest.selectedNodeIds = []\n        } else /* if (this.multiple && !this.allowClearingDisabled) */ {\n          this.forest.selectedNodeIds = this.forest.selectedNodeIds.filter(nodeId =>\n            this.getNode(nodeId).isDisabled,\n          )\n        }\n\n        this.buildForestState()\n      }\n    },\n\n    // This is meant to be called only by `select()`.\n    _selectNode(node) {\n      if (this.single || this.disableBranchNodes) {\n        return this.addValue(node)\n      }\n\n      if (this.flat) {\n        this.addValue(node)\n\n        if (this.autoSelectAncestors) {\n          node.ancestors.forEach(ancestor => {\n            if (!this.isSelected(ancestor) && !ancestor.isDisabled) this.addValue(ancestor)\n          })\n        } else if (this.autoSelectDescendants) {\n          this.traverseDescendantsBFS(node, descendant => {\n            if (!this.isSelected(descendant) && !descendant.isDisabled) this.addValue(descendant)\n          })\n        }\n\n        return\n      }\n\n      const isFullyChecked = (\n        node.isLeaf ||\n        (/* node.isBranch && */!node.hasDisabledDescendants) ||\n        (/* node.isBranch && */this.allowSelectingDisabledDescendants)\n      )\n      if (isFullyChecked) {\n        this.addValue(node)\n      }\n\n      if (node.isBranch) {\n        this.traverseDescendantsBFS(node, descendant => {\n          if (!descendant.isDisabled || this.allowSelectingDisabledDescendants) {\n            this.addValue(descendant)\n          }\n        })\n      }\n\n      if (isFullyChecked) {\n        let curr = node\n        while ((curr = curr.parentNode) !== NO_PARENT_NODE) {\n          if (curr.children.every(this.isSelected)) this.addValue(curr)\n          else break\n        }\n      }\n    },\n\n    // This is meant to be called only by `select()`.\n    _deselectNode(node) {\n      if (this.disableBranchNodes) {\n        return this.removeValue(node)\n      }\n\n      if (this.flat) {\n        this.removeValue(node)\n\n        if (this.autoDeselectAncestors) {\n          node.ancestors.forEach(ancestor => {\n            if (this.isSelected(ancestor) && !ancestor.isDisabled) this.removeValue(ancestor)\n          })\n        } else if (this.autoDeselectDescendants) {\n          this.traverseDescendantsBFS(node, descendant => {\n            if (this.isSelected(descendant) && !descendant.isDisabled) this.removeValue(descendant)\n          })\n        }\n\n        return\n      }\n\n      let hasUncheckedSomeDescendants = false\n      if (node.isBranch) {\n        this.traverseDescendantsDFS(node, descendant => {\n          if (!descendant.isDisabled || this.allowSelectingDisabledDescendants) {\n            this.removeValue(descendant)\n            hasUncheckedSomeDescendants = true\n          }\n        })\n      }\n\n      if (\n        node.isLeaf ||\n        /* node.isBranch && */hasUncheckedSomeDescendants ||\n        /* node.isBranch && */node.children.length === 0\n      ) {\n        this.removeValue(node)\n\n        let curr = node\n        while ((curr = curr.parentNode) !== NO_PARENT_NODE) {\n          if (this.isSelected(curr)) this.removeValue(curr)\n          else break\n        }\n      }\n    },\n\n    addValue(node) {\n      this.forest.selectedNodeIds.push(node.id)\n      this.forest.selectedNodeMap[node.id] = true\n    },\n\n    removeValue(node) {\n      removeFromArray(this.forest.selectedNodeIds, node.id)\n      delete this.forest.selectedNodeMap[node.id]\n    },\n\n    removeLastValue() {\n      if (!this.hasValue) return\n      if (this.single) return this.clear()\n      const lastValue = getLast(this.internalValue)\n      const lastSelectedNode = this.getNode(lastValue)\n      this.select(lastSelectedNode) // deselect\n    },\n\n    saveMenuScrollPosition() {\n      const $menu = this.getMenu()\n      // istanbul ignore else\n      if ($menu) this.menu.lastScrollPosition = $menu.scrollTop\n    },\n\n    restoreMenuScrollPosition() {\n      const $menu = this.getMenu()\n      // istanbul ignore else\n      if ($menu) $menu.scrollTop = this.menu.lastScrollPosition\n    },\n  },\n\n  created() {\n    this.verifyProps()\n    this.resetFlags()\n  },\n\n  mounted() {\n    if (this.autoFocus) this.focusInput()\n    if (!this.options && !this.async && this.autoLoadRootOptions) this.loadRootOptions()\n    if (this.alwaysOpen) this.openMenu()\n    if (this.async && this.defaultOptions) this.handleRemoteSearch()\n  },\n\n  destroyed() {\n    // istanbul ignore next\n    this.toggleClickOutsideEvent(false)\n  },\n}\n","<script>\n  import { isNaN } from '../utils'\n\n  function stringifyValue(value) {\n    if (typeof value === 'string') return value\n    // istanbul ignore else\n    if (value != null && !isNaN(value)) return JSON.stringify(value)\n    // istanbul ignore next\n    return ''\n  }\n\n  export default {\n    name: 'vue-treeselect--hidden-fields',\n    inject: [ 'instance' ],\n    functional: true,\n\n    render(_, context) {\n      const { instance } = context.injections\n\n      if (!instance.name || instance.disabled || !instance.hasValue) return null\n\n      let stringifiedValues = instance.internalValue.map(stringifyValue)\n\n      if (instance.multiple && instance.joinValues) stringifiedValues = [\n        stringifiedValues.join(instance.delimiter),\n      ]\n\n      return stringifiedValues.map((stringifiedValue, i) => (\n        <input type=\"hidden\"\n          name={instance.name}\n          value={stringifiedValue}\n          key={'hidden-field-' + i}\n        />\n      ))\n    },\n  }\n</script>\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var render, staticRenderFns\nimport script from \"./HiddenFields.vue?vue&type=script&lang=js&\"\nexport * from \"./HiddenFields.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\dd\\\\Works\\\\Projects\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4d48089a')) {\n      api.createRecord('4d48089a', component.options)\n    } else {\n      api.reload('4d48089a', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/HiddenFields.vue\"\nexport default component.exports","<script>\n  import { debounce, deepExtend, includes } from '../utils'\n  import { MIN_INPUT_WIDTH, KEY_CODES, INPUT_DEBOUNCE_DELAY } from '../constants'\n\n  const keysThatRequireMenuBeingOpen = [\n    KEY_CODES.ENTER,\n    KEY_CODES.END,\n    KEY_CODES.HOME,\n    KEY_CODES.ARROW_LEFT,\n    KEY_CODES.ARROW_UP,\n    KEY_CODES.ARROW_RIGHT,\n    KEY_CODES.ARROW_DOWN,\n  ]\n\n  export default {\n    name: 'vue-treeselect--input',\n    inject: [ 'instance' ],\n\n    data: () => ({\n      inputWidth: MIN_INPUT_WIDTH,\n      value: '',\n    }),\n\n    computed: {\n      needAutoSize() {\n        const { instance } = this\n\n        return (\n          instance.searchable &&\n          !instance.disabled &&\n          instance.multiple\n        )\n      },\n\n      inputStyle() {\n        return {\n          width: this.needAutoSize ? `${this.inputWidth}px` : null,\n        }\n      },\n    },\n\n    watch: {\n      'instance.trigger.searchQuery'(newValue) {\n        this.value = newValue\n      },\n\n      value() {\n        // istanbul ignore else\n        if (this.needAutoSize) this.$nextTick(this.updateInputWidth)\n      },\n    },\n\n    created() {\n      this.debouncedCallback = debounce(\n        this.updateSearchQuery,\n        INPUT_DEBOUNCE_DELAY,\n        { leading: true, trailing: true },\n      )\n    },\n\n    methods: {\n      clear() {\n        this.onInput({\n          target: { value: '' },\n        })\n      },\n\n      focus() {\n        const { instance } = this\n\n        if (!instance.disabled) {\n          this.$refs.input && this.$refs.input.focus()\n        }\n      },\n\n      blur() {\n        this.$refs.input && this.$refs.input.blur()\n      },\n\n      onFocus() {\n        const { instance } = this\n\n        instance.trigger.isFocused = true\n        // istanbul ignore else\n        if (instance.openOnFocus) instance.openMenu()\n      },\n\n      onBlur() {\n        const { instance } = this\n        const menu = instance.getMenu()\n\n        // #15\n        // istanbul ignore next\n        if (menu && document.activeElement === menu) {\n          return this.focus()\n        }\n\n        instance.trigger.isFocused = false\n        instance.closeMenu()\n      },\n\n      onInput(evt) {\n        const { value } = evt.target\n\n        this.value = value\n\n        if (value) {\n          this.debouncedCallback()\n        } else {\n          this.debouncedCallback.cancel()\n          this.updateSearchQuery()\n        }\n      },\n\n      // 用 keyUp 事件存在一个问题，删除输入框最后一个字符也会导致取消选中最后一项\n      onKeyDown(evt) {\n        const { instance } = this\n        // https://css-tricks.com/snippets/javascript/javascript-keycodes/\n        // https://stackoverflow.com/questions/4471582/javascript-keycode-vs-which\n        const key = 'which' in evt ? evt.which : /* istanbul ignore next */ evt.keyCode\n\n        if (evt.ctrlKey || evt.shiftKey || evt.altKey || evt.metaKey)\n          return\n\n        if (!instance.menu.isOpen && includes(keysThatRequireMenuBeingOpen, key)) {\n          evt.preventDefault()\n          return instance.openMenu()\n        }\n\n        switch (key) {\n        case KEY_CODES.BACKSPACE: {\n          if (instance.backspaceRemoves && !this.value.length) {\n            instance.removeLastValue()\n          }\n          break\n        }\n        case KEY_CODES.ENTER: {\n          evt.preventDefault()\n          if (instance.menu.current === null) return\n          const current = instance.getNode(instance.menu.current)\n          if (current.isBranch && instance.disableBranchNodes) return\n          instance.select(current)\n          break\n        }\n        case KEY_CODES.ESCAPE: {\n          if (this.value.length) {\n            this.clear()\n          } else if (instance.menu.isOpen) {\n            instance.closeMenu()\n          }\n          break\n        }\n        case KEY_CODES.END: {\n          evt.preventDefault()\n          instance.highlightLastOption()\n          break\n        }\n        case KEY_CODES.HOME: {\n          evt.preventDefault()\n          instance.highlightFirstOption()\n          break\n        }\n        case KEY_CODES.ARROW_LEFT: {\n          const current = instance.getNode(instance.menu.current)\n          if (current.isBranch && instance.shouldExpand(current)) {\n            evt.preventDefault()\n            instance.toggleExpanded(current)\n          } else if (!current.isRootNode && (current.isLeaf || (current.isBranch && !(instance.shouldExpand(current))))) {\n            evt.preventDefault()\n            instance.setCurrentHighlightedOption(current.parentNode)\n          }\n          break\n        }\n        case KEY_CODES.ARROW_UP: {\n          evt.preventDefault()\n          instance.highlightPrevOption()\n          break\n        }\n        case KEY_CODES.ARROW_RIGHT: {\n          const current = instance.getNode(instance.menu.current)\n          if (current.isBranch && !instance.shouldExpand(current)) {\n            evt.preventDefault()\n            instance.toggleExpanded(current)\n          }\n          break\n        }\n        case KEY_CODES.ARROW_DOWN: {\n          evt.preventDefault()\n          instance.highlightNextOption()\n          break\n        }\n        case KEY_CODES.DELETE: {\n          if (instance.deleteRemoves && !this.value.length) {\n            instance.removeLastValue()\n          }\n          break\n        }\n        default: {\n          // istanbul ignore else\n          instance.openMenu()\n        }\n        }\n      },\n\n      onMouseDown(evt) {\n        // istanbul ignore next\n        if (this.value.length) {\n          // Prevent it from bubbling to the top level and triggering `preventDefault()`\n          // to make the textbox unselectable\n          evt.stopPropagation()\n        }\n      },\n\n      renderInputContainer() {\n        const { instance } = this\n        const props = {}\n        const children = []\n\n        if (instance.searchable && !instance.disabled) {\n          children.push(this.renderInput())\n          if (this.needAutoSize) children.push(this.renderSizer())\n        }\n\n        if (!instance.searchable) {\n          deepExtend(props, {\n            on: {\n              focus: this.onFocus,\n              blur: this.onBlur,\n              keydown: this.onKeyDown,\n            },\n            ref: 'input',\n          })\n        }\n\n        if (!instance.searchable && !instance.disabled) {\n          deepExtend(props, {\n            attrs: {\n              tabIndex: instance.tabIndex,\n            },\n          })\n        }\n\n        return (\n          <div class=\"vue-treeselect__input-container\" {...props}>\n            {children}\n          </div>\n        )\n      },\n\n      renderInput() {\n        const { instance } = this\n\n        return (\n          <input ref=\"input\"\n            class=\"vue-treeselect__input\"\n            type=\"text\"\n            autocomplete=\"off\"\n            tabIndex={instance.tabIndex}\n            required={instance.required && !instance.hasValue}\n            value={this.value}\n            style={this.inputStyle}\n            onFocus={this.onFocus}\n            onInput={this.onInput}\n            onBlur={this.onBlur}\n            onKeydown={this.onKeyDown}\n            onMousedown={this.onMouseDown}\n          />\n        )\n      },\n\n      renderSizer() {\n        return (\n          <div ref=\"sizer\" class=\"vue-treeselect__sizer\">{this.value}</div>\n        )\n      },\n\n      updateInputWidth() {\n        this.inputWidth = Math.max(\n          MIN_INPUT_WIDTH,\n          this.$refs.sizer.scrollWidth + 15,\n        )\n      },\n\n      updateSearchQuery() {\n        const { instance } = this\n\n        instance.trigger.searchQuery = this.value\n      },\n    },\n\n    render() {\n      return this.renderInputContainer()\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./Input.vue?vue&type=script&lang=js&\"\nexport * from \"./Input.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\dd\\\\Works\\\\Projects\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('54844eca')) {\n      api.createRecord('54844eca', component.options)\n    } else {\n      api.reload('54844eca', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Input.vue\"\nexport default component.exports","var render, staticRenderFns\nimport script from \"./Placeholder.vue?vue&type=script&lang=js&\"\nexport * from \"./Placeholder.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\dd\\\\Works\\\\Projects\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('5a99d1f3')) {\n      api.createRecord('5a99d1f3', component.options)\n    } else {\n      api.reload('5a99d1f3', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Placeholder.vue\"\nexport default component.exports","<script>\n  export default {\n    name: 'vue-treeselect--placeholder',\n    inject: [ 'instance' ],\n\n    render() {\n      const { instance } = this\n      const placeholderClass = {\n        'vue-treeselect__placeholder': true,\n        'vue-treeselect-helper-zoom-effect-off': true,\n        'vue-treeselect-helper-hide': instance.hasValue || instance.trigger.searchQuery,\n      }\n\n      return (\n        <div class={placeholderClass}>\n          { instance.placeholder }\n        </div>\n      )\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./SingleValue.vue?vue&type=script&lang=js&\"\nexport * from \"./SingleValue.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\dd\\\\Works\\\\Projects\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('03d19b89')) {\n      api.createRecord('03d19b89', component.options)\n    } else {\n      api.reload('03d19b89', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/SingleValue.vue\"\nexport default component.exports","<script>\n  import Input from './Input'\n  import Placeholder from './Placeholder'\n\n  export default {\n    name: 'vue-treeselect--single-value',\n    inject: [ 'instance' ],\n    methods: {\n      renderSingleValueLabel() {\n        const { instance } = this\n        const node = instance.selectedNodes[0]\n\n        const customValueLabelRenderer = instance.$scopedSlots['value-label']\n        return customValueLabelRenderer\n          ? customValueLabelRenderer({ node })\n          : node.label\n      },\n    },\n    render() {\n      const { instance, $parent: { renderValueContainer } } = this\n      const shouldShowValue = instance.hasValue && !instance.trigger.searchQuery\n\n      return renderValueContainer([\n        shouldShowValue && (\n          <div class=\"vue-treeselect__single-value\">\n            { this.renderSingleValueLabel() }\n          </div>\n        ),\n        <Placeholder />,\n        <Input ref=\"input\" />,\n      ])\n    },\n  }\n</script>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"svg\",\n    {\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 348.333 348.333\"\n      }\n    },\n    [\n      _c(\"path\", {\n        attrs: {\n          d:\n            \"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\"\n        }\n      })\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 348.333 348.333\">\n    <path d=\"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\" />\n  </svg>\n</template>\n\n<script>\n  export default {\n    name: 'vue-treeselect--x',\n  }\n</script>\n","import { render, staticRenderFns } from \"./Delete.vue?vue&type=template&id=364b6320&\"\nimport script from \"./Delete.vue?vue&type=script&lang=js&\"\nexport * from \"./Delete.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\dd\\\\Works\\\\Projects\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('364b6320')) {\n      api.createRecord('364b6320', component.options)\n    } else {\n      api.reload('364b6320', component.options)\n    }\n    module.hot.accept(\"./Delete.vue?vue&type=template&id=364b6320&\", function () {\n      api.rerender('364b6320', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/icons/Delete.vue\"\nexport default component.exports","var render, staticRenderFns\nimport script from \"./MultiValueItem.vue?vue&type=script&lang=js&\"\nexport * from \"./MultiValueItem.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\dd\\\\Works\\\\Projects\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6dd6c8ca')) {\n      api.createRecord('6dd6c8ca', component.options)\n    } else {\n      api.reload('6dd6c8ca', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/MultiValueItem.vue\"\nexport default component.exports","<script>\n  import { onLeftClick } from '../utils'\n  import DeleteIcon from './icons/Delete'\n\n  export default {\n    name: 'vue-treeselect--multi-value-item',\n    inject: [ 'instance' ],\n\n    props: {\n      node: {\n        type: Object,\n        required: true,\n      },\n    },\n\n    methods: {\n      handleMouseDown: onLeftClick(function handleMouseDown() {\n        const { instance, node } = this\n\n        // Deselect this node.\n        instance.select(node)\n      }),\n    },\n\n    render() {\n      const { instance, node } = this\n      const itemClass = {\n        'vue-treeselect__multi-value-item': true,\n        'vue-treeselect__multi-value-item-disabled': node.isDisabled,\n        'vue-treeselect__multi-value-item-new': node.isNew,\n      }\n      const customValueLabelRenderer = instance.$scopedSlots['value-label']\n      const labelRenderer = customValueLabelRenderer ? customValueLabelRenderer({ node }) : node.label\n\n      return (\n        <div class=\"vue-treeselect__multi-value-item-container\">\n          <div class={itemClass} onMousedown={this.handleMouseDown}>\n            <span class=\"vue-treeselect__multi-value-label\">{ labelRenderer }</span>\n            <span class=\"vue-treeselect__icon vue-treeselect__value-remove\"><DeleteIcon /></span>\n          </div>\n        </div>\n      )\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./MultiValue.vue?vue&type=script&lang=js&\"\nexport * from \"./MultiValue.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\dd\\\\Works\\\\Projects\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('14fca5e8')) {\n      api.createRecord('14fca5e8', component.options)\n    } else {\n      api.reload('14fca5e8', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/MultiValue.vue\"\nexport default component.exports","<script>\n  import MultiValueItem from './MultiValueItem'\n  import Input from './Input'\n  import Placeholder from './Placeholder'\n\n  export default {\n    name: 'vue-treeselect--multi-value',\n    inject: [ 'instance' ],\n\n    methods: {\n      renderMultiValueItems() {\n        const { instance } = this\n\n        return instance.internalValue\n          .slice(0, instance.limit)\n          .map(instance.getNode)\n          .map(node => (\n            <MultiValueItem key={`multi-value-item-${node.id}`} node={node} />\n          ))\n      },\n\n      renderExceedLimitTip() {\n        const { instance } = this\n        const count = instance.internalValue.length - instance.limit\n\n        if (count <= 0) return null\n\n        return (\n          <div class=\"vue-treeselect__limit-tip vue-treeselect-helper-zoom-effect-off\" key=\"exceed-limit-tip\">\n            <span class=\"vue-treeselect__limit-tip-text\">{ instance.limitText(count) }</span>\n          </div>\n        )\n      },\n    },\n\n    render() {\n      const { renderValueContainer } = this.$parent\n      const transitionGroupProps = {\n        props: {\n          tag: 'div',\n          name: 'vue-treeselect__multi-value-item--transition',\n          appear: true,\n        },\n      }\n\n      return renderValueContainer(\n        <transition-group class=\"vue-treeselect__multi-value\" {...transitionGroupProps}>\n          {this.renderMultiValueItems()}\n          {this.renderExceedLimitTip()}\n          <Placeholder key=\"placeholder\" />\n          <Input ref=\"input\" key=\"input\" />\n        </transition-group>,\n      )\n    },\n  }\n</script>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"svg\",\n    {\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 292.362 292.362\"\n      }\n    },\n    [\n      _c(\"path\", {\n        attrs: {\n          d:\n            \"M286.935 69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952 0-9.233 1.807-12.85 5.424C1.807 72.998 0 77.279 0 82.228c0 4.948 1.807 9.229 5.424 12.847l127.907 127.907c3.621 3.617 7.902 5.428 12.85 5.428s9.233-1.811 12.847-5.428L286.935 95.074c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.229-5.427-12.85z\"\n        }\n      })\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 292.362 292.362\">\n    <path d=\"M286.935 69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952 0-9.233 1.807-12.85 5.424C1.807 72.998 0 77.279 0 82.228c0 4.948 1.807 9.229 5.424 12.847l127.907 127.907c3.621 3.617 7.902 5.428 12.85 5.428s9.233-1.811 12.847-5.428L286.935 95.074c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.229-5.427-12.85z\" />\n  </svg>\n</template>\n\n<script>\n  export default {\n    name: 'vue-treeselect--arrow',\n  }\n</script>\n","import { render, staticRenderFns } from \"./Arrow.vue?vue&type=template&id=11186cd4&\"\nimport script from \"./Arrow.vue?vue&type=script&lang=js&\"\nexport * from \"./Arrow.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\dd\\\\Works\\\\Projects\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('11186cd4')) {\n      api.createRecord('11186cd4', component.options)\n    } else {\n      api.reload('11186cd4', component.options)\n    }\n    module.hot.accept(\"./Arrow.vue?vue&type=template&id=11186cd4&\", function () {\n      api.rerender('11186cd4', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/icons/Arrow.vue\"\nexport default component.exports","var render, staticRenderFns\nimport script from \"./Control.vue?vue&type=script&lang=js&\"\nexport * from \"./Control.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\dd\\\\Works\\\\Projects\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2fa0a0dd')) {\n      api.createRecord('2fa0a0dd', component.options)\n    } else {\n      api.reload('2fa0a0dd', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Control.vue\"\nexport default component.exports","<script>\n  import { onLeftClick, isPromise } from '../utils'\n  import SingleValue from './SingleValue'\n  import MultiValue from './MultiValue'\n  import DeleteIcon from './icons/Delete'\n  import ArrowIcon from './icons/Arrow'\n\n  export default {\n    name: 'vue-treeselect--control',\n    inject: [ 'instance' ],\n\n    computed: {\n      /* eslint-disable valid-jsdoc */\n      /**\n       * Should show the \"×\" button that resets value?\n       * @return {boolean}\n       */\n      shouldShowX() {\n        const { instance } = this\n\n        return (\n          instance.clearable &&\n          !instance.disabled &&\n          instance.hasValue &&\n          (this.hasUndisabledValue || instance.allowClearingDisabled)\n        )\n      },\n\n      /**\n       * Should show the arrow button that toggles menu?\n       * @return {boolean}\n       */\n      shouldShowArrow() {\n        const { instance } = this\n\n        if (!instance.alwaysOpen) return true\n        // Even with `alwaysOpen: true`, sometimes the menu is still closed,\n        // e.g. when the control is disabled.\n        return !instance.menu.isOpen\n      },\n\n      /**\n       * Has any undisabled option been selected?\n       * @type {boolean}\n       */\n      hasUndisabledValue() {\n        const { instance } = this\n\n        return (\n          instance.hasValue &&\n          instance.internalValue.some(id => !instance.getNode(id).isDisabled)\n        )\n      },\n      /* eslint-enable valid-jsdoc */\n    },\n\n    methods: {\n      renderX() {\n        const { instance } = this\n        const title = instance.multiple ? instance.clearAllText : instance.clearValueText\n\n        if (!this.shouldShowX) return null\n\n        return (\n          <div class=\"vue-treeselect__x-container\" title={title} onMousedown={this.handleMouseDownOnX}>\n            <DeleteIcon class=\"vue-treeselect__x\" />\n          </div>\n        )\n      },\n\n      renderArrow() {\n        const { instance } = this\n        const arrowClass = {\n          'vue-treeselect__control-arrow': true,\n          'vue-treeselect__control-arrow--rotated': instance.menu.isOpen,\n        }\n\n        if (!this.shouldShowArrow) return null\n\n        return (\n          <div class=\"vue-treeselect__control-arrow-container\" onMousedown={this.handleMouseDownOnArrow}>\n            <ArrowIcon class={arrowClass} />\n          </div>\n        )\n      },\n\n      handleMouseDownOnX: onLeftClick(function handleMouseDownOnX(evt) {\n        /**\n         * We don't use async/await here because we don't want\n         * to rely on Babel polyfill or regenerator runtime.\n         * See: https://babeljs.io/docs/plugins/transform-regenerator/\n         * We also don't want to assume there is a global `Promise`\n         * class, since we are targeting to support IE9 without the\n         * need of any polyfill.\n         */\n\n        evt.stopPropagation()\n        evt.preventDefault()\n\n        const { instance } = this\n        const result = instance.beforeClearAll()\n        const handler = shouldClear => {\n          if (shouldClear) instance.clear()\n        }\n\n        if (isPromise(result)) {\n          // The handler will be called async.\n          result.then(handler)\n        } else {\n          // Keep the same behavior here.\n          setTimeout(() => handler(result), 0)\n          // Also, note that IE9 requires:\n          //   setTimeout(() => fn(...args), delay)\n          // Instead of:\n          //   setTimeout(fn, delay, ...args)\n        }\n      }),\n\n      handleMouseDownOnArrow: onLeftClick(function handleMouseDownOnArrow(evt) {\n        evt.preventDefault()\n        evt.stopPropagation()\n\n        const { instance } = this\n\n        // Focus the input or prevent blurring.\n        instance.focusInput()\n        instance.toggleMenu()\n      }),\n\n      // This is meant to be called by child `<Value />` component.\n      renderValueContainer(children) {\n        return (\n          <div class=\"vue-treeselect__value-container\">\n            {children}\n          </div>\n        )\n      },\n    },\n\n    render() {\n      const { instance } = this\n      const ValueContainer = instance.single ? SingleValue : MultiValue\n\n      return (\n        <div class=\"vue-treeselect__control\" onMousedown={instance.handleMouseDown}>\n          <ValueContainer ref=\"value-container\" />\n          {this.renderX()}\n          {this.renderArrow()}\n        </div>\n      )\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./Tip.vue?vue&type=script&lang=js&\"\nexport * from \"./Tip.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\dd\\\\Works\\\\Projects\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('9f31bdca')) {\n      api.createRecord('9f31bdca', component.options)\n    } else {\n      api.reload('9f31bdca', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Tip.vue\"\nexport default component.exports","<script>\n  export default {\n    name: 'vue-treeselect--tip',\n    functional: true,\n\n    props: {\n      type: {\n        type: String,\n        required: true,\n      },\n      icon: {\n        type: String,\n        required: true,\n      },\n    },\n\n    render(_, context) {\n      const { props, children } = context\n\n      return (\n        <div class={`vue-treeselect__tip vue-treeselect__${props.type}-tip`}>\n          <div class=\"vue-treeselect__icon-container\">\n            <span class={`vue-treeselect__icon-${props.icon}`} />\n          </div>\n          <span class={`vue-treeselect__tip-text vue-treeselect__${props.type}-tip-text`}>\n            {children}\n          </span>\n        </div>\n      )\n    },\n  }\n</script>\n","<script>\n  import { UNCHECKED, INDETERMINATE, CHECKED } from '../constants'\n  import { onLeftClick } from '../utils'\n  import Tip from './Tip'\n  import ArrowIcon from './icons/Arrow'\n\n  let arrowPlaceholder, checkMark, minusMark\n\n  const Option = {\n    name: 'vue-treeselect--option',\n    inject: [ 'instance' ],\n\n    props: {\n      node: {\n        type: Object,\n        required: true,\n      },\n    },\n\n    computed: {\n      shouldExpand() {\n        const { instance, node } = this\n\n        return node.isBranch && instance.shouldExpand(node)\n      },\n\n      shouldShow() {\n        const { instance, node } = this\n\n        return instance.shouldShowOptionInMenu(node)\n      },\n    },\n\n    methods: {\n      renderOption() {\n        const { instance, node } = this\n        const optionClass = {\n          'vue-treeselect__option': true,\n          'vue-treeselect__option--disabled': node.isDisabled,\n          'vue-treeselect__option--selected': instance.isSelected(node),\n          'vue-treeselect__option--highlight': node.isHighlighted,\n          'vue-treeselect__option--matched': instance.localSearch.active && node.isMatched,\n          'vue-treeselect__option--hide': !this.shouldShow,\n        }\n\n        return (\n          <div class={optionClass} onMouseenter={this.handleMouseEnterOption} data-id={node.id}>\n            {this.renderArrow()}\n            {this.renderLabelContainer([\n              this.renderCheckboxContainer([\n                this.renderCheckbox(),\n              ]),\n              this.renderLabel(),\n            ])}\n          </div>\n        )\n      },\n\n      renderSubOptionsList() {\n        if (!this.shouldExpand) return null\n\n        return (\n          <div class=\"vue-treeselect__list\">\n            {this.renderSubOptions()}\n            {this.renderNoChildrenTip()}\n            {this.renderLoadingChildrenTip()}\n            {this.renderLoadingChildrenErrorTip()}\n          </div>\n        )\n      },\n\n      renderArrow() {\n        const { instance, node } = this\n\n        if (instance.shouldFlattenOptions && this.shouldShow) return null\n\n        if (node.isBranch) {\n          const transitionProps = {\n            props: {\n              name: 'vue-treeselect__option-arrow--prepare',\n              appear: true,\n            },\n          }\n          const arrowClass = {\n            'vue-treeselect__option-arrow': true,\n            'vue-treeselect__option-arrow--rotated': this.shouldExpand,\n          }\n\n          return (\n            <div class=\"vue-treeselect__option-arrow-container\" onMousedown={this.handleMouseDownOnArrow}>\n              <transition {...transitionProps}>\n                <ArrowIcon class={arrowClass} />\n              </transition>\n            </div>\n          )\n        }\n\n        // For leaf nodes, we render a placeholder to keep its label aligned to\n        // branch nodes. Unless there is no branch nodes at all (a normal\n        // non-tree select).\n        if (/*node.isLeaf && */instance.hasBranchNodes) {\n          if (!arrowPlaceholder) arrowPlaceholder = (\n            <div class=\"vue-treeselect__option-arrow-placeholder\">&nbsp;</div>\n          )\n\n          return arrowPlaceholder\n        }\n\n        return null\n      },\n\n      renderLabelContainer(children) {\n        return (\n          <div class=\"vue-treeselect__label-container\" onMousedown={this.handleMouseDownOnLabelContainer}>\n            {children}\n          </div>\n        )\n      },\n\n      renderCheckboxContainer(children) {\n        const { instance, node } = this\n\n        if (instance.single) return null\n        if (instance.disableBranchNodes && node.isBranch) return null\n\n        return (\n          <div class=\"vue-treeselect__checkbox-container\">\n            {children}\n          </div>\n        )\n      },\n\n      renderCheckbox() {\n        const { instance, node } = this\n        const checkedState = instance.forest.checkedStateMap[node.id]\n        const checkboxClass = {\n          'vue-treeselect__checkbox': true,\n          'vue-treeselect__checkbox--checked': checkedState === CHECKED,\n          'vue-treeselect__checkbox--indeterminate': checkedState === INDETERMINATE,\n          'vue-treeselect__checkbox--unchecked': checkedState === UNCHECKED,\n          'vue-treeselect__checkbox--disabled': node.isDisabled,\n        }\n\n        if (!checkMark) checkMark = (\n          <span class=\"vue-treeselect__check-mark\" />\n        )\n        if (!minusMark) minusMark = (\n          <span class=\"vue-treeselect__minus-mark\" />\n        )\n\n        return (\n          <span class={checkboxClass}>\n            {checkMark}\n            {minusMark}\n          </span>\n        )\n      },\n\n      renderLabel() {\n        const { instance, node } = this\n        const shouldShowCount = (\n          node.isBranch && (instance.localSearch.active\n            ? instance.showCountOnSearchComputed\n            : instance.showCount\n          )\n        )\n        const count = shouldShowCount\n          ? instance.localSearch.active\n            ? instance.localSearch.countMap[node.id][instance.showCountOf]\n            : node.count[instance.showCountOf]\n          : NaN\n        const labelClassName = 'vue-treeselect__label'\n        const countClassName = 'vue-treeselect__count'\n        const customLabelRenderer = instance.$scopedSlots['option-label']\n\n        if (customLabelRenderer) return customLabelRenderer({\n          node,\n          shouldShowCount,\n          count,\n          labelClassName,\n          countClassName,\n        })\n\n        return (\n          <label class={labelClassName}>\n            {node.label}\n            {shouldShowCount && (\n              <span class={countClassName}>({count})</span>\n            )}\n          </label>\n        )\n      },\n\n      renderSubOptions() {\n        const { node } = this\n\n        if (!node.childrenStates.isLoaded) return null\n\n        return node.children.map(childNode => (\n          <Option node={childNode} key={childNode.id} />\n        ))\n      },\n\n      renderNoChildrenTip() {\n        const { instance, node } = this\n\n        if (!node.childrenStates.isLoaded || node.children.length) return null\n\n        return (\n          <Tip type=\"no-children\" icon=\"warning\">{ instance.noChildrenText }</Tip>\n        )\n      },\n\n      renderLoadingChildrenTip() {\n        const { instance, node } = this\n\n        if (!node.childrenStates.isLoading) return null\n\n        return (\n          <Tip type=\"loading\" icon=\"loader\">{ instance.loadingText }</Tip>\n        )\n      },\n\n      renderLoadingChildrenErrorTip() {\n        const { instance, node } = this\n\n        if (!node.childrenStates.loadingError) return null\n\n        return (\n          <Tip type=\"error\" icon=\"error\">\n            { node.childrenStates.loadingError }\n            <a class=\"vue-treeselect__retry\" title={instance.retryTitle} onMousedown={this.handleMouseDownOnRetry}>\n              { instance.retryText }\n            </a>\n          </Tip>\n        )\n      },\n\n      handleMouseEnterOption(evt) {\n        const { instance, node } = this\n\n        // Equivalent to `self` modifier.\n        // istanbul ignore next\n        if (evt.target !== evt.currentTarget) return\n\n        instance.setCurrentHighlightedOption(node, false)\n      },\n\n      handleMouseDownOnArrow: onLeftClick(function handleMouseDownOnOptionArrow() {\n        const { instance, node } = this\n\n        instance.toggleExpanded(node)\n      }),\n\n      handleMouseDownOnLabelContainer: onLeftClick(function handleMouseDownOnLabelContainer() {\n        const { instance, node } = this\n\n        if (node.isBranch && instance.disableBranchNodes) {\n          instance.toggleExpanded(node)\n        } else {\n          instance.select(node)\n        }\n      }),\n\n      handleMouseDownOnRetry: onLeftClick(function handleMouseDownOnRetry() {\n        const { instance, node } = this\n\n        instance.loadChildrenOptions(node)\n      }),\n    },\n\n    render() {\n      const { node } = this\n      const indentLevel = this.instance.shouldFlattenOptions ? 0 : node.level\n      const listItemClass = {\n        'vue-treeselect__list-item': true,\n        [`vue-treeselect__indent-level-${indentLevel}`]: true,\n      }\n      const transitionProps = {\n        props: {\n          name: 'vue-treeselect__list--transition',\n        },\n      }\n\n      return (\n        <div class={listItemClass}>\n          {this.renderOption()}\n          {node.isBranch && (\n            <transition {...transitionProps}>\n              {this.renderSubOptionsList()}\n            </transition>\n          )}\n        </div>\n      )\n    },\n  }\n\n  // eslint-disable-next-line vue/require-direct-export\n  export default Option\n</script>\n","var render, staticRenderFns\nimport script from \"./Option.vue?vue&type=script&lang=js&\"\nexport * from \"./Option.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\dd\\\\Works\\\\Projects\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('3dddec25')) {\n      api.createRecord('3dddec25', component.options)\n    } else {\n      api.reload('3dddec25', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Option.vue\"\nexport default component.exports","<script>\n  import { MENU_BUFFER } from '../constants'\n  import { watchSize, setupResizeAndScrollEventListeners } from '../utils'\n  import Option from './Option'\n  import Tip from './Tip'\n\n  const directionMap = {\n    top: 'top',\n    bottom: 'bottom',\n    above: 'top',\n    below: 'bottom',\n  }\n\n  export default {\n    name: 'vue-treeselect--menu',\n    inject: [ 'instance' ],\n\n    computed: {\n      menuStyle() {\n        const { instance } = this\n\n        return {\n          maxHeight: instance.maxHeight + 'px',\n        }\n      },\n\n      menuContainerStyle() {\n        const { instance } = this\n\n        return {\n          zIndex: instance.appendToBody ? null : instance.zIndex,\n        }\n      },\n    },\n\n    watch: {\n      'instance.menu.isOpen'(newValue) {\n        if (newValue) {\n          // In case `openMenu()` is just called and the menu is not rendered yet.\n          this.$nextTick(this.onMenuOpen)\n        } else {\n          this.onMenuClose()\n        }\n      },\n    },\n\n    created() {\n      this.menuSizeWatcher = null\n      this.menuResizeAndScrollEventListeners = null\n    },\n\n    mounted() {\n      const { instance } = this\n\n      if (instance.menu.isOpen) this.$nextTick(this.onMenuOpen)\n    },\n\n    destroyed() {\n      this.onMenuClose()\n    },\n\n    methods: {\n      renderMenu() {\n        const { instance } = this\n\n        if (!instance.menu.isOpen) return null\n\n        return (\n          <div ref=\"menu\" class=\"vue-treeselect__menu\" onMousedown={instance.handleMouseDown} style={this.menuStyle}>\n            {this.renderBeforeList()}\n            {instance.async\n              ? this.renderAsyncSearchMenuInner()\n              : instance.localSearch.active\n                ? this.renderLocalSearchMenuInner()\n                : this.renderNormalMenuInner()}\n            {this.renderAfterList()}\n          </div>\n        )\n      },\n\n      renderBeforeList() {\n        const { instance } = this\n        const beforeListRenderer = instance.$scopedSlots['before-list']\n\n        return beforeListRenderer\n          ? beforeListRenderer()\n          : null\n      },\n\n      renderAfterList() {\n        const { instance } = this\n        const afterListRenderer = instance.$scopedSlots['after-list']\n\n        return afterListRenderer\n          ? afterListRenderer()\n          : null\n      },\n\n      renderNormalMenuInner() {\n        const { instance } = this\n\n        if (instance.rootOptionsStates.isLoading) {\n          return this.renderLoadingOptionsTip()\n        } else if (instance.rootOptionsStates.loadingError) {\n          return this.renderLoadingRootOptionsErrorTip()\n        } else if (instance.rootOptionsStates.isLoaded && instance.forest.normalizedOptions.length === 0) {\n          return this.renderNoAvailableOptionsTip()\n        } else {\n          return this.renderOptionList()\n        }\n      },\n\n      renderLocalSearchMenuInner() {\n        const { instance } = this\n\n        if (instance.rootOptionsStates.isLoading) {\n          return this.renderLoadingOptionsTip()\n        } else if (instance.rootOptionsStates.loadingError) {\n          return this.renderLoadingRootOptionsErrorTip()\n        } else if (instance.rootOptionsStates.isLoaded && instance.forest.normalizedOptions.length === 0) {\n          return this.renderNoAvailableOptionsTip()\n        } else if (instance.localSearch.noResults) {\n          return this.renderNoResultsTip()\n        } else {\n          return this.renderOptionList()\n        }\n      },\n\n      renderAsyncSearchMenuInner() {\n        const { instance } = this\n        const entry = instance.getRemoteSearchEntry()\n        const shouldShowSearchPromptTip = instance.trigger.searchQuery === '' && !instance.defaultOptions\n        const shouldShowNoResultsTip = shouldShowSearchPromptTip\n          ? false\n          : entry.isLoaded && entry.options.length === 0\n\n        if (shouldShowSearchPromptTip) {\n          return this.renderSearchPromptTip()\n        } else if (entry.isLoading) {\n          return this.renderLoadingOptionsTip()\n        } else if (entry.loadingError) {\n          return this.renderAsyncSearchLoadingErrorTip()\n        } else if (shouldShowNoResultsTip) {\n          return this.renderNoResultsTip()\n        } else {\n          return this.renderOptionList()\n        }\n      },\n\n      renderOptionList() {\n        const { instance } = this\n\n        return (\n          <div class=\"vue-treeselect__list\">\n            {instance.forest.normalizedOptions.map(rootNode => (\n              <Option node={rootNode} key={rootNode.id} />\n            ))}\n          </div>\n        )\n      },\n\n      renderSearchPromptTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"search-prompt\" icon=\"warning\">{ instance.searchPromptText }</Tip>\n        )\n      },\n\n      renderLoadingOptionsTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"loading\" icon=\"loader\">{ instance.loadingText }</Tip>\n        )\n      },\n\n      renderLoadingRootOptionsErrorTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"error\" icon=\"error\">\n            { instance.rootOptionsStates.loadingError }\n            <a class=\"vue-treeselect__retry\" onClick={instance.loadRootOptions} title={instance.retryTitle}>\n              { instance.retryText }\n            </a>\n          </Tip>\n        )\n      },\n\n      renderAsyncSearchLoadingErrorTip() {\n        const { instance } = this\n        const entry = instance.getRemoteSearchEntry()\n\n        // TODO: retryTitle?\n\n        return (\n          <Tip type=\"error\" icon=\"error\">\n            { entry.loadingError }\n            <a class=\"vue-treeselect__retry\" onClick={instance.handleRemoteSearch} title={instance.retryTitle}>\n              { instance.retryText }\n            </a>\n          </Tip>\n        )\n      },\n\n      renderNoAvailableOptionsTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"no-options\" icon=\"warning\">{ instance.noOptionsText }</Tip>\n        )\n      },\n\n      renderNoResultsTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"no-results\" icon=\"warning\">{ instance.noResultsText }</Tip>\n        )\n      },\n\n      onMenuOpen() {\n        this.adjustMenuOpenDirection()\n        this.setupMenuSizeWatcher()\n        this.setupMenuResizeAndScrollEventListeners()\n      },\n\n      onMenuClose() {\n        this.removeMenuSizeWatcher()\n        this.removeMenuResizeAndScrollEventListeners()\n      },\n\n      adjustMenuOpenDirection() {\n        const { instance } = this\n        if (!instance.menu.isOpen) return\n\n        const $menu = instance.getMenu()\n        const $control = instance.getControl()\n        const menuRect = $menu.getBoundingClientRect()\n        const controlRect = $control.getBoundingClientRect()\n        const menuHeight = menuRect.height\n        const viewportHeight = window.innerHeight\n        const spaceAbove = controlRect.top\n        const spaceBelow = window.innerHeight - controlRect.bottom\n        const isControlInViewport = (\n          (controlRect.top >= 0 && controlRect.top <= viewportHeight) ||\n          (controlRect.top < 0 && controlRect.bottom > 0)\n        )\n        const hasEnoughSpaceBelow = spaceBelow > menuHeight + MENU_BUFFER\n        const hasEnoughSpaceAbove = spaceAbove > menuHeight + MENU_BUFFER\n\n        if (!isControlInViewport) {\n          instance.closeMenu()\n        } else if (instance.openDirection !== 'auto') {\n          instance.menu.placement = directionMap[instance.openDirection]\n        } else if (hasEnoughSpaceBelow || !hasEnoughSpaceAbove) {\n          instance.menu.placement = 'bottom'\n        } else {\n          instance.menu.placement = 'top'\n        }\n      },\n\n      setupMenuSizeWatcher() {\n        const { instance } = this\n        const $menu = instance.getMenu()\n\n        // istanbul ignore next\n        if (this.menuSizeWatcher) return\n\n        this.menuSizeWatcher = {\n          remove: watchSize($menu, this.adjustMenuOpenDirection),\n        }\n      },\n\n      setupMenuResizeAndScrollEventListeners() {\n        const { instance } = this\n        const $control = instance.getControl()\n\n        // istanbul ignore next\n        if (this.menuResizeAndScrollEventListeners) return\n\n        this.menuResizeAndScrollEventListeners = {\n          remove: setupResizeAndScrollEventListeners($control, this.adjustMenuOpenDirection),\n        }\n      },\n\n      removeMenuSizeWatcher() {\n        if (!this.menuSizeWatcher) return\n\n        this.menuSizeWatcher.remove()\n        this.menuSizeWatcher = null\n      },\n\n      removeMenuResizeAndScrollEventListeners() {\n        if (!this.menuResizeAndScrollEventListeners) return\n\n        this.menuResizeAndScrollEventListeners.remove()\n        this.menuResizeAndScrollEventListeners = null\n      },\n    },\n\n    render() {\n      return (\n        <div ref=\"menu-container\" class=\"vue-treeselect__menu-container\" style={this.menuContainerStyle}>\n          <transition name=\"vue-treeselect__menu--transition\">\n            {this.renderMenu()}\n          </transition>\n        </div>\n      )\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./Menu.vue?vue&type=script&lang=js&\"\nexport * from \"./Menu.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\dd\\\\Works\\\\Projects\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('9bcc0be2')) {\n      api.createRecord('9bcc0be2', component.options)\n    } else {\n      api.reload('9bcc0be2', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Menu.vue\"\nexport default component.exports","<script>\n  import Vue from 'vue'\n  import { watchSize, setupResizeAndScrollEventListeners, find } from '../utils'\n  import Menu from './Menu'\n\n  const PortalTarget = {\n    name: 'vue-treeselect--portal-target',\n    inject: [ 'instance' ],\n\n    watch: {\n      'instance.menu.isOpen'(newValue) {\n        if (newValue) {\n          this.setupHandlers()\n        } else {\n          this.removeHandlers()\n        }\n      },\n\n      'instance.menu.placement'() {\n        this.updateMenuContainerOffset()\n      },\n    },\n\n    created() {\n      this.controlResizeAndScrollEventListeners = null\n      this.controlSizeWatcher = null\n    },\n\n    mounted() {\n      const { instance } = this\n\n      if (instance.menu.isOpen) this.setupHandlers()\n    },\n\n    methods: {\n      setupHandlers() {\n        this.updateWidth()\n        this.updateMenuContainerOffset()\n        this.setupControlResizeAndScrollEventListeners()\n        this.setupControlSizeWatcher()\n      },\n\n      removeHandlers() {\n        this.removeControlResizeAndScrollEventListeners()\n        this.removeControlSizeWatcher()\n      },\n\n      setupControlResizeAndScrollEventListeners() {\n        const { instance } = this\n        const $control = instance.getControl()\n\n        // istanbul ignore next\n        if (this.controlResizeAndScrollEventListeners) return\n\n        this.controlResizeAndScrollEventListeners = {\n          remove: setupResizeAndScrollEventListeners($control, this.updateMenuContainerOffset),\n        }\n      },\n\n      setupControlSizeWatcher() {\n        const { instance } = this\n        const $control = instance.getControl()\n\n        // istanbul ignore next\n        if (this.controlSizeWatcher) return\n\n        this.controlSizeWatcher = {\n          remove: watchSize($control, () => {\n            this.updateWidth()\n            this.updateMenuContainerOffset()\n          }),\n        }\n      },\n\n      removeControlResizeAndScrollEventListeners() {\n        if (!this.controlResizeAndScrollEventListeners) return\n\n        this.controlResizeAndScrollEventListeners.remove()\n        this.controlResizeAndScrollEventListeners = null\n      },\n\n      removeControlSizeWatcher() {\n        if (!this.controlSizeWatcher) return\n\n        this.controlSizeWatcher.remove()\n        this.controlSizeWatcher = null\n      },\n\n      updateWidth() {\n        const { instance } = this\n        const $portalTarget = this.$el\n        const $control = instance.getControl()\n        const controlRect = $control.getBoundingClientRect()\n\n        $portalTarget.style.width = controlRect.width + 'px'\n      },\n\n      updateMenuContainerOffset() {\n        const { instance } = this\n        const $control = instance.getControl()\n        const $portalTarget = this.$el\n        const controlRect = $control.getBoundingClientRect()\n        const portalTargetRect = $portalTarget.getBoundingClientRect()\n        const offsetY = instance.menu.placement === 'bottom' ? controlRect.height : 0\n        const left = Math.round(controlRect.left - portalTargetRect.left) + 'px'\n        const top = Math.round(controlRect.top - portalTargetRect.top + offsetY) + 'px'\n        const menuContainerStyle = this.$refs.menu.$refs['menu-container'].style\n        const transformVariations = [ 'transform', 'webkitTransform', 'MozTransform', 'msTransform' ]\n        const transform = find(transformVariations, t => t in document.body.style)\n\n        // IE9 doesn't support `translate3d()`.\n        menuContainerStyle[transform] = `translate(${left}, ${top})`\n      },\n    },\n\n    render() {\n      const { instance } = this\n      const portalTargetClass = [ 'vue-treeselect__portal-target', instance.wrapperClass ]\n      const portalTargetStyle = { zIndex: instance.zIndex }\n\n      return (\n        <div class={portalTargetClass} style={portalTargetStyle} data-instance-id={instance.getInstanceId()}>\n          <Menu ref=\"menu\" />\n        </div>\n      )\n    },\n\n    destroyed() {\n      this.removeHandlers()\n    },\n  }\n\n  let placeholder\n\n  export default {\n    name: 'vue-treeselect--menu-portal',\n\n    created() {\n      this.portalTarget = null\n    },\n\n    mounted() {\n      this.setup()\n    },\n\n    destroyed() {\n      this.teardown()\n    },\n\n    methods: {\n      setup() {\n        const el = document.createElement('div')\n        document.body.appendChild(el)\n\n        this.portalTarget = new Vue({\n          el,\n          parent: this,\n          ...PortalTarget,\n        })\n      },\n\n      teardown() {\n        document.body.removeChild(this.portalTarget.$el)\n        this.portalTarget.$el.innerHTML = ''\n\n        this.portalTarget.$destroy()\n        this.portalTarget = null\n      },\n    },\n\n    render() {\n      if (!placeholder) placeholder = (\n        <div class=\"vue-treeselect__menu-placeholder\" />\n      )\n\n      return placeholder\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./MenuPortal.vue?vue&type=script&lang=js&\"\nexport * from \"./MenuPortal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\dd\\\\Works\\\\Projects\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4802d94a')) {\n      api.createRecord('4802d94a', component.options)\n    } else {\n      api.reload('4802d94a', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/MenuPortal.vue\"\nexport default component.exports","var render, staticRenderFns\nimport script from \"./Treeselect.vue?vue&type=script&lang=js&\"\nexport * from \"./Treeselect.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\dd\\\\Works\\\\Projects\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('aebf116c')) {\n      api.createRecord('aebf116c', component.options)\n    } else {\n      api.reload('aebf116c', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Treeselect.vue\"\nexport default component.exports","<script>\n  import treeselectMixin from '../mixins/treeselectMixin'\n  import HiddenFields from './HiddenFields'\n  import Control from './Control'\n  import Menu from './Menu'\n  import MenuPortal from './MenuPortal'\n\n  export default {\n    name: 'vue-treeselect',\n    mixins: [ treeselectMixin ],\n\n    computed: {\n      wrapperClass() {\n        return {\n          'vue-treeselect': true,\n          'vue-treeselect--single': this.single,\n          'vue-treeselect--multi': this.multiple,\n          'vue-treeselect--searchable': this.searchable,\n          'vue-treeselect--disabled': this.disabled,\n          'vue-treeselect--focused': this.trigger.isFocused,\n          'vue-treeselect--has-value': this.hasValue,\n          'vue-treeselect--open': this.menu.isOpen,\n          'vue-treeselect--open-above': this.menu.placement === 'top',\n          'vue-treeselect--open-below': this.menu.placement === 'bottom',\n          'vue-treeselect--branch-nodes-disabled': this.disableBranchNodes,\n          'vue-treeselect--append-to-body': this.appendToBody,\n        }\n      },\n    },\n\n    render() {\n      return (\n        <div ref=\"wrapper\" class={this.wrapperClass}>\n          <HiddenFields />\n          <Control ref=\"control\" />\n          {this.appendToBody ? <MenuPortal ref=\"portal\" /> : <Menu ref=\"menu\" />}\n        </div>\n      )\n    },\n  }\n</script>\n","import Treeselect from './components/Treeselect'\nimport treeselectMixin from './mixins/treeselectMixin'\nimport './style.less'\n\nexport default Treeselect\nexport { Treeselect, treeselectMixin }\nexport {\n  // Delayed loading.\n  LOAD_ROOT_OPTIONS,\n  LOAD_CHILDREN_OPTIONS,\n  ASYNC_SEARCH,\n} from './constants'\n\nexport const VERSION = PKG_VERSION\n"],"sourceRoot":""}